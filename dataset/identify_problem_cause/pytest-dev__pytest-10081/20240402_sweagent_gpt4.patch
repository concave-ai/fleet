
diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py
index 851e4943b..1ea27685e 100644
--- a/src/_pytest/unittest.py
+++ b/src/_pytest/unittest.py
@@ -316,11 +316,11 @@ class TestCaseFunction(Function):
             # Arguably we could always postpone tearDown(), but this changes the moment where the
             # TestCase instance interacts with the results object, so better to only do it
             # when absolutely needed.
-            if self.config.getoption("usepdb") and not _is_skipped(self.obj):
+            if self.config.getoption("usepdb"):
+                if _is_skipped(self.obj):
+                    return
                 self._explicit_tearDown = self._testcase.tearDown
                 setattr(self._testcase, "tearDown", lambda *args: None)
-
-            # We need to update the actual bound method with self.obj, because
             # wrap_pytest_function_for_tracing replaces self.obj by a wrapper.
             setattr(self._testcase, self.name, self.obj)
             try:
diff --git a/test_repro_skip_class.py b/test_repro_skip_class.py
new file mode 100644
index 000000000..62b501580
--- /dev/null
+++ b/test_repro_skip_class.py
@@ -0,0 +1,14 @@
+import unittest
+
+def xxx():
+    raise Exception("This is a dummy exception for testing purposes.")
+
+@unittest.skip("hello")
+class MyTestCase(unittest.TestCase):
+    def setUp(self):
+        xxx()
+    def test_one(self):
+        pass
+    def tearDown(self):
+        xxx()
+print("Script completed successfully, no errors.")
