
diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py
index 560548aea..05abd9e55 100644
--- a/src/_pytest/nodes.py
+++ b/src/_pytest/nodes.py
@@ -262,14 +262,16 @@ class Node(metaclass=NodeMeta):
         self, marker: Union[str, MarkDecorator], append: bool = True
     ) -> None:
         """dynamically add a marker object to the node.
-
+    
+        Speculative fix: Treat dynamically added xfail markers like static xfails.
+    
         :type marker: ``str`` or ``pytest.mark.*``  object
         :param marker:
             ``append=True`` whether to append the marker,
             if ``False`` insert at position ``0``.
         """
         from _pytest.mark import MARK_GEN
-
+    
         if isinstance(marker, MarkDecorator):
             marker_ = marker
         elif isinstance(marker, str):
@@ -281,6 +283,11 @@ class Node(metaclass=NodeMeta):
             self.own_markers.append(marker_.mark)
         else:
             self.own_markers.insert(0, marker_.mark)
+        # Speculative fix: Treat dynamically added xfail markers like static xfails
+        if marker_.name == "xfail":
+            if not hasattr(self, "_evalxfail"):
+                self._evalxfail = None
+            self._evalxfail = self._evalxfail or marker_
 
     def iter_markers(self, name: Optional[str] = None) -> Iterator[Mark]:
         """
