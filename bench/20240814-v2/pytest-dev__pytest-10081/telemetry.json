{
  "task_id": "pytest-dev__pytest-10081",
  "model": "gpt-4o-2024-08-06",
  "spans": [
    {
      "name": "KeywordExtract",
      "metadata": {
        "start": "2024-08-15T16:13:01.282825",
        "usage": "1438.6250972747803 ms"
      },
      "request": {
        "repo_tokens": [
          "23",
          "42",
          "A",
          "ABSOLUTE",
          "ALLOW",
          "ANSI",
          "ARGS",
          "ARGUMENTS",
          "ATTRIBUTES",
          "ATTRS",
          "AlwaysDispatchingPrettyPrinter",
          "AnyPurePath",
          "ApproxBase",
          "ApproxDecimal",
          "ApproxMapping",
          "ApproxNumpy",
          "ApproxScalar",
          "ApproxSequencelike",
          "Argument",
          "ArgumentError",
          "Assert",
          "AssertionRewriter",
          "AssertionRewritingHook",
          "AssertionState",
          "Attribute",
          "BASE",
          "BINOP",
          "BODY",
          "BUFFER",
          "Bar",
          "BaseReport",
          "BinOp",
          "BoolOp",
          "CACHE",
          "CACHEDIR",
          "CDIFF",
          "CFG",
          "CHARS",
          "CHECKER",
          "CHECKING",
          "CHOICE",
          "CHOICES",
          "CLASS",
          "CLOSE",
          "COLLECT",
          "COLLECTED",
          "COLLECTING",
          "COLOROPTS",
          "CONTENT",
          "COPY",
          "Cache",
          "Call",
          "CallInfo",
          "CallSpec2",
          "Capture",
          "CaptureFixture",
          "CaptureIO",
          "CaptureManager",
          "CaptureMethod",
          "CaptureResult",
          "Class",
          "Code",
          "Collect",
          "CollectError",
          "CollectErrorRepr",
          "CollectReport",
          "Collector",
          "ColoredLevelFormatter",
          "Compare",
          "Config",
          "ConftestImportFailure",
          "CwdSnapshot",
          "D",
          "DATE",
          "DEFAULT",
          "DEPRECATED",
          "DIR",
          "DIRECTORY",
          "DIRS",
          "DOCTEST",
          "DoctestItem",
          "DoctestModule",
          "DoctestTextfile",
          "DontReadFromInput",
          "DropShorterLongHelpFormatter",
          "DummyRewriteHook",
          "E",
          "EMPTY",
          "EQ",
          "ERROR",
          "ESCAPE",
          "ET",
          "EXAMPLE",
          "EXT",
          "EXTERNAL",
          "EncodedFile",
          "Exception",
          "ExceptionChainRepr",
          "ExceptionInfo",
          "ExceptionRepr",
          "Exit",
          "ExitCode",
          "F",
          "FAILED",
          "FAILURE",
          "FAKEMODULE",
          "FAMILY",
          "FDCapture",
          "FDCaptureBinary",
          "FIELD",
          "FILE",
          "FILLFUNCARGS",
          "FIRST",
          "FIXTURE",
          "FMT",
          "FORMAT",
          "FOUND",
          "FROM",
          "FSCollector",
          "FSHookProxy",
          "FUNCARGNAMES",
          "Failed",
          "FakeCollectModule",
          "FastFilesCompleter",
          "FaultHandlerHooks",
          "FixtureDef",
          "FixtureFunctionMarker",
          "FixtureLookupError",
          "FixtureLookupErrorRepr",
          "FixtureManager",
          "FixtureRequest",
          "FlaskyStyle",
          "Foo",
          "FormattedExcinfo",
          "Frame",
          "FuncFixtureInfo",
          "Function",
          "FunctionDefinition",
          "GEN",
          "HOOK",
          "HelpAction",
          "HookCaller",
          "HookRecorder",
          "IGNORE",
          "IMPORT",
          "INSTALL",
          "INTERNAL",
          "INTERRUPTED",
          "Instance",
          "Interrupted",
          "InvalidFeatureRelease",
          "InvocationParams",
          "Item",
          "JSON",
          "JUNIT",
          "Junit",
          "KNOWN",
          "KeywordMapping",
          "LEVELNAME",
          "LFPlugin",
          "LFPluginCollSkipfiles",
          "LFPluginCollWrapper",
          "LINES",
          "LOCK",
          "LOG",
          "LOGLEVEL",
          "LOGS",
          "LineComp",
          "LineMatcher",
          "LiteralsOutputChecker",
          "LiveLoggingStreamHandler",
          "LogCaptureFixture",
          "LogCaptureHandler",
          "LogXML",
          "LoggingPlugin",
          "LsofFdLeakChecker",
          "MAP",
          "MARK",
          "MARKERS",
          "MAX",
          "MODULE",
          "MSG",
          "Mark",
          "MarkDecorator",
          "MarkEvaluator",
          "MarkGenerator",
          "MarkMapping",
          "Metafunc",
          "MockAwareDocTestFinder",
          "Module",
          "MonkeyPatch",
          "MoreQuietAction",
          "MultiCapture",
          "MultipleDoctestFailures",
          "MyOptionParser",
          "NAME",
          "NDIFF",
          "NFPlugin",
          "NO",
          "NODE",
          "NONE",
          "NOT",
          "NOTSET",
          "Name",
          "NoCapture",
          "NoMatch",
          "Node",
          "NodeKeywords",
          "NodeMeta",
          "NodeReporter",
          "Notset",
          "OK",
          "ONLY",
          "OPTION",
          "OR",
          "ORDER",
          "OUTCOME",
          "OptionGroup",
          "OutcomeException",
          "PAM",
          "PARAMETERSET",
          "PARENT",
          "PLUGGY",
          "PLUGINS",
          "POSITIONAL",
          "PR",
          "PREFIX",
          "PRINT",
          "PY",
          "PYC",
          "PYTEST",
          "PYTESTER",
          "Package",
          "ParameterSet",
          "ParsedCall",
          "Parser",
          "PdbInvoke",
          "PdbTrace",
          "PercentStyleMultiline",
          "PluggyPlugin",
          "PluginManager",
          "PrintHelp",
          "PseudoFixtureDef",
          "PyCollector",
          "PyobjMixin",
          "PytestArg",
          "PytestAssertRewriteWarning",
          "PytestCacheWarning",
          "PytestCollectionWarning",
          "PytestDeprecationWarning",
          "PytestDoctestRunner",
          "PytestExperimentalApiWarning",
          "PytestPdbWrapper",
          "PytestPluginManager",
          "PytestUnhandledCoroutineWarning",
          "PytestUnknownMarkWarning",
          "PytestWrapper",
          "Python",
          "RE",
          "README",
          "REGEX",
          "RELATIVE",
          "REPORT",
          "REPORTCHARS",
          "REQUIRES",
          "RESOLUTION",
          "RESULT",
          "RUNNER",
          "RaisesContext",
          "ReprEntry",
          "ReprEntryNative",
          "ReprExceptionInfo",
          "ReprFailDoctest",
          "ReprFileLocation",
          "ReprFuncArgs",
          "ReprLocals",
          "ReprTraceback",
          "ReprTracebackNative",
          "ResultLog",
          "RunResult",
          "S",
          "SECTION",
          "SEP",
          "SEQ",
          "SKIP",
          "SLUG",
          "STDIN",
          "STRING",
          "SafeRepr",
          "Session",
          "SetupState",
          "Skipped",
          "Source",
          "Starred",
          "StepwisePlugin",
          "Store",
          "StoreKey",
          "SubRequest",
          "SysCapture",
          "SysCaptureBinary",
          "SysModulesSnapshot",
          "SysPathsSnapshot",
          "T",
          "TAG",
          "TAIL",
          "TERMINALWRITER",
          "TEST",
          "TESTS",
          "TIMEOUT",
          "TOLERANCE",
          "TUPLE",
          "TYPE",
          "TYPES",
          "TagTracer",
          "TagTracerSub",
          "TeeCaptureIO",
          "TeeSysCapture",
          "TempPathFactory",
          "TempdirFactory",
          "TerminalReporter",
          "TerminalRepr",
          "TerminalWriter",
          "TestCaseFunction",
          "TestClass",
          "TestCustomAssertMsg",
          "TestFailing",
          "TestMoreErrors",
          "TestRaises",
          "TestReport",
          "TestSpecialisedExplanations",
          "TestStateFullThing",
          "Testdir",
          "TimeoutExpired",
          "Traceback",
          "TracebackEntry",
          "TracebackStyle",
          "UDIFF",
          "UNARY",
          "USAGE",
          "USE",
          "UnaryOp",
          "UnformattedWarning",
          "UnitTestCase",
          "VALUES",
          "VERSION",
          "W",
          "WRITER",
          "WarnLogFilter",
          "WarningReport",
          "WarningsChecker",
          "WarningsRecorder",
          "WithException",
          "XFailed",
          "XML",
          "YamlFile",
          "YamlItem",
          "a",
          "a1",
          "about",
          "abs",
          "abspath",
          "action",
          "activate",
          "active",
          "actual",
          "add",
          "addError",
          "addExpectedFailure",
          "addFailure",
          "addSkip",
          "addSuccess",
          "addUnexpectedSuccess",
          "addexcinfo",
          "addfinalizer",
          "addhooks",
          "addini",
          "addinivalue",
          "addoption",
          "addopts",
          "address",
          "addsection",
          "after",
          "all",
          "allow",
          "allowance",
          "allowed",
          "already",
          "ancestor",
          "anchor",
          "and",
          "ann",
          "annotated",
          "announce",
          "anonymous",
          "anothermethod",
          "ansi",
          "api",
          "apiname",
          "app",
          "append",
          "applymarker",
          "approx",
          "arg",
          "arg2fixturedefs",
          "arg2index",
          "arg2scopenum",
          "argcomplete",
          "argkey",
          "argkeys",
          "argname",
          "argnames",
          "argparsing",
          "argpath",
          "args",
          "argument",
          "argv",
          "argvalues",
          "array",
          "as",
          "ascii",
          "assert",
          "assertion",
          "assertmsg",
          "assertoutcome",
          "assertrepr",
          "asserts",
          "assertstate",
          "assign",
          "ast",
          "astcache",
          "astnode",
          "async",
          "at",
          "atscope",
          "attr",
          "attribute",
          "attrs",
          "author",
          "auto",
          "autodoc",
          "autouse",
          "autousenames",
          "aware",
          "b",
          "background",
          "bailout",
          "base",
          "baseid",
          "basename",
          "basenames",
          "basetemp",
          "basic",
          "before",
          "bench",
          "best",
          "bestrelpath",
          "bestrelpathcache",
          "bin",
          "binop",
          "body",
          "bool",
          "boolop",
          "branch",
          "buffer",
          "build",
          "builtin",
          "by",
          "bytes",
          "c",
          "cache",
          "cache1",
          "cache2",
          "cache3",
          "cached",
          "cachedir",
          "cacheprovider",
          "cacheshow",
          "call",
          "callable",
          "callbinrepr",
          "called",
          "callfinalizers",
          "callobj",
          "calls",
          "callspec",
          "candidates",
          "capfd",
          "capfdbinary",
          "caplog",
          "capman",
          "capstderr",
          "capstdout",
          "capsys",
          "capsysbinary",
          "capture",
          "captureVars",
          "captureclass",
          "captured",
          "capturing",
          "catch",
          "catching",
          "category",
          "chain",
          "changelog",
          "char",
          "chars",
          "chdir",
          "check",
          "checkargnotcontained",
          "checked",
          "checker",
          "checkversion",
          "chmod",
          "choice",
          "ci",
          "class",
          "classnamefilter",
          "cleanup",
          "clear",
          "cli",
          "close",
          "closest",
          "closure",
          "cls",
          "cmd",
          "cmdargs",
          "cmdline",
          "cmdlineargs",
          "cnt",
          "co",
          "code",
          "codecov",
          "col",
          "colitem",
          "colitems",
          "collapsed",
          "collect",
          "collected",
          "collectfile",
          "collection",
          "collectionfinish",
          "collections",
          "collector",
          "collectors",
          "collectreport",
          "collectstart",
          "color",
          "colorama",
          "combined",
          "command",
          "comment",
          "common",
          "comp",
          "compact",
          "compare",
          "comparisons",
          "compat",
          "compile",
          "compilecounter",
          "complex",
          "compute",
          "conf",
          "confcutdir",
          "config",
          "configargs",
          "configure",
          "configured",
          "confmod",
          "conftest",
          "conftestmodule",
          "conftestpath",
          "conftestpath2mod",
          "conftests",
          "consecutive",
          "consider",
          "cont",
          "contains",
          "content",
          "contents",
          "context",
          "continue",
          "continued",
          "convert",
          "copy",
          "copyright",
          "count",
          "counter",
          "countoutcomes",
          "crash",
          "create",
          "created",
          "ctrlc",
          "cur",
          "curdir",
          "current",
          "currentfspath",
          "currentscope",
          "custom",
          "cut",
          "cwd",
          "d",
          "darwin",
          "data",
          "dataclass",
          "date",
          "deactivate",
          "dead",
          "debug",
          "debugging",
          "decorate",
          "decoratescope",
          "def",
          "default",
          "definition",
          "defs",
          "deindent",
          "delattr",
          "delenv",
          "deletable",
          "delete",
          "delitem",
          "demo",
          "dependency",
          "deprecated",
          "depth",
          "derive",
          "descr",
          "description",
          "deselect",
          "deselected",
          "deserialize",
          "dest",
          "determine",
          "dic",
          "dict",
          "diff",
          "dir",
          "direct",
          "directly",
          "directories",
          "directory",
          "dirpath",
          "dirpath2confmods",
          "dirs",
          "disable",
          "disabled",
          "dispatch",
          "display",
          "displayed",
          "do",
          "doc",
          "docstring",
          "doctest",
          "documents",
          "doesnt",
          "doit",
          "domain",
          "done",
          "dont",
          "double",
          "dtest",
          "dump",
          "dumps",
          "dupes",
          "duplicatepaths",
          "duration",
          "dynamic",
          "each",
          "early",
          "ellipsize",
          "emit",
          "emitted",
          "empty",
          "en",
          "enable",
          "enabled",
          "encoding",
          "ensure",
          "enter",
          "entered",
          "entries",
          "entry",
          "entrysep",
          "env",
          "epub",
          "eq",
          "equal",
          "err",
          "errisinstance",
          "errlines",
          "error",
          "errors",
          "errorstring",
          "escape",
          "escaped",
          "essential",
          "eval",
          "evalcache",
          "evaluate",
          "evalxfail",
          "ex",
          "exact",
          "example",
          "exc",
          "exception",
          "exceptions",
          "excinfo",
          "exclude",
          "excludepath",
          "exconly",
          "excrepr",
          "excstore",
          "exec",
          "execute",
          "exists",
          "exit",
          "exitstatus",
          "expect",
          "expected",
          "expecting",
          "expl",
          "explanation",
          "explanations",
          "explicit",
          "expls",
          "expr",
          "expression",
          "exprinfo",
          "exprs",
          "ext",
          "extensions",
          "extra",
          "extract",
          "extraline",
          "f",
          "f1",
          "f2",
          "f3",
          "factory",
          "factorytraceback",
          "fail",
          "failed",
          "fails",
          "failure",
          "failures",
          "families",
          "family",
          "fault",
          "faulthandler",
          "favicon",
          "fd",
          "file",
          "filename",
          "fileno",
          "files",
          "filescompleter",
          "fill",
          "fillfixtures",
          "filling",
          "filter",
          "fin",
          "final",
          "finalization",
          "finalize",
          "finalizer",
          "finalizers",
          "finally",
          "find",
          "findpaths",
          "findsource",
          "finish",
          "first",
          "firstlineno",
          "fix",
          "fixname",
          "fixture",
          "fixturedef",
          "fixturedefs",
          "fixturefunc",
          "fixtureinfo",
          "fixturemanager",
          "fixturename",
          "fixturenames",
          "fixtures",
          "fixturestack",
          "flag",
          "flags",
          "flask",
          "flow",
          "fmt",
          "fn",
          "fname",
          "fnline",
          "fnmatch",
          "fnpats",
          "fns",
          "folded",
          "foo",
          "for",
          "force",
          "format",
          "formatrepr",
          "formatter",
          "formatting",
          "fp",
          "frame",
          "freeze",
          "from",
          "fromdictargs",
          "fslocation",
          "fspath",
          "fullsource",
          "fun",
          "func",
          "func1",
          "funcarg",
          "funcargnames",
          "funcargs",
          "funcname",
          "funcnamefilter",
          "funcobj",
          "function",
          "g",
          "generate",
          "generated",
          "generative",
          "generator",
          "generic",
          "genframe",
          "genfunctions",
          "genitems",
          "get",
          "getargs",
          "getattr",
          "getautousenames",
          "getbasetemp",
          "getcall",
          "getcalls",
          "getcfg",
          "getconftest",
          "getconftestmodules",
          "getcrashentry",
          "getcrashline",
          "getentrysource",
          "getexplanation",
          "getfailedcollections",
          "getfailureheadline",
          "getfailures",
          "getfirstlinesource",
          "getfixtureclosure",
          "getfixturedefs",
          "getfixtureinfo",
          "getfixturemarker",
          "getfixturevalue",
          "getfslineno",
          "getfuncargnames",
          "getglobals",
          "getgroup",
          "gethookproxy",
          "gethookrecorder",
          "getimfunc",
          "getindent",
          "getini",
          "getinicfg",
          "getitem",
          "getitems",
          "getlines",
          "getlocation",
          "getmodpath",
          "getmodulecol",
          "getnextfixturedef",
          "getnode",
          "getobj",
          "getoption",
          "getparam",
          "getparent",
          "getparser",
          "getpathnode",
          "getplugin",
          "getpluginversioninfo",
          "getpytestargs",
          "getrawcode",
          "getreportopt",
          "getreports",
          "getrepr",
          "getreprcrash",
          "getscopeitem",
          "getslaveinfoline",
          "getsource",
          "getstatement",
          "getstatementrange",
          "getvalue",
          "getvalueorskip",
          "getvaluepath",
          "github",
          "given",
          "glob",
          "global",
          "globally",
          "globals",
          "globf",
          "globs",
          "got",
          "groups",
          "handle",
          "handler",
          "has",
          "hash",
          "hasinit",
          "hasmarkup",
          "hasnew",
          "hasopt",
          "hasplugin",
          "head",
          "header",
          "hello",
          "hello2",
          "hello3",
          "hello4",
          "hello5",
          "hello6",
          "hello7",
          "help",
          "helpconfig",
          "helper",
          "highlight",
          "history",
          "holder",
          "holderobjseen",
          "hook",
          "hookimpl",
          "hooks",
          "hookspec",
          "html",
          "htmlhelp",
          "i",
          "id",
          "idfn",
          "idlist",
          "idmaker",
          "ids",
          "idval",
          "idvalset",
          "idx",
          "if",
          "ignore",
          "ihook",
          "illegal",
          "immutable",
          "impl",
          "implements",
          "impls",
          "import",
          "importconftest",
          "imported",
          "importhook",
          "importorskip",
          "importpath",
          "imports",
          "importtestmodule",
          "in",
          "inamepart",
          "include",
          "includemodule",
          "includes",
          "incompatibility",
          "increasing",
          "indent",
          "indents",
          "index",
          "indices",
          "indirect",
          "info",
          "information",
          "inherit",
          "ini",
          "inicache",
          "inicfg",
          "inidict",
          "inifile",
          "ininames",
          "init",
          "initial",
          "initialnames",
          "initialpaths",
          "initini",
          "initrequest",
          "inject",
          "inline",
          "inprocess",
          "input",
          "install",
          "instance",
          "interact",
          "interactive",
          "internalerror",
          "interrupt",
          "intersphinx",
          "invalidraise",
          "invocation",
          "invoking",
          "io",
          "is",
          "isattrs",
          "isatty",
          "ischildnode",
          "isclass",
          "iscoroutinefunction",
          "isdatacls",
          "isdict",
          "ishidden",
          "isinitpath",
          "isiterable",
          "isnosetest",
          "isopen",
          "isparseable",
          "issequence",
          "isset",
          "issue",
          "issues",
          "istestclass",
          "istestfunc",
          "istestfunction",
          "istext",
          "istrue",
          "it",
          "it2",
          "item",
          "itemcollected",
          "items",
          "iter",
          "iterable",
          "jheader",
          "json",
          "junitxml",
          "k",
          "keep",
          "key",
          "keyboard",
          "keyboardinterrupt",
          "keys",
          "keyword",
          "keywordexpr",
          "keywords",
          "kind",
          "known",
          "kw",
          "kwargs",
          "kwds",
          "last",
          "lastfailed",
          "later",
          "latex",
          "least",
          "leave",
          "left",
          "legacy",
          "legal",
          "len",
          "length",
          "lettercode",
          "level",
          "levels",
          "lfplugin",
          "lib",
          "line",
          "linecomp",
          "lineno",
          "lines",
          "lines2",
          "link",
          "linkcheck",
          "links",
          "list",
          "listchain",
          "listextrakeywords",
          "listnames",
          "listoutcomes",
          "literal",
          "live",
          "load",
          "locals",
          "location",
          "locationline",
          "lock",
          "log",
          "logfile",
          "logfinish",
          "logger",
          "logging",
          "login",
          "logo",
          "logreport",
          "logs",
          "logstart",
          "long",
          "longer",
          "longrepr",
          "longreprtext",
          "lookup",
          "lsof",
          "m1",
          "main",
          "make",
          "makeconftest",
          "makedir",
          "makedirs",
          "makefile",
          "makeini",
          "makeitem",
          "makemodule",
          "makepath",
          "makepyfile",
          "makereport",
          "maketxtfile",
          "man",
          "manager",
          "mangle",
          "manyparam",
          "map",
          "mapping",
          "mark",
          "markall",
          "marked",
          "marker",
          "markers",
          "markexpr",
          "markname",
          "marks",
          "markup",
          "master",
          "match",
          "matches",
          "matchfactories",
          "matching",
          "matchkeyword",
          "matchmark",
          "matchnodes",
          "matchobj",
          "matchreport",
          "max",
          "maxsize",
          "maybe",
          "md",
          "member",
          "memo",
          "merge",
          "message",
          "messages",
          "metafunc",
          "method",
          "minversion",
          "missing",
          "mk",
          "mkdir",
          "mkpydir",
          "mkrel",
          "mktemp",
          "mock",
          "mocked",
          "mod",
          "modcol",
          "mode",
          "modifyitems",
          "modname",
          "mods",
          "module",
          "modules",
          "monkeypatch",
          "mortem",
          "msg",
          "multi",
          "multicapture",
          "multiline",
          "multiple",
          "multipython",
          "must",
          "mydir",
          "mywriter",
          "name",
          "name2fixturedefs",
          "name2plugin",
          "name2pseudofixturedef",
          "names",
          "namespace",
          "nameversions",
          "nan",
          "ne",
          "needed",
          "nested",
          "new",
          "newinstance",
          "newline",
          "newscope",
          "next",
          "nextitem",
          "nicely",
          "nickname",
          "no",
          "noconftest",
          "node",
          "nodeid",
          "nodeids",
          "nodes",
          "nofuncargs",
          "non",
          "nonpython",
          "noop",
          "nop",
          "norecursepatterns",
          "normalize",
          "nose",
          "nosetest",
          "not",
          "notfound",
          "notify",
          "notin",
          "notset",
          "noun",
          "nullcontext",
          "num",
          "number",
          "numbered",
          "numcollected",
          "numeric",
          "numpy",
          "obj",
          "object",
          "objects",
          "of",
          "offset",
          "ok",
          "old",
          "on",
          "one",
          "only",
          "op",
          "open",
          "opentestcase",
          "ops",
          "opt",
          "opt2dest",
          "option",
          "optional",
          "optionflags",
          "options",
          "optname",
          "optnames",
          "optparser",
          "opts",
          "or",
          "order",
          "ordered",
          "orig",
          "original",
          "originalname",
          "other",
          "otherfunc",
          "otherlist",
          "out",
          "outcome",
          "outcomes",
          "outerr",
          "outlines",
          "output",
          "outrep",
          "overload",
          "override",
          "own",
          "owner",
          "p",
          "package",
          "pages",
          "param",
          "param1",
          "param2",
          "parameters",
          "parameterset",
          "parametersets",
          "parametrize",
          "parametrized",
          "params",
          "parens",
          "parent",
          "parentnode",
          "parse",
          "parsearg",
          "parseconfig",
          "parseconfigure",
          "parsefactories",
          "parseoutcomes",
          "parser",
          "part",
          "parts",
          "pass",
          "passed",
          "passes",
          "passing",
          "paste",
          "pastebin",
          "pastebinfile",
          "pat",
          "patch",
          "patchsysdict",
          "path",
          "pathlib",
          "pathlist",
          "pathname",
          "paths",
          "pattern",
          "patterns",
          "payload",
          "pdb",
          "per",
          "perform",
          "pformat",
          "picklefile",
          "pid",
          "pkg",
          "platform",
          "pluggy",
          "plugin",
          "pluginarg",
          "plugininfo",
          "pluginmanager",
          "plugins",
          "plural",
          "pm",
          "points",
          "pop",
          "popcall",
          "popen",
          "pos",
          "post",
          "postmortem",
          "potential",
          "pre",
          "precision",
          "prefix",
          "prefixed",
          "prefixes",
          "prepare",
          "prepareconfig",
          "preparse",
          "prepend",
          "preserve",
          "preserving",
          "previously",
          "print",
          "printable",
          "printcollecteditems",
          "priority",
          "processopt",
          "processoption",
          "prog",
          "progress",
          "project",
          "properly",
          "properties",
          "property",
          "protocol",
          "provide",
          "prune",
          "prunetraceback",
          "pseudo",
          "public",
          "publish",
          "publish-gh-release-notes",
          "publisher",
          "push",
          "putaround",
          "py",
          "py36",
          "pyargs",
          "pyc",
          "pycollect",
          "pyfunc",
          "pyfuncitem",
          "pygments",
          "pyobj",
          "pytest",
          "pytestPDB",
          "pytestconfig",
          "pytester",
          "python",
          "python1",
          "python2",
          "pythoncollection",
          "pythonlist",
          "pythonpath",
          "pytrace",
          "q",
          "quit",
          "raise",
          "raiseerror",
          "raises",
          "raising",
          "ran",
          "random",
          "ranges",
          "raw",
          "rawcode",
          "rawentry",
          "rawexcinfo",
          "re",
          "read",
          "readline",
          "readlines",
          "readouterr",
          "real",
          "reason",
          "record",
          "recorder",
          "recording",
          "records",
          "recurse",
          "recursionindex",
          "recursive",
          "recwarn",
          "regen",
          "regex",
          "regexp",
          "register",
          "registered",
          "reinterpret",
          "rel",
          "relative",
          "release",
          "release-on-comment",
          "relline",
          "relpath",
          "removal",
          "remove",
          "removed",
          "reopen",
          "reorder",
          "rep",
          "repl",
          "report",
          "reportchars",
          "reportdict",
          "reported",
          "reporter",
          "reporters",
          "reportinfo",
          "reports",
          "repr",
          "reprcompare",
          "reprcrash",
          "reprec",
          "reprentries",
          "reprfileloc",
          "reprfuncargs",
          "reprlocals",
          "reprlocation",
          "reprtraceback",
          "request",
          "requested",
          "required",
          "reraise",
          "res",
          "reset",
          "resolve",
          "restore",
          "result",
          "resultlog",
          "results",
          "resume",
          "ret",
          "returncode",
          "rewritable",
          "rewrite",
          "rewritten",
          "rex",
          "rf",
          "rget",
          "right",
          "rm",
          "role",
          "root",
          "rootdir",
          "roots",
          "rst",
          "run",
          "runitem",
          "runner",
          "running",
          "runpytest",
          "runpython",
          "runsource",
          "runtest",
          "runtestloop",
          "runtestprotocol",
          "rw",
          "s",
          "s1",
          "safe",
          "safeformat",
          "saferepr",
          "save",
          "saved",
          "savesyspath",
          "scalar",
          "schedule",
          "scope",
          "scope2index",
          "scope2props",
          "scopemismatch",
          "scopename2class",
          "scopenum",
          "scopeproperty",
          "scopes",
          "screen",
          "script",
          "scripts",
          "seconds",
          "section",
          "sections",
          "seen",
          "self",
          "sep",
          "sequence",
          "sequences",
          "serializable",
          "serialize",
          "session",
          "sessionfinish",
          "sessionstart",
          "sessionstarttime",
          "set",
          "setattr",
          "setdefault",
          "setenv",
          "setitem",
          "setmulti2",
          "setoption",
          "setting",
          "setup",
          "setup-py",
          "setuponly",
          "setupplan",
          "setupstate",
          "short",
          "shortupper",
          "should",
          "shouldfail",
          "shouldstop",
          "show",
          "showfixtures",
          "showfspath",
          "showheader",
          "showhelp",
          "showlocals",
          "showlongtestinfo",
          "shown",
          "shows",
          "showversion",
          "sidebars",
          "similar",
          "simple",
          "single",
          "skip",
          "skipped",
          "skipping",
          "skips",
          "slots",
          "slug",
          "snap",
          "snapshot",
          "some",
          "somefunc",
          "sort",
          "source",
          "sourcelink",
          "space",
          "spawn",
          "spec",
          "specifiers",
          "specs",
          "split",
          "splitnode",
          "src",
          "stack",
          "stacklevel",
          "starred",
          "start",
          "startTest",
          "startdir",
          "startend2",
          "startswith",
          "stat",
          "state",
          "statement",
          "statements",
          "stats",
          "status",
          "stderr",
          "stdin",
          "stdio",
          "stdout",
          "stepwise",
          "stmts",
          "stop",
          "stopTest",
          "stopatmodule",
          "store",
          "str",
          "stream",
          "strict",
          "string",
          "stringio",
          "strings",
          "strip",
          "striptext",
          "strtobool",
          "structures",
          "style",
          "styles",
          "subname",
          "subprocess",
          "subrequest",
          "suffix",
          "suffixes",
          "suite",
          "summary",
          "support",
          "supported",
          "supporting",
          "surrounding",
          "suspend",
          "suspended",
          "symlink",
          "sys",
          "syscapture",
          "sysmodule",
          "syspath",
          "syspathinsert",
          "t",
          "table",
          "tag",
          "tags",
          "take",
          "target",
          "targetfd",
          "tb",
          "tbfilter",
          "tblines",
          "tearDown",
          "teardown",
          "tee",
          "template",
          "templates",
          "term",
          "terminal",
          "terminalreporter",
          "terminalwriter",
          "termwidth",
          "test",
          "testcase",
          "testdir",
          "testmodule",
          "testpath",
          "testreport",
          "tests",
          "testscollected",
          "testsfailed",
          "teststatus",
          "testsuite",
          "texinfo",
          "text",
          "the",
          "theme",
          "themes",
          "time",
          "timeout",
          "title",
          "tmp",
          "tmpdir",
          "tmpfile",
          "tmppath",
          "tmproot",
          "to",
          "todo",
          "todos",
          "token",
          "tolerance",
          "top",
          "toterminal",
          "towards",
          "trace",
          "traceback",
          "tracebackcutdir",
          "tracing",
          "translate",
          "tree",
          "trial",
          "trigger",
          "true",
          "truncate",
          "try",
          "trycall",
          "tryconvertpyarg",
          "tryshort",
          "tuple",
          "tupleerror",
          "tuples",
          "tw",
          "txt",
          "typ",
          "type",
          "typename",
          "types",
          "ufunc",
          "unary",
          "unconfigure",
          "undo",
          "unexpected",
          "unexpectedsuccess",
          "unfilled",
          "unicode",
          "unittest",
          "unknown",
          "unpack",
          "unpacked",
          "unserialization",
          "unset",
          "unwanted",
          "unwrap",
          "update",
          "url",
          "usage",
          "use",
          "usepdb",
          "user",
          "using",
          "util",
          "v",
          "val",
          "validate",
          "valset",
          "valtypes",
          "value",
          "values",
          "var",
          "variable",
          "variables",
          "vars",
          "venv",
          "verbose",
          "verbosity",
          "version",
          "via",
          "visit",
          "want",
          "warn",
          "warning",
          "warnings",
          "warns",
          "wasvalid",
          "when",
          "where",
          "width",
          "windowsconsoleio",
          "with",
          "withinit",
          "wmod",
          "word",
          "workaround",
          "workers",
          "world",
          "wrap",
          "wrapped",
          "wrapper",
          "wrapping",
          "write",
          "writeorg",
          "writer",
          "writing",
          "written",
          "x",
          "xfail",
          "xfailed",
          "xml",
          "xpassed",
          "xunit",
          "xunit2",
          "y",
          "yield",
          "z1",
          "z2",
          ""
        ]
      },
      "response": {
        "keywords": [
          "tearDown",
          "unittest",
          "TestCase",
          "skip",
          "testClass",
          "PytestPDB",
          "assertion",
          "setup",
          "Session",
          "ERROR"
        ]
      }
    },
    {
      "name": "FilesKeywordSearch",
      "metadata": {
        "start": "2024-08-15T16:13:02.721466",
        "usage": "54.72278594970703 ms"
      },
      "request": {
        "tokens": [
          "tearDown",
          "unittest",
          "TestCase",
          "skip",
          "testClass",
          "PytestPDB",
          "assertion",
          "setup",
          "Session",
          "ERROR"
        ]
      },
      "response": {
        "results": {
          "assertion": [
            "src/_pytest/assertion/util.py",
            "src/_pytest/config/__init__.py",
            "src/_pytest/_io/saferepr.py",
            "src/_pytest/logging.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/assertion/rewrite.py",
            "src/_pytest/assertion/truncate.py",
            "src/_pytest/assertion/__init__.py",
            "src/_pytest/pytester_assertions.py",
            "src/pytest/__init__.py",
            "src/_pytest/terminal.py",
            "src/_pytest/_code/source.py"
          ],
          "Session": [
            "src/_pytest/setuponly.py",
            "src/_pytest/legacypath.py",
            "src/_pytest/runner.py",
            "src/_pytest/nodes.py",
            "src/_pytest/assertion/rewrite.py",
            "src/_pytest/scope.py",
            "src/_pytest/main.py",
            "src/_pytest/stepwise.py",
            "src/_pytest/pytester.py",
            "src/_pytest/mark/__init__.py",
            "src/_pytest/python.py",
            "src/pytest/__init__.py",
            "src/_pytest/logging.py",
            "src/_pytest/assertion/__init__.py",
            "src/_pytest/terminal.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/cacheprovider.py",
            "src/_pytest/warnings.py",
            "src/_pytest/fixtures.py"
          ],
          "skip": [
            "src/_pytest/reports.py",
            "src/_pytest/doctest.py",
            "src/_pytest/assertion/rewrite.py",
            "src/_pytest/junitxml.py",
            "src/_pytest/config/exceptions.py",
            "src/_pytest/outcomes.py",
            "src/_pytest/config/__init__.py",
            "src/_pytest/stepwise.py",
            "src/_pytest/pathlib.py",
            "src/_pytest/unittest.py",
            "src/_pytest/pytester.py",
            "src/_pytest/mark/__init__.py",
            "src/_pytest/python.py",
            "src/pytest/__init__.py",
            "src/_pytest/helpconfig.py",
            "src/_pytest/assertion/util.py",
            "src/_pytest/skipping.py",
            "src/_pytest/terminal.py",
            "src/_pytest/mark/structures.py",
            "src/_pytest/hookspec.py"
          ],
          "unittest": [
            "src/_pytest/config/__init__.py",
            "src/_pytest/runner.py",
            "src/_pytest/unittest.py",
            "src/_pytest/compat.py",
            "src/_pytest/python_api.py",
            "src/_pytest/fixtures.py",
            "src/_pytest/nose.py"
          ],
          "setup": [
            "src/_pytest/reports.py",
            "src/_pytest/doctest.py",
            "src/_pytest/setuponly.py",
            "src/_pytest/runner.py",
            "src/_pytest/setupplan.py",
            "src/_pytest/nodes.py",
            "src/_pytest/junitxml.py",
            "src/_pytest/outcomes.py",
            "src/_pytest/nose.py",
            "src/_pytest/config/__init__.py",
            "src/_pytest/unittest.py",
            "src/_pytest/pytester.py",
            "src/_pytest/python.py",
            "src/_pytest/capture.py",
            "src/_pytest/helpconfig.py",
            "src/_pytest/logging.py",
            "src/_pytest/debugging.py",
            "src/_pytest/terminal.py",
            "src/_pytest/_argcomplete.py",
            "src/_pytest/config/findpaths.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/cacheprovider.py",
            "src/_pytest/fixtures.py"
          ],
          "TestCase": [
            "src/_pytest/python_api.py",
            "src/_pytest/fixtures.py",
            "src/_pytest/unittest.py"
          ],
          "ERROR": [
            "src/_pytest/config/__init__.py",
            "src/_pytest/runner.py",
            "src/_pytest/logging.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/unittest.py",
            "src/_pytest/terminal.py"
          ],
          "tearDown": [
            "src/_pytest/unittest.py"
          ]
        }
      }
    },
    {
      "name": "FilesFilter",
      "metadata": {
        "start": "2024-08-15T16:13:02.776198",
        "usage": "11617.675065994263 ms"
      },
      "request": {
        "keyword_search_results": {
          "assertion": [
            "src/_pytest/assertion/util.py",
            "src/_pytest/config/__init__.py",
            "src/_pytest/_io/saferepr.py",
            "src/_pytest/logging.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/assertion/rewrite.py",
            "src/_pytest/assertion/truncate.py",
            "src/_pytest/assertion/__init__.py",
            "src/_pytest/pytester_assertions.py",
            "src/pytest/__init__.py",
            "src/_pytest/terminal.py",
            "src/_pytest/_code/source.py"
          ],
          "Session": [
            "src/_pytest/setuponly.py",
            "src/_pytest/legacypath.py",
            "src/_pytest/runner.py",
            "src/_pytest/nodes.py",
            "src/_pytest/assertion/rewrite.py",
            "src/_pytest/scope.py",
            "src/_pytest/main.py",
            "src/_pytest/stepwise.py",
            "src/_pytest/pytester.py",
            "src/_pytest/mark/__init__.py",
            "src/_pytest/python.py",
            "src/pytest/__init__.py",
            "src/_pytest/logging.py",
            "src/_pytest/assertion/__init__.py",
            "src/_pytest/terminal.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/cacheprovider.py",
            "src/_pytest/warnings.py",
            "src/_pytest/fixtures.py"
          ],
          "skip": [
            "src/_pytest/reports.py",
            "src/_pytest/doctest.py",
            "src/_pytest/assertion/rewrite.py",
            "src/_pytest/junitxml.py",
            "src/_pytest/config/exceptions.py",
            "src/_pytest/outcomes.py",
            "src/_pytest/config/__init__.py",
            "src/_pytest/stepwise.py",
            "src/_pytest/pathlib.py",
            "src/_pytest/unittest.py",
            "src/_pytest/pytester.py",
            "src/_pytest/mark/__init__.py",
            "src/_pytest/python.py",
            "src/pytest/__init__.py",
            "src/_pytest/helpconfig.py",
            "src/_pytest/assertion/util.py",
            "src/_pytest/skipping.py",
            "src/_pytest/terminal.py",
            "src/_pytest/mark/structures.py",
            "src/_pytest/hookspec.py"
          ],
          "unittest": [
            "src/_pytest/config/__init__.py",
            "src/_pytest/runner.py",
            "src/_pytest/unittest.py",
            "src/_pytest/compat.py",
            "src/_pytest/python_api.py",
            "src/_pytest/fixtures.py",
            "src/_pytest/nose.py"
          ],
          "setup": [
            "src/_pytest/reports.py",
            "src/_pytest/doctest.py",
            "src/_pytest/setuponly.py",
            "src/_pytest/runner.py",
            "src/_pytest/setupplan.py",
            "src/_pytest/nodes.py",
            "src/_pytest/junitxml.py",
            "src/_pytest/outcomes.py",
            "src/_pytest/nose.py",
            "src/_pytest/config/__init__.py",
            "src/_pytest/unittest.py",
            "src/_pytest/pytester.py",
            "src/_pytest/python.py",
            "src/_pytest/capture.py",
            "src/_pytest/helpconfig.py",
            "src/_pytest/logging.py",
            "src/_pytest/debugging.py",
            "src/_pytest/terminal.py",
            "src/_pytest/_argcomplete.py",
            "src/_pytest/config/findpaths.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/cacheprovider.py",
            "src/_pytest/fixtures.py"
          ],
          "TestCase": [
            "src/_pytest/python_api.py",
            "src/_pytest/fixtures.py",
            "src/_pytest/unittest.py"
          ],
          "ERROR": [
            "src/_pytest/config/__init__.py",
            "src/_pytest/runner.py",
            "src/_pytest/logging.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/unittest.py",
            "src/_pytest/terminal.py"
          ],
          "tearDown": [
            "src/_pytest/unittest.py"
          ]
        }
      },
      "response": {
        "scratch_pad": "The issue revolves around the `unittest.TestCase` class's `tearDown` method being executed when a class decorated with `unittest.skip` is run with `pytest --pdb`. We should focus on files that handle unit testing like `unittest`, `skip`, and `tearDown` because they likely contain the logic or functionality being invoked or skipped incorrectly.\n\n- The keyword `skip` is crucial since the issue impacts classes marked with `unittest.skip`. Relevant files could include anything that handles or affects skipping of tests. The files `src/_pytest/mark/__init__.py`, `src/_pytest/unittest.py`, and `src/_pytest/skipping.py` seem especially pertinent here due to their likely connection with test marking and management.\n\n- `unittest` keyword points to `src/_pytest/unittest.py`, which is very relevant because it probably contains functionality that connects pytest with unittest framework methods including setUp and tearDown methods.\n\n- `tearDown` ties directly to the behavior in question. The file `src/_pytest/unittest.py` matches this keyword and is likely where unittest integration is managed.\n\n- `TestCase` relates heavily to issue context as it involves unittest `TestCase` and the `src/_pytest/unittest.py` file appears again as highly relevant.\n\nTherefore, `src/_pytest/unittest.py` is a critical file for investigation. It matches on `unittest`, `tearDown`, and `TestCase`, all of which are fundamental elements affected or involved as described in the issue report.",
        "file_paths": [
          "src/_pytest/unittest.py",
          "src/_pytest/skipping.py",
          "src/_pytest/mark/__init__.py",
          "src/_pytest/mark/structures.py",
          "src/_pytest/python.py"
        ]
      }
    },
    {
      "name": "FileEvaluate",
      "metadata": {
        "start": "2024-08-15T16:13:14.393887",
        "usage": "7344.709157943726 ms"
      },
      "request": {
        "file_path": "src/_pytest/unittest.py"
      },
      "response": {
        "scratch_pad": "1. **Understanding the Issue:**\n   - The issue revolves around the `unittest.TestCase.tearDown` method being executed for classes decorated with `unittest.skip` when `--pdb` is used with `pytest`.\n   - The `tearDown()` should not be executed when a test is marked as skipped (`unittest.skip`).\n\n2. **Identify Key Points in the Code:**\n   - The functionality in question relates to `unittest` integration with `pytest`, particularly how `pytest` handles skipped tests and the teardown process.\n   - The `pytest_runtest_protocol` and `runtest()` method in `TestCaseFunction` are highly relevant because they handle the test running process and have an integration point for the `--pdb` option.\n   - `_is_skipped` function is checked in multiple locations to determine if a test is skipped.\n   - `_make_xunit_fixture` is used for setup/teardown injection and utilizes `_is_skipped` to handle skipping conditions.\n\n3. **Analysis of Relevant Symbols:**\n   - `TestCaseFunction#runtest()` modifies the `tearDown` method behavior based on the `--pdb` flag and whether the test is skipped.\n   - The decision to alter `tearDown` behavior due to `--pdb` suggests the potential root cause of executing `tearDown()` for skipped tests.\n   - `_is_skipped()` function plays a role in determining if a class should be marked as skipped, potentially affecting the behavior seen.\n\n4. **Additional Observations:**\n   - The integration relies heavily on swapping function references depending on config conditions (`--pdb`), which seems to be the area causing unexpected behavior when mixed with skips.\n   - The existing logic already involves checks for skips but may be inadequate for interacting with `pytest`'s pdb usage.\n\n5. **Conclusion:**\n   - This file does seem to be the root cause of the issue due to handling of pdb option in the `runtest` method and its interaction with tearDown where skipped should be considered.",
        "relevant": true,
        "root_cause": true,
        "relevant_files": [],
        "relevant_symbols": [
          "TestCaseFunction#runtest()",
          "_is_skipped()",
          "_make_xunit_fixture()",
          "UnitTestCase#collect()"
        ],
        "root_cause_symbols": [
          "TestCaseFunction#runtest()",
          "_is_skipped()",
          "_make_xunit_fixture()",
          "UnitTestCase#collect()"
        ]
      }
    },
    {
      "name": "FileEvaluate",
      "metadata": {
        "start": "2024-08-15T16:13:21.738606",
        "usage": "4224.502086639404 ms"
      },
      "request": {
        "file_path": "src/_pytest/skipping.py"
      },
      "response": {
        "scratch_pad": "The issue describes a problem where `unittest.TestCase.tearDown` is executed for classes marked with `unittest.skip` when running `pytest` with the `--pdb` option. This indicates that the root cause is related to the interaction between the `skip` behavior and the pytest core mechanics.\n\nIn the provided file `src/_pytest/skipping.py`, several functions and classes handle the logic of skip and xfail mechanisms, including `evaluate_skip_marks`, `pytest_runtest_setup`, and `pytest_runtest_makereport`. These functions determine if tests are skipped based on certain conditions and manage the test status reporting.\n\n### Relevant Parts of the Code:\n1. **`evaluate_skip_marks()` function**: Evaluates skip and skipif marks on an item and should return `Skip` if triggered. If the issue is that this evaluation logic is not properly preventing `tearDown` from executing when a class is skipped, changes might be necessary here.\n\n2. **`pytest_runtest_setup()` function**: This function checks if a test should be skipped and raises a skip exception if so. If the skip is not properly being handled to avoid executing `tearDown`, this function might need revisiting.\n\nThese appear directly related to evaluating and handling skips, which is aligned with the reported issue. However, it is still unclear if these fully prevent `tearDown` from running during skipped test classes when `--pdb` is active. A deeper investigation or comparison with other pytest components handling `--pdb` might be needed.",
        "relevant": true,
        "root_cause": false,
        "relevant_files": [],
        "relevant_symbols": [
          "evaluate_skip_marks()",
          "pytest_runtest_setup()",
          "pytest_runtest_makereport()"
        ],
        "root_cause_symbols": []
      }
    },
    {
      "name": "FileEvaluate",
      "metadata": {
        "start": "2024-08-15T16:13:25.963128",
        "usage": "6341.24493598938 ms"
      },
      "request": {
        "file_path": "src/_pytest/mark/__init__.py"
      },
      "response": {
        "scratch_pad": "The reported issue is that `tearDown` is being executed for tests marked with `unittest.skip` when running `pytest --pdb`. This suggests a potential problem with how pytest integrates with unittest, particularly concerning skipped tests and the pdb (Python Debugger) functionality.\n\nIn the provided `src/_pytest/mark/__init__.py` file, I notice that it primarily deals with handling markers for test functions. It's involved in command-line option parsing for test selection based on keywords or markers, and handling the deselection of tests based on these expressions.\n\nKey functions and classes in this file include `pytest_addoption()`, `deselect_by_keyword()`, `deselect_by_mark()`, `pytest_collection_modifyitems()`, `pytest_configure()`, and `pytest_unconfigure()`. These are all related to controlling which tests are selected or deselected for running.\n\nSpecifically, the `deselect_by_mark` function is of interest, as it deals with skipping or selecting tests based on markers. However, unittest skips and skips managed by pytest markers might not be directly related.\n\nFurthermore, the issue seems more directly linked to the interaction between unittest skips and the pdb feature. The code here doesn't directly handle skipping tests but rather deals with deselecting based on keywords or markers.\n\nTherefore, it's unlikely that this file is the root cause of the problem with unittest's `tearDown` feature running unexpectedly.\n\nSince this file focuses on pytest's custom marking and selection logic, issues related with unittest skipping might be handled elsewhere, possibly in how `pytest` integrates with unittest features or its pdb handling.",
        "relevant": false,
        "root_cause": false,
        "relevant_files": [
          "src/unittest_support.py",
          "src/pytest/integration.py",
          "src/_pytest/debugging.py"
        ],
        "relevant_symbols": [],
        "root_cause_symbols": []
      }
    },
    {
      "name": "FileEvaluate",
      "metadata": {
        "start": "2024-08-15T16:13:32.304387",
        "usage": "6156.811952590942 ms"
      },
      "request": {
        "file_path": "src/_pytest/mark/structures.py"
      },
      "response": {
        "scratch_pad": "- The reported issue involves `unittest.skip` decorators being used at a class level not preventing the execution of `tearDown()` method when running the tests with the `--pdb` option.\n- The problematic behavior is that when a class marked with `unittest.skip` is supposed to be skipped entirely, the `tearDown()` method is still executed, according to the issue description.\n\n- In `src/_pytest/mark/structures.py`, I need to look for any indication of interaction with `unittest` or specific handling of class-level skips since they play a central role in the problem described.\n\n- I see a lot of definition related to marks and how they are meant to apply recognizably to classes and functions.\n\n- Key areas:\n   - `Mark` and `MarkDecorator` suggest some relationship with how pytest applies skips or marks. They are decorators applied to test functions or classes.\n   - `store_mark()` appears to function as a primary way to attach a Mark to a test function or class.\n\n- I don't find explicit integration directly managing the `unittest.skip`, though this file seems involved with how pytest manages its internal marking (which might overlap or interfere with the marking like skipping).\n\n- Therefore, I can say that it might be classified as related file but not responsible for the issue directly.\n\n- Possible locations for further researching the root cause or related files would be areas managing execution control on tests or teardown within pytest that respects unittest integrations more strongly.\n\n- This file deals strongly with custom mark handling, integrating opinions for checking and storing marks, which could be a part of the skeleton leading up to executing skipped methods when integrating unittest.\n\n- It could be indirectly related since it might determine what parts of the class initially receive marks, though it doesn't handle execution control where skips are not managed directly or overridden.",
        "relevant": true,
        "root_cause": false,
        "relevant_files": [
          "src/_pytest/unittest.py",
          "src/_pytest/hookspec.py"
        ],
        "relevant_symbols": [
          "MarkDecorator#",
          "store_mark()#",
          "get_unpacked_marks()",
          "normalize_mark_list()#",
          "NodeKeywords#",
          "MarkGenerator#"
        ],
        "root_cause_symbols": []
      }
    },
    {
      "name": "FileSymbolSearch",
      "metadata": {
        "start": "2024-08-15T16:13:38.461221",
        "usage": "262.3608112335205 ms"
      },
      "request": {
        "files": [
          {
            "file_path": "src/_pytest/unittest.py",
            "relevant_symbol_keys": [
              "TestCaseFunction#runtest()",
              "_is_skipped()",
              "_make_xunit_fixture()",
              "UnitTestCase#collect()"
            ],
            "root_cause_symbol_keys": [
              "TestCaseFunction#runtest()",
              "_is_skipped()",
              "_make_xunit_fixture()",
              "UnitTestCase#collect()"
            ]
          },
          {
            "file_path": "src/_pytest/skipping.py",
            "relevant_symbol_keys": [
              "evaluate_skip_marks()",
              "pytest_runtest_setup()",
              "pytest_runtest_makereport()"
            ],
            "root_cause_symbol_keys": []
          },
          {
            "file_path": "src/_pytest/mark/__init__.py",
            "relevant_symbol_keys": [],
            "root_cause_symbol_keys": []
          },
          {
            "file_path": "src/_pytest/mark/structures.py",
            "relevant_symbol_keys": [
              "MarkDecorator#",
              "store_mark()#",
              "get_unpacked_marks()",
              "normalize_mark_list()#",
              "NodeKeywords#",
              "MarkGenerator#"
            ],
            "root_cause_symbol_keys": []
          }
        ]
      },
      "response": {
        "related_symbols": [
          "evaluate_skip_marks().",
          "pytest_runtest_setup().",
          "pytest_runtest_makereport().",
          "MarkDecorator#",
          "MarkDecorator#__init__().",
          "MarkDecorator#name().",
          "MarkDecorator#args().",
          "MarkDecorator#kwargs().",
          "MarkDecorator#markname().",
          "MarkDecorator#with_args().",
          "MarkDecorator#__call__().",
          "get_unpacked_marks().",
          "_SkipMarkDecorator#",
          "_SkipMarkDecorator#__call__().",
          "_SkipifMarkDecorator#",
          "_SkipifMarkDecorator#__call__().",
          "_XfailMarkDecorator#",
          "_XfailMarkDecorator#__call__().",
          "_ParametrizeMarkDecorator#",
          "_ParametrizeMarkDecorator#__call__().",
          "_UsefixturesMarkDecorator#",
          "_UsefixturesMarkDecorator#__call__().",
          "_FilterwarningsMarkDecorator#",
          "_FilterwarningsMarkDecorator#__call__().",
          "MarkGenerator#",
          "MarkGenerator#__init__().",
          "MarkGenerator#__getattr__().",
          "NodeKeywords#",
          "NodeKeywords#__init__().",
          "NodeKeywords#__getitem__().",
          "NodeKeywords#__setitem__().",
          "NodeKeywords#__contains__().",
          "NodeKeywords#update().",
          "NodeKeywords#__delitem__().",
          "NodeKeywords#__iter__().",
          "NodeKeywords#__len__().",
          "NodeKeywords#__repr__()."
        ],
        "root_caused_symbols": [
          "UnitTestCase#collect().",
          "_make_xunit_fixture().",
          "_make_xunit_fixture().fixture().",
          "TestCaseFunction#runtest().",
          "_is_skipped()."
        ]
      }
    }
  ]
}