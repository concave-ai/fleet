{
  "task_id": "pytest-dev__pytest-5787",
  "model": "gpt-4o-2024-08-06",
  "spans": [
    {
      "name": "KeywordExtract",
      "metadata": {
        "start": "2024-08-15T16:14:53.960395",
        "usage": "1513.084888458252 ms"
      },
      "request": {
        "repo_tokens": [
          "23",
          "42",
          "A",
          "ABSOLUTE",
          "ALLOW",
          "ANSI",
          "ARGS",
          "ARGUMENTS",
          "ATTRIBUTES",
          "ATTRS",
          "AlwaysDispatchingPrettyPrinter",
          "AnyPurePath",
          "ApproxBase",
          "ApproxDecimal",
          "ApproxMapping",
          "ApproxNumpy",
          "ApproxScalar",
          "ApproxSequencelike",
          "Argument",
          "ArgumentError",
          "Assert",
          "AssertionRewriter",
          "AssertionRewritingHook",
          "AssertionState",
          "Attribute",
          "BASE",
          "BINOP",
          "BODY",
          "BUFFER",
          "Bar",
          "BaseReport",
          "BinOp",
          "BoolOp",
          "CACHE",
          "CACHEDIR",
          "CDIFF",
          "CFG",
          "CHARS",
          "CHECKER",
          "CHECKING",
          "CHOICE",
          "CHOICES",
          "CLASS",
          "CLOSE",
          "COLLECT",
          "COLLECTED",
          "COLLECTING",
          "COLOROPTS",
          "CONTENT",
          "COPY",
          "Cache",
          "Call",
          "CallInfo",
          "CallSpec2",
          "Capture",
          "CaptureFixture",
          "CaptureIO",
          "CaptureManager",
          "CaptureMethod",
          "CaptureResult",
          "Class",
          "Code",
          "Collect",
          "CollectError",
          "CollectErrorRepr",
          "CollectReport",
          "Collector",
          "ColoredLevelFormatter",
          "Compare",
          "Config",
          "ConftestImportFailure",
          "CwdSnapshot",
          "D",
          "DATE",
          "DEFAULT",
          "DEPRECATED",
          "DIR",
          "DIRECTORY",
          "DIRS",
          "DOCTEST",
          "DoctestItem",
          "DoctestModule",
          "DoctestTextfile",
          "DontReadFromInput",
          "DropShorterLongHelpFormatter",
          "DummyRewriteHook",
          "E",
          "EMPTY",
          "EQ",
          "ERROR",
          "ESCAPE",
          "ET",
          "EXAMPLE",
          "EXT",
          "EXTERNAL",
          "EncodedFile",
          "Exception",
          "ExceptionChainRepr",
          "ExceptionInfo",
          "ExceptionRepr",
          "Exit",
          "ExitCode",
          "F",
          "FAILED",
          "FAILURE",
          "FAKEMODULE",
          "FAMILY",
          "FDCapture",
          "FDCaptureBinary",
          "FIELD",
          "FILE",
          "FILLFUNCARGS",
          "FIRST",
          "FIXTURE",
          "FMT",
          "FORMAT",
          "FOUND",
          "FROM",
          "FSCollector",
          "FSHookProxy",
          "FUNCARGNAMES",
          "Failed",
          "FakeCollectModule",
          "FastFilesCompleter",
          "FaultHandlerHooks",
          "FixtureDef",
          "FixtureFunctionMarker",
          "FixtureLookupError",
          "FixtureLookupErrorRepr",
          "FixtureManager",
          "FixtureRequest",
          "FlaskyStyle",
          "Foo",
          "FormattedExcinfo",
          "Frame",
          "FuncFixtureInfo",
          "Function",
          "FunctionDefinition",
          "GEN",
          "HOOK",
          "HelpAction",
          "HookCaller",
          "HookRecorder",
          "IGNORE",
          "IMPORT",
          "INSTALL",
          "INTERNAL",
          "INTERRUPTED",
          "Instance",
          "Interrupted",
          "InvalidFeatureRelease",
          "InvocationParams",
          "Item",
          "JSON",
          "JUNIT",
          "Junit",
          "KNOWN",
          "KeywordMapping",
          "LEVELNAME",
          "LFPlugin",
          "LFPluginCollSkipfiles",
          "LFPluginCollWrapper",
          "LINES",
          "LOCK",
          "LOG",
          "LOGLEVEL",
          "LOGS",
          "LineComp",
          "LineMatcher",
          "LiteralsOutputChecker",
          "LiveLoggingStreamHandler",
          "LogCaptureFixture",
          "LogCaptureHandler",
          "LogXML",
          "LoggingPlugin",
          "LsofFdLeakChecker",
          "MAP",
          "MARK",
          "MARKERS",
          "MAX",
          "MODULE",
          "MSG",
          "Mark",
          "MarkDecorator",
          "MarkEvaluator",
          "MarkGenerator",
          "MarkMapping",
          "Metafunc",
          "MockAwareDocTestFinder",
          "Module",
          "MonkeyPatch",
          "MoreQuietAction",
          "MultiCapture",
          "MultipleDoctestFailures",
          "MyOptionParser",
          "NAME",
          "NDIFF",
          "NFPlugin",
          "NO",
          "NODE",
          "NONE",
          "NOT",
          "NOTSET",
          "Name",
          "NoCapture",
          "NoMatch",
          "Node",
          "NodeKeywords",
          "NodeMeta",
          "NodeReporter",
          "Notset",
          "OK",
          "ONLY",
          "OPTION",
          "OR",
          "ORDER",
          "OUTCOME",
          "OptionGroup",
          "OutcomeException",
          "PAM",
          "PARAMETERSET",
          "PARENT",
          "PLUGGY",
          "PLUGINS",
          "POSITIONAL",
          "PR",
          "PREFIX",
          "PRINT",
          "PY",
          "PYC",
          "PYTEST",
          "PYTESTER",
          "Package",
          "ParameterSet",
          "ParsedCall",
          "Parser",
          "PdbInvoke",
          "PdbTrace",
          "PercentStyleMultiline",
          "PluggyPlugin",
          "PluginManager",
          "PrintHelp",
          "PseudoFixtureDef",
          "PyCollector",
          "PyobjMixin",
          "PytestArg",
          "PytestAssertRewriteWarning",
          "PytestCacheWarning",
          "PytestCollectionWarning",
          "PytestDeprecationWarning",
          "PytestDoctestRunner",
          "PytestExperimentalApiWarning",
          "PytestPdbWrapper",
          "PytestPluginManager",
          "PytestUnhandledCoroutineWarning",
          "PytestUnknownMarkWarning",
          "PytestWrapper",
          "Python",
          "RE",
          "README",
          "REGEX",
          "RELATIVE",
          "REPORT",
          "REPORTCHARS",
          "REQUIRES",
          "RESOLUTION",
          "RESULT",
          "RUNNER",
          "RaisesContext",
          "ReprEntry",
          "ReprEntryNative",
          "ReprExceptionInfo",
          "ReprFailDoctest",
          "ReprFileLocation",
          "ReprFuncArgs",
          "ReprLocals",
          "ReprTraceback",
          "ReprTracebackNative",
          "ResultLog",
          "RunResult",
          "S",
          "SECTION",
          "SEP",
          "SEQ",
          "SKIP",
          "SLUG",
          "STDIN",
          "STRING",
          "SafeRepr",
          "Session",
          "SetupState",
          "Skipped",
          "Source",
          "Starred",
          "StepwisePlugin",
          "Store",
          "StoreKey",
          "SubRequest",
          "SysCapture",
          "SysCaptureBinary",
          "SysModulesSnapshot",
          "SysPathsSnapshot",
          "T",
          "TAG",
          "TAIL",
          "TERMINALWRITER",
          "TEST",
          "TESTS",
          "TIMEOUT",
          "TOLERANCE",
          "TUPLE",
          "TYPE",
          "TYPES",
          "TagTracer",
          "TagTracerSub",
          "TeeCaptureIO",
          "TeeSysCapture",
          "TempPathFactory",
          "TempdirFactory",
          "TerminalReporter",
          "TerminalRepr",
          "TerminalWriter",
          "TestCaseFunction",
          "TestClass",
          "TestCustomAssertMsg",
          "TestFailing",
          "TestMoreErrors",
          "TestRaises",
          "TestReport",
          "TestSpecialisedExplanations",
          "TestStateFullThing",
          "Testdir",
          "TimeoutExpired",
          "Traceback",
          "TracebackEntry",
          "TracebackStyle",
          "UDIFF",
          "UNARY",
          "USAGE",
          "USE",
          "UnaryOp",
          "UnformattedWarning",
          "UnitTestCase",
          "VALUES",
          "VERSION",
          "W",
          "WRITER",
          "WarnLogFilter",
          "WarningReport",
          "WarningsChecker",
          "WarningsRecorder",
          "WithException",
          "XFailed",
          "XML",
          "YamlFile",
          "YamlItem",
          "a",
          "a1",
          "about",
          "abs",
          "abspath",
          "action",
          "activate",
          "active",
          "actual",
          "add",
          "addError",
          "addExpectedFailure",
          "addFailure",
          "addSkip",
          "addSuccess",
          "addUnexpectedSuccess",
          "addexcinfo",
          "addfinalizer",
          "addhooks",
          "addini",
          "addinivalue",
          "addoption",
          "addopts",
          "address",
          "addsection",
          "after",
          "all",
          "allow",
          "allowance",
          "allowed",
          "already",
          "ancestor",
          "anchor",
          "and",
          "ann",
          "annotated",
          "announce",
          "anonymous",
          "anothermethod",
          "ansi",
          "api",
          "apiname",
          "app",
          "append",
          "applymarker",
          "approx",
          "arg",
          "arg2fixturedefs",
          "arg2index",
          "arg2scopenum",
          "argcomplete",
          "argkey",
          "argkeys",
          "argname",
          "argnames",
          "argparsing",
          "argpath",
          "args",
          "argument",
          "argv",
          "argvalues",
          "array",
          "as",
          "ascii",
          "assert",
          "assertion",
          "assertmsg",
          "assertoutcome",
          "assertrepr",
          "asserts",
          "assertstate",
          "assign",
          "ast",
          "astcache",
          "astnode",
          "async",
          "at",
          "atscope",
          "attr",
          "attribute",
          "attrs",
          "author",
          "auto",
          "autodoc",
          "autouse",
          "autousenames",
          "aware",
          "b",
          "background",
          "bailout",
          "base",
          "baseid",
          "basename",
          "basenames",
          "basetemp",
          "basic",
          "before",
          "bench",
          "best",
          "bestrelpath",
          "bestrelpathcache",
          "bin",
          "binop",
          "body",
          "bool",
          "boolop",
          "branch",
          "buffer",
          "build",
          "builtin",
          "by",
          "bytes",
          "c",
          "cache",
          "cache1",
          "cache2",
          "cache3",
          "cached",
          "cachedir",
          "cacheprovider",
          "cacheshow",
          "call",
          "callable",
          "callbinrepr",
          "called",
          "callfinalizers",
          "callobj",
          "calls",
          "callspec",
          "candidates",
          "capfd",
          "capfdbinary",
          "caplog",
          "capman",
          "capstderr",
          "capstdout",
          "capsys",
          "capsysbinary",
          "capture",
          "captureVars",
          "captureclass",
          "captured",
          "capturing",
          "catch",
          "catching",
          "category",
          "chain",
          "changelog",
          "char",
          "chars",
          "chdir",
          "check",
          "checkargnotcontained",
          "checked",
          "checker",
          "checkversion",
          "chmod",
          "choice",
          "ci",
          "class",
          "classnamefilter",
          "cleanup",
          "clear",
          "cli",
          "close",
          "closest",
          "closure",
          "cls",
          "cmd",
          "cmdargs",
          "cmdline",
          "cmdlineargs",
          "cnt",
          "co",
          "code",
          "codecov",
          "col",
          "colitem",
          "colitems",
          "collapsed",
          "collect",
          "collected",
          "collectfile",
          "collection",
          "collectionfinish",
          "collections",
          "collector",
          "collectors",
          "collectreport",
          "collectstart",
          "color",
          "colorama",
          "combined",
          "command",
          "comment",
          "common",
          "comp",
          "compact",
          "compare",
          "comparisons",
          "compat",
          "compile",
          "compilecounter",
          "complex",
          "compute",
          "conf",
          "confcutdir",
          "config",
          "configargs",
          "configure",
          "configured",
          "confmod",
          "conftest",
          "conftestmodule",
          "conftestpath",
          "conftestpath2mod",
          "conftests",
          "consecutive",
          "consider",
          "cont",
          "contains",
          "content",
          "contents",
          "context",
          "continue",
          "continued",
          "convert",
          "copy",
          "copyright",
          "count",
          "counter",
          "countoutcomes",
          "crash",
          "create",
          "created",
          "ctrlc",
          "cur",
          "curdir",
          "current",
          "currentfspath",
          "currentscope",
          "custom",
          "cut",
          "cwd",
          "d",
          "darwin",
          "data",
          "dataclass",
          "date",
          "deactivate",
          "dead",
          "debug",
          "debugging",
          "decorate",
          "decoratescope",
          "def",
          "default",
          "definition",
          "defs",
          "deindent",
          "delattr",
          "delenv",
          "deletable",
          "delete",
          "delitem",
          "demo",
          "dependency",
          "deprecated",
          "depth",
          "derive",
          "descr",
          "description",
          "deselect",
          "deselected",
          "deserialize",
          "dest",
          "determine",
          "dic",
          "dict",
          "diff",
          "dir",
          "direct",
          "directly",
          "directories",
          "directory",
          "dirpath",
          "dirpath2confmods",
          "dirs",
          "disable",
          "disabled",
          "dispatch",
          "display",
          "displayed",
          "do",
          "doc",
          "docstring",
          "doctest",
          "documents",
          "doesnt",
          "doit",
          "domain",
          "done",
          "dont",
          "double",
          "dtest",
          "dump",
          "dumps",
          "dupes",
          "duplicatepaths",
          "duration",
          "dynamic",
          "each",
          "early",
          "ellipsize",
          "emit",
          "emitted",
          "empty",
          "en",
          "enable",
          "enabled",
          "encoding",
          "ensure",
          "enter",
          "entered",
          "entries",
          "entry",
          "entrysep",
          "env",
          "epub",
          "eq",
          "equal",
          "err",
          "errisinstance",
          "errlines",
          "error",
          "errors",
          "errorstring",
          "escape",
          "escaped",
          "essential",
          "eval",
          "evalcache",
          "evaluate",
          "evalxfail",
          "ex",
          "exact",
          "example",
          "exc",
          "exception",
          "exceptions",
          "excinfo",
          "exclude",
          "excludepath",
          "exconly",
          "excrepr",
          "excstore",
          "exec",
          "execute",
          "exists",
          "exit",
          "exitstatus",
          "expect",
          "expected",
          "expecting",
          "expl",
          "explanation",
          "explanations",
          "explicit",
          "expls",
          "expr",
          "expression",
          "exprinfo",
          "exprs",
          "ext",
          "extensions",
          "extra",
          "extract",
          "extraline",
          "f",
          "f1",
          "f2",
          "f3",
          "factory",
          "factorytraceback",
          "fail",
          "failed",
          "fails",
          "failure",
          "failures",
          "families",
          "family",
          "fault",
          "faulthandler",
          "favicon",
          "fd",
          "file",
          "filename",
          "fileno",
          "files",
          "filescompleter",
          "fill",
          "fillfixtures",
          "filling",
          "filter",
          "fin",
          "final",
          "finalization",
          "finalize",
          "finalizer",
          "finalizers",
          "finally",
          "find",
          "findpaths",
          "findsource",
          "finish",
          "first",
          "firstlineno",
          "fix",
          "fixname",
          "fixture",
          "fixturedef",
          "fixturedefs",
          "fixturefunc",
          "fixtureinfo",
          "fixturemanager",
          "fixturename",
          "fixturenames",
          "fixtures",
          "fixturestack",
          "flag",
          "flags",
          "flask",
          "flow",
          "fmt",
          "fn",
          "fname",
          "fnline",
          "fnmatch",
          "fnpats",
          "fns",
          "folded",
          "foo",
          "for",
          "force",
          "format",
          "formatrepr",
          "formatter",
          "formatting",
          "fp",
          "frame",
          "freeze",
          "from",
          "fromdictargs",
          "fslocation",
          "fspath",
          "fullsource",
          "fun",
          "func",
          "func1",
          "funcarg",
          "funcargnames",
          "funcargs",
          "funcname",
          "funcnamefilter",
          "funcobj",
          "function",
          "g",
          "generate",
          "generated",
          "generative",
          "generator",
          "generic",
          "genframe",
          "genfunctions",
          "genitems",
          "get",
          "getargs",
          "getattr",
          "getautousenames",
          "getbasetemp",
          "getcall",
          "getcalls",
          "getcfg",
          "getconftest",
          "getconftestmodules",
          "getcrashentry",
          "getcrashline",
          "getentrysource",
          "getexplanation",
          "getfailedcollections",
          "getfailureheadline",
          "getfailures",
          "getfirstlinesource",
          "getfixtureclosure",
          "getfixturedefs",
          "getfixtureinfo",
          "getfixturemarker",
          "getfixturevalue",
          "getfslineno",
          "getfuncargnames",
          "getglobals",
          "getgroup",
          "gethookproxy",
          "gethookrecorder",
          "getimfunc",
          "getindent",
          "getini",
          "getinicfg",
          "getitem",
          "getitems",
          "getlines",
          "getlocation",
          "getmodpath",
          "getmodulecol",
          "getnextfixturedef",
          "getnode",
          "getobj",
          "getoption",
          "getparam",
          "getparent",
          "getparser",
          "getpathnode",
          "getplugin",
          "getpluginversioninfo",
          "getpytestargs",
          "getrawcode",
          "getreportopt",
          "getreports",
          "getrepr",
          "getreprcrash",
          "getscopeitem",
          "getslaveinfoline",
          "getsource",
          "getstatement",
          "getstatementrange",
          "getvalue",
          "getvalueorskip",
          "getvaluepath",
          "github",
          "given",
          "glob",
          "global",
          "globally",
          "globals",
          "globf",
          "globs",
          "got",
          "groups",
          "handle",
          "handler",
          "has",
          "hash",
          "hasinit",
          "hasmarkup",
          "hasnew",
          "hasopt",
          "hasplugin",
          "head",
          "header",
          "hello",
          "hello2",
          "hello3",
          "hello4",
          "hello5",
          "hello6",
          "hello7",
          "help",
          "helpconfig",
          "helper",
          "highlight",
          "history",
          "holder",
          "holderobjseen",
          "hook",
          "hookimpl",
          "hooks",
          "hookspec",
          "html",
          "htmlhelp",
          "i",
          "id",
          "idfn",
          "idlist",
          "idmaker",
          "ids",
          "idval",
          "idvalset",
          "idx",
          "if",
          "ignore",
          "ihook",
          "illegal",
          "immutable",
          "impl",
          "implements",
          "impls",
          "import",
          "importconftest",
          "imported",
          "importhook",
          "importorskip",
          "importpath",
          "imports",
          "importtestmodule",
          "in",
          "inamepart",
          "include",
          "includemodule",
          "includes",
          "incompatibility",
          "increasing",
          "indent",
          "indents",
          "index",
          "indices",
          "indirect",
          "info",
          "information",
          "inherit",
          "ini",
          "inicache",
          "inicfg",
          "inidict",
          "inifile",
          "ininames",
          "init",
          "initial",
          "initialnames",
          "initialpaths",
          "initini",
          "initrequest",
          "inject",
          "inline",
          "inprocess",
          "input",
          "install",
          "instance",
          "interact",
          "interactive",
          "internalerror",
          "interrupt",
          "intersphinx",
          "invalidraise",
          "invocation",
          "invoking",
          "io",
          "is",
          "isattrs",
          "isatty",
          "ischildnode",
          "isclass",
          "iscoroutinefunction",
          "isdatacls",
          "isdict",
          "ishidden",
          "isinitpath",
          "isiterable",
          "isnosetest",
          "isopen",
          "isparseable",
          "issequence",
          "isset",
          "issue",
          "issues",
          "istestclass",
          "istestfunc",
          "istestfunction",
          "istext",
          "istrue",
          "it",
          "it2",
          "item",
          "itemcollected",
          "items",
          "iter",
          "iterable",
          "jheader",
          "json",
          "junitxml",
          "k",
          "keep",
          "key",
          "keyboard",
          "keyboardinterrupt",
          "keys",
          "keyword",
          "keywordexpr",
          "keywords",
          "kind",
          "known",
          "kw",
          "kwargs",
          "kwds",
          "last",
          "lastfailed",
          "later",
          "latex",
          "least",
          "leave",
          "left",
          "legacy",
          "legal",
          "len",
          "length",
          "lettercode",
          "level",
          "levels",
          "lfplugin",
          "lib",
          "line",
          "linecomp",
          "lineno",
          "lines",
          "lines2",
          "link",
          "linkcheck",
          "links",
          "list",
          "listchain",
          "listextrakeywords",
          "listnames",
          "listoutcomes",
          "literal",
          "live",
          "load",
          "locals",
          "location",
          "locationline",
          "lock",
          "log",
          "logfile",
          "logfinish",
          "logger",
          "logging",
          "login",
          "logo",
          "logreport",
          "logs",
          "logstart",
          "long",
          "longer",
          "longrepr",
          "longreprtext",
          "lookup",
          "lsof",
          "m1",
          "main",
          "make",
          "makeconftest",
          "makedir",
          "makedirs",
          "makefile",
          "makeini",
          "makeitem",
          "makemodule",
          "makepath",
          "makepyfile",
          "makereport",
          "maketxtfile",
          "man",
          "manager",
          "mangle",
          "manyparam",
          "map",
          "mapping",
          "mark",
          "markall",
          "marked",
          "marker",
          "markers",
          "markexpr",
          "markname",
          "marks",
          "markup",
          "master",
          "match",
          "matches",
          "matchfactories",
          "matching",
          "matchkeyword",
          "matchmark",
          "matchnodes",
          "matchobj",
          "matchreport",
          "max",
          "maxsize",
          "maybe",
          "md",
          "member",
          "memo",
          "merge",
          "message",
          "messages",
          "metafunc",
          "method",
          "minversion",
          "missing",
          "mk",
          "mkdir",
          "mkpydir",
          "mkrel",
          "mktemp",
          "mock",
          "mocked",
          "mod",
          "modcol",
          "mode",
          "modifyitems",
          "modname",
          "mods",
          "module",
          "modules",
          "monkeypatch",
          "mortem",
          "msg",
          "multi",
          "multicapture",
          "multiline",
          "multiple",
          "multipython",
          "must",
          "mydir",
          "mywriter",
          "name",
          "name2fixturedefs",
          "name2plugin",
          "name2pseudofixturedef",
          "names",
          "namespace",
          "nameversions",
          "nan",
          "ne",
          "needed",
          "nested",
          "new",
          "newinstance",
          "newline",
          "newscope",
          "next",
          "nextitem",
          "nicely",
          "nickname",
          "no",
          "noconftest",
          "node",
          "nodeid",
          "nodeids",
          "nodes",
          "nofuncargs",
          "non",
          "nonpython",
          "noop",
          "nop",
          "norecursepatterns",
          "normalize",
          "nose",
          "nosetest",
          "not",
          "notfound",
          "notify",
          "notin",
          "notset",
          "noun",
          "nullcontext",
          "num",
          "number",
          "numbered",
          "numcollected",
          "numeric",
          "numpy",
          "obj",
          "object",
          "objects",
          "of",
          "offset",
          "ok",
          "old",
          "on",
          "one",
          "only",
          "op",
          "open",
          "opentestcase",
          "ops",
          "opt",
          "opt2dest",
          "option",
          "optional",
          "optionflags",
          "options",
          "optname",
          "optnames",
          "optparser",
          "opts",
          "or",
          "order",
          "ordered",
          "orig",
          "original",
          "originalname",
          "other",
          "otherfunc",
          "otherlist",
          "out",
          "outcome",
          "outcomes",
          "outerr",
          "outlines",
          "output",
          "outrep",
          "overload",
          "override",
          "own",
          "owner",
          "p",
          "package",
          "pages",
          "param",
          "param1",
          "param2",
          "parameters",
          "parameterset",
          "parametersets",
          "parametrize",
          "parametrized",
          "params",
          "parens",
          "parent",
          "parentnode",
          "parse",
          "parsearg",
          "parseconfig",
          "parseconfigure",
          "parsefactories",
          "parseoutcomes",
          "parser",
          "part",
          "parts",
          "pass",
          "passed",
          "passes",
          "passing",
          "paste",
          "pastebin",
          "pastebinfile",
          "pat",
          "patch",
          "patchsysdict",
          "path",
          "pathlib",
          "pathlist",
          "pathname",
          "paths",
          "pattern",
          "patterns",
          "payload",
          "pdb",
          "per",
          "perform",
          "pformat",
          "picklefile",
          "pid",
          "pkg",
          "platform",
          "pluggy",
          "plugin",
          "pluginarg",
          "plugininfo",
          "pluginmanager",
          "plugins",
          "plural",
          "pm",
          "points",
          "pop",
          "popcall",
          "popen",
          "pos",
          "post",
          "postmortem",
          "potential",
          "pre",
          "precision",
          "prefix",
          "prefixed",
          "prefixes",
          "prepare",
          "prepareconfig",
          "preparse",
          "prepend",
          "preserve",
          "preserving",
          "previously",
          "print",
          "printable",
          "printcollecteditems",
          "priority",
          "processopt",
          "processoption",
          "prog",
          "progress",
          "project",
          "properly",
          "properties",
          "property",
          "protocol",
          "provide",
          "prune",
          "prunetraceback",
          "pseudo",
          "public",
          "publish",
          "publish-gh-release-notes",
          "publisher",
          "push",
          "putaround",
          "py",
          "py36",
          "pyargs",
          "pyc",
          "pycollect",
          "pyfunc",
          "pyfuncitem",
          "pygments",
          "pyobj",
          "pytest",
          "pytestPDB",
          "pytestconfig",
          "pytester",
          "python",
          "python1",
          "python2",
          "pythoncollection",
          "pythonlist",
          "pythonpath",
          "pytrace",
          "q",
          "quit",
          "raise",
          "raiseerror",
          "raises",
          "raising",
          "ran",
          "random",
          "ranges",
          "raw",
          "rawcode",
          "rawentry",
          "rawexcinfo",
          "re",
          "read",
          "readline",
          "readlines",
          "readouterr",
          "real",
          "reason",
          "record",
          "recorder",
          "recording",
          "records",
          "recurse",
          "recursionindex",
          "recursive",
          "recwarn",
          "regen",
          "regex",
          "regexp",
          "register",
          "registered",
          "reinterpret",
          "rel",
          "relative",
          "release",
          "release-on-comment",
          "relline",
          "relpath",
          "removal",
          "remove",
          "removed",
          "reopen",
          "reorder",
          "rep",
          "repl",
          "report",
          "reportchars",
          "reportdict",
          "reported",
          "reporter",
          "reporters",
          "reportinfo",
          "reports",
          "repr",
          "reprcompare",
          "reprcrash",
          "reprec",
          "reprentries",
          "reprfileloc",
          "reprfuncargs",
          "reprlocals",
          "reprlocation",
          "reprtraceback",
          "request",
          "requested",
          "required",
          "reraise",
          "res",
          "reset",
          "resolve",
          "restore",
          "result",
          "resultlog",
          "results",
          "resume",
          "ret",
          "returncode",
          "rewritable",
          "rewrite",
          "rewritten",
          "rex",
          "rf",
          "rget",
          "right",
          "rm",
          "role",
          "root",
          "rootdir",
          "roots",
          "rst",
          "run",
          "runitem",
          "runner",
          "running",
          "runpytest",
          "runpython",
          "runsource",
          "runtest",
          "runtestloop",
          "runtestprotocol",
          "rw",
          "s",
          "s1",
          "safe",
          "safeformat",
          "saferepr",
          "save",
          "saved",
          "savesyspath",
          "scalar",
          "schedule",
          "scope",
          "scope2index",
          "scope2props",
          "scopemismatch",
          "scopename2class",
          "scopenum",
          "scopeproperty",
          "scopes",
          "screen",
          "script",
          "scripts",
          "seconds",
          "section",
          "sections",
          "seen",
          "self",
          "sep",
          "sequence",
          "sequences",
          "serializable",
          "serialize",
          "session",
          "sessionfinish",
          "sessionstart",
          "sessionstarttime",
          "set",
          "setattr",
          "setdefault",
          "setenv",
          "setitem",
          "setmulti2",
          "setoption",
          "setting",
          "setup",
          "setup-py",
          "setuponly",
          "setupplan",
          "setupstate",
          "short",
          "shortupper",
          "should",
          "shouldfail",
          "shouldstop",
          "show",
          "showfixtures",
          "showfspath",
          "showheader",
          "showhelp",
          "showlocals",
          "showlongtestinfo",
          "shown",
          "shows",
          "showversion",
          "sidebars",
          "similar",
          "simple",
          "single",
          "skip",
          "skipped",
          "skipping",
          "skips",
          "slots",
          "slug",
          "snap",
          "snapshot",
          "some",
          "somefunc",
          "sort",
          "source",
          "sourcelink",
          "space",
          "spawn",
          "spec",
          "specifiers",
          "specs",
          "split",
          "splitnode",
          "src",
          "stack",
          "stacklevel",
          "starred",
          "start",
          "startTest",
          "startdir",
          "startend2",
          "startswith",
          "stat",
          "state",
          "statement",
          "statements",
          "stats",
          "status",
          "stderr",
          "stdin",
          "stdio",
          "stdout",
          "stepwise",
          "stmts",
          "stop",
          "stopTest",
          "stopatmodule",
          "store",
          "str",
          "stream",
          "strict",
          "string",
          "stringio",
          "strings",
          "strip",
          "striptext",
          "strtobool",
          "structures",
          "style",
          "styles",
          "subname",
          "subprocess",
          "subrequest",
          "suffix",
          "suffixes",
          "suite",
          "summary",
          "support",
          "supported",
          "supporting",
          "surrounding",
          "suspend",
          "suspended",
          "symlink",
          "sys",
          "syscapture",
          "sysmodule",
          "syspath",
          "syspathinsert",
          "t",
          "table",
          "tag",
          "tags",
          "take",
          "target",
          "targetfd",
          "tb",
          "tbfilter",
          "tblines",
          "tearDown",
          "teardown",
          "tee",
          "template",
          "templates",
          "term",
          "terminal",
          "terminalreporter",
          "terminalwriter",
          "termwidth",
          "test",
          "testcase",
          "testdir",
          "testmodule",
          "testpath",
          "testreport",
          "tests",
          "testscollected",
          "testsfailed",
          "teststatus",
          "testsuite",
          "texinfo",
          "text",
          "the",
          "theme",
          "themes",
          "time",
          "timeout",
          "title",
          "tmp",
          "tmpdir",
          "tmpfile",
          "tmppath",
          "tmproot",
          "to",
          "todo",
          "todos",
          "token",
          "tolerance",
          "top",
          "toterminal",
          "towards",
          "trace",
          "traceback",
          "tracebackcutdir",
          "tracing",
          "translate",
          "tree",
          "trial",
          "trigger",
          "true",
          "truncate",
          "try",
          "trycall",
          "tryconvertpyarg",
          "tryshort",
          "tuple",
          "tupleerror",
          "tuples",
          "tw",
          "txt",
          "typ",
          "type",
          "typename",
          "types",
          "ufunc",
          "unary",
          "unconfigure",
          "undo",
          "unexpected",
          "unexpectedsuccess",
          "unfilled",
          "unicode",
          "unittest",
          "unknown",
          "unpack",
          "unpacked",
          "unserialization",
          "unset",
          "unwanted",
          "unwrap",
          "update",
          "url",
          "usage",
          "use",
          "usepdb",
          "user",
          "using",
          "util",
          "v",
          "val",
          "validate",
          "valset",
          "valtypes",
          "value",
          "values",
          "var",
          "variable",
          "variables",
          "vars",
          "venv",
          "verbose",
          "verbosity",
          "version",
          "via",
          "visit",
          "want",
          "warn",
          "warning",
          "warnings",
          "warns",
          "wasvalid",
          "when",
          "where",
          "width",
          "windowsconsoleio",
          "with",
          "withinit",
          "wmod",
          "word",
          "workaround",
          "workers",
          "world",
          "wrap",
          "wrapped",
          "wrapper",
          "wrapping",
          "write",
          "writeorg",
          "writer",
          "writing",
          "written",
          "x",
          "xfail",
          "xfailed",
          "xml",
          "xpassed",
          "xunit",
          "xunit2",
          "y",
          "yield",
          "z1",
          "z2",
          ""
        ]
      },
      "response": {
        "keywords": [
          "traceback",
          "exception",
          "serializable",
          "serialize",
          "exceptions",
          "failure",
          "trace",
          "FormattedExcinfo",
          "ExceptionChainRepr",
          "ReprExceptionInfo"
        ]
      }
    },
    {
      "name": "FilesKeywordSearch",
      "metadata": {
        "start": "2024-08-15T16:14:55.473506",
        "usage": "75.24514198303223 ms"
      },
      "request": {
        "tokens": [
          "traceback",
          "exception",
          "serializable",
          "serialize",
          "exceptions",
          "failure",
          "trace",
          "FormattedExcinfo",
          "ExceptionChainRepr",
          "ReprExceptionInfo"
        ]
      },
      "response": {
        "results": {
          "exception": [
            "src/_pytest/reports.py",
            "src/_pytest/runner.py",
            "src/_pytest/compat.py",
            "src/_pytest/python_api.py",
            "src/_pytest/outcomes.py",
            "src/_pytest/recwarn.py",
            "src/_pytest/nose.py",
            "src/_pytest/_code/code.py",
            "src/_pytest/main.py",
            "src/_pytest/unittest.py",
            "src/_pytest/pytester.py",
            "src/_pytest/helpconfig.py",
            "src/_pytest/_io/saferepr.py",
            "src/_pytest/logging.py",
            "src/_pytest/skipping.py",
            "src/_pytest/monkeypatch.py",
            "src/_pytest/debugging.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/fixtures.py",
            "src/_pytest/faulthandler.py"
          ],
          "exceptions": [
            "src/_pytest/assertion/util.py",
            "src/_pytest/config/__init__.py",
            "src/_pytest/config/findpaths.py",
            "src/_pytest/_io/saferepr.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/monkeypatch.py",
            "src/_pytest/python_api.py",
            "src/_pytest/config/argparsing.py",
            "src/_pytest/debugging.py",
            "src/_pytest/_code/code.py",
            "src/_pytest/fixtures.py",
            "src/_pytest/recwarn.py"
          ],
          "failure": [
            "src/_pytest/reports.py",
            "src/_pytest/doctest.py",
            "src/_pytest/nodes.py",
            "src/_pytest/stepwise.py",
            "src/_pytest/skipping.py",
            "src/_pytest/unittest.py",
            "src/_pytest/assertion/rewrite.py",
            "src/_pytest/junitxml.py",
            "src/_pytest/cacheprovider.py",
            "src/_pytest/python_api.py",
            "src/_pytest/pastebin.py",
            "src/_pytest/outcomes.py"
          ],
          "trace": [
            "src/_pytest/config/__init__.py",
            "src/_pytest/runner.py",
            "src/_pytest/main.py",
            "src/_pytest/assertion/rewrite.py",
            "src/_pytest/assertion/__init__.py",
            "src/_pytest/python.py",
            "src/_pytest/tmpdir.py",
            "src/_pytest/debugging.py",
            "src/_pytest/terminal.py",
            "src/_pytest/helpconfig.py"
          ],
          "traceback": [
            "src/_pytest/reports.py",
            "src/_pytest/config/__init__.py",
            "src/_pytest/mark/evaluate.py",
            "src/_pytest/doctest.py",
            "src/_pytest/nodes.py",
            "src/_pytest/logging.py",
            "src/_pytest/unittest.py",
            "src/_pytest/pytester.py",
            "src/_pytest/python_api.py",
            "src/_pytest/python.py",
            "src/_pytest/debugging.py",
            "src/_pytest/_code/code.py",
            "src/_pytest/terminal.py",
            "src/_pytest/fixtures.py",
            "src/_pytest/outcomes.py",
            "src/_pytest/faulthandler.py"
          ],
          "ReprExceptionInfo": [
            "src/_pytest/reports.py",
            "src/_pytest/_code/code.py"
          ],
          "FormattedExcinfo": [
            "src/_pytest/fixtures.py",
            "src/_pytest/_code/code.py"
          ],
          "ExceptionChainRepr": [
            "src/_pytest/_code/code.py"
          ]
        }
      }
    },
    {
      "name": "FilesFilter",
      "metadata": {
        "start": "2024-08-15T16:14:55.548763",
        "usage": "5960.712194442749 ms"
      },
      "request": {
        "keyword_search_results": {
          "exception": [
            "src/_pytest/reports.py",
            "src/_pytest/runner.py",
            "src/_pytest/compat.py",
            "src/_pytest/python_api.py",
            "src/_pytest/outcomes.py",
            "src/_pytest/recwarn.py",
            "src/_pytest/nose.py",
            "src/_pytest/_code/code.py",
            "src/_pytest/main.py",
            "src/_pytest/unittest.py",
            "src/_pytest/pytester.py",
            "src/_pytest/helpconfig.py",
            "src/_pytest/_io/saferepr.py",
            "src/_pytest/logging.py",
            "src/_pytest/skipping.py",
            "src/_pytest/monkeypatch.py",
            "src/_pytest/debugging.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/fixtures.py",
            "src/_pytest/faulthandler.py"
          ],
          "exceptions": [
            "src/_pytest/assertion/util.py",
            "src/_pytest/config/__init__.py",
            "src/_pytest/config/findpaths.py",
            "src/_pytest/_io/saferepr.py",
            "src/_pytest/hookspec.py",
            "src/_pytest/monkeypatch.py",
            "src/_pytest/python_api.py",
            "src/_pytest/config/argparsing.py",
            "src/_pytest/debugging.py",
            "src/_pytest/_code/code.py",
            "src/_pytest/fixtures.py",
            "src/_pytest/recwarn.py"
          ],
          "failure": [
            "src/_pytest/reports.py",
            "src/_pytest/doctest.py",
            "src/_pytest/nodes.py",
            "src/_pytest/stepwise.py",
            "src/_pytest/skipping.py",
            "src/_pytest/unittest.py",
            "src/_pytest/assertion/rewrite.py",
            "src/_pytest/junitxml.py",
            "src/_pytest/cacheprovider.py",
            "src/_pytest/python_api.py",
            "src/_pytest/pastebin.py",
            "src/_pytest/outcomes.py"
          ],
          "trace": [
            "src/_pytest/config/__init__.py",
            "src/_pytest/runner.py",
            "src/_pytest/main.py",
            "src/_pytest/assertion/rewrite.py",
            "src/_pytest/assertion/__init__.py",
            "src/_pytest/python.py",
            "src/_pytest/tmpdir.py",
            "src/_pytest/debugging.py",
            "src/_pytest/terminal.py",
            "src/_pytest/helpconfig.py"
          ],
          "traceback": [
            "src/_pytest/reports.py",
            "src/_pytest/config/__init__.py",
            "src/_pytest/mark/evaluate.py",
            "src/_pytest/doctest.py",
            "src/_pytest/nodes.py",
            "src/_pytest/logging.py",
            "src/_pytest/unittest.py",
            "src/_pytest/pytester.py",
            "src/_pytest/python_api.py",
            "src/_pytest/python.py",
            "src/_pytest/debugging.py",
            "src/_pytest/_code/code.py",
            "src/_pytest/terminal.py",
            "src/_pytest/fixtures.py",
            "src/_pytest/outcomes.py",
            "src/_pytest/faulthandler.py"
          ],
          "ReprExceptionInfo": [
            "src/_pytest/reports.py",
            "src/_pytest/_code/code.py"
          ],
          "FormattedExcinfo": [
            "src/_pytest/fixtures.py",
            "src/_pytest/_code/code.py"
          ],
          "ExceptionChainRepr": [
            "src/_pytest/_code/code.py"
          ]
        }
      },
      "response": {
        "scratch_pad": "The issue involves the serialization of exceptions, specifically maintaining the chain of exceptions. This suggests that the problem might reside in how exceptions are handled or represented, especially when using xdist.\n\n### Key observations from the issue:\n- The exception chaining works correctly when not using xdist but fails to print the complete chain when xdist is used.\n- The problem likely lies in how exceptions and their chained counterparts are captured and reported or serialized when distributed testing (xdist) is in use.\n\n### Keywords that are relevant:\n1. **exception** and **exceptions**: These are core to the problem since the issue directly involves exception chaining not being reported correctly. Files related to this might contain logic for exception capture and representation.\n2. **traceback**: Since this involves the trace display of exceptions, understanding how the traceback is formed or modified with xdist might be crucial.\n3. **ReprExceptionInfo**, **FormattedExcinfo**, **ExceptionChainRepr**: These are very relevant as they seem to directly relate to the exception representation which is exactly what might need modification or investigation.\n\n### Files to explore based on the keywords:\n- `src/_pytest/_code/code.py`: This file appears associated with exception representation based on having \"ReprExceptionInfo\", \"FormattedExcinfo\", and \"ExceptionChainRepr\".\n- `src/_pytest/reports.py`: Listed for \"exception\", \"traceback\", and \"ReprExceptionInfo\", which indicates that it likely involves the generation of report information for test failures.\n- `src/_pytest/runner.py`: Appears under \"exception\" and \"trace\"; the runner could influence how tests are executed and how exceptions are handled during this process.\n- `src/_pytest/python_api.py`: Mentioned for \"exception\", \"exceptions\", \"failure\", it could have utilities related to python exception handling within pytest.\n\n### Assuming the following files are most relevant:\n1. `src/_pytest/_code/code.py`\n2. `src/_pytest/reports.py`\n3. `src/_pytest/runner.py`\n4. `src/_pytest/python_api.py`",
        "file_paths": [
          "src/_pytest/_code/code.py",
          "src/_pytest/reports.py",
          "src/_pytest/runner.py",
          "src/_pytest/python_api.py"
        ]
      }
    },
    {
      "name": "FileEvaluate",
      "metadata": {
        "start": "2024-08-15T16:15:01.509493",
        "usage": "4822.210073471069 ms"
      },
      "request": {
        "file_path": "src/_pytest/_code/code.py"
      },
      "response": {
        "scratch_pad": "The reported issue is about chained exceptions not being serialized correctly when using pytest-xdist. The traced exception chains are fully shown when running without xdist, but only the last exception is shown with xdist.\n\nThe code in the file `src/_pytest/_code/code.py` seems to be related to exception representation and traceback handling. Notably, classes like `ExceptionInfo` and `Traceback` are directly dealing with exceptions and their tracebacks. Moreover, the method `repr_excinfo` in `FormattedExcinfo` class seems to handle the representation of exceptions. This method includes a `chain` parameter, which is related to displaying chained exceptions, as it decides whether chained exceptions should be shown. Therefore, this parameter could be directly relevant to the issue at hand regarding exception chaining. \n\nThis indicates that the `FormattedExcinfo#repr_excinfo()` method and other related code segments in this file are highly related to the issue.",
        "relevant": true,
        "root_cause": true,
        "relevant_files": [],
        "relevant_symbols": [
          "ExceptionInfo#",
          "Traceback#",
          "FormattedExcinfo#repr_excinfo()"
        ],
        "root_cause_symbols": [
          "FormattedExcinfo#repr_excinfo()"
        ]
      }
    },
    {
      "name": "FileEvaluate",
      "metadata": {
        "start": "2024-08-15T16:15:06.331727",
        "usage": "4795.630931854248 ms"
      },
      "request": {
        "file_path": "src/_pytest/reports.py"
      },
      "response": {
        "scratch_pad": "The issue at hand involves the serialization of exceptions, specifically focusing on ensuring that chained exceptions are properly serialized and displayed when using pytest-xdist. The problem details how pytest runs normally show detailed exception traces, including chained exceptions, but when using xdist for parallel test execution, only the last exception in the chain is shown.\n\nThe provided file, `src/_pytest/reports.py`, contains classes and methods related to reporting in pytest, specifically:\n\n- `BaseReport` class: Handles the conversion of report attributes to terminal output and the serialization of reports. It also has properties to access captured log, stdout, and stderr information.\n- The `_to_json` method in `BaseReport` seems particularly relevant since it mentions serialization of the report, which connects to the issue's need to serialize exception information, including chained exceptions.\n- The `_from_json` method is the reverse operation, deserializing reports from JSON.\n\nWhile the `_to_json()` method does handle report serialization, including traceback entries, it needs to be evaluated whether this logic correctly handles chained exceptions. This could be relevant to the issue since xdist relies on serialization/deserialization to transport reports across execution nodes.",
        "relevant": true,
        "root_cause": true,
        "relevant_files": [],
        "relevant_symbols": [
          "BaseReport#_to_json().",
          "TestReport#",
          "CollectReport#"
        ],
        "root_cause_symbols": [
          "BaseReport#_to_json()."
        ]
      }
    },
    {
      "name": "FileEvaluate",
      "metadata": {
        "start": "2024-08-15T16:15:11.127373",
        "usage": "6727.413177490234 ms"
      },
      "request": {
        "file_path": "src/_pytest/runner.py"
      },
      "response": {
        "scratch_pad": "The issue is about exception serialization and displaying chained exceptions when running tests with pytest and pytest-xdist. The core problem is that when tests are run with xdist, only the last exception in a chain is shown, rather than the full chain.\n\nLooking at the file `src/_pytest/runner.py`, it contains several classes and functions related to running tests and handling reports in pytest. Specifically, the flow of pytest's test execution is managed by functions like:\n\n1. `runtestprotocol()` - which handles phases of a test's lifecycle including setup, call, and teardown.\n2. `call_and_report()` - which calls a runtest hook and generates a report based on the outcome.\n3. `Check_interactive_exception()` - which checks for certain types of exceptions during interactive sessions.\n4. `CallInfo` class - which stores the result or exception info of a function invocation.\n\nHowever, the actual serialization of exceptions, especially chained exceptions, might not be handled directly in this file. The function `call_and_report()` calls `call_runtest_hook()` which in turn invokes the test function and catches any thrown exceptions but does not explicitly handle exception chaining.\n\nThe `CallInfo.from_call` class method invokes the test function and captures exceptions into `ExceptionInfo`, which likely comes from `_pytest._code.code`. This could be part of the chain serialization issue.\n\nGiven this analysis, while this file does play a role in handling exceptions during test execution, the serialization specifics might be better understood by looking at `_pytest._code.code` for how `ExceptionInfo` deals with chained exceptions.\n\nThus, this file is relevant to the issue but it might not be the root cause. The root cause could be in how `ExceptionInfo.from_current()` (from `_pytest._code.code`) collects, stores, and represents exception chains.",
        "relevant": true,
        "root_cause": false,
        "relevant_files": [
          "src/_pytest/_code/code.py",
          "src/_pytest/reports.py",
          "src/_pytest/terminal.py"
        ],
        "relevant_symbols": [
          "call_and_report()",
          "CallInfo.from_call"
        ],
        "root_cause_symbols": []
      }
    },
    {
      "name": "FileEvaluate",
      "metadata": {
        "start": "2024-08-15T16:15:17.854809",
        "usage": "6133.882999420166 ms"
      },
      "request": {
        "file_path": "src/_pytest/python_api.py"
      },
      "response": {
        "scratch_pad": "The reported issue is about improving the serialization of chained exceptions in pytest, particularly when running tests with pytest-xdist. The expected behavior is that when a chained exception occurs, all related exceptions, including those leading up to the final one, are displayed, not just the last one.\n\nLooking through the provided file `src/_pytest/python_api.py`, the context manager `RaisesContext` and the function `raises()` in particular are crucial for managing exceptions in pytest. These are responsible for catching and inspecting exceptions and are highly relevant because they determine the exception handling and reporting mechanism in pytest.\n\n1. **RaisesContext**: This class has methods to manage exception entering and exiting, and it holds exception information (`self.excinfo`). It will need to be adjusted to capture and serialize chained exceptions entirely because the specific issue is within how exceptions are reported, especially with nested exceptions.\n\n2. **raises()**: This function is integral to capturing exceptions and has mechanisms to check expected exceptions. Any change in how exceptions are serialized or reported will likely involve this method because it interacts with exceptions and controls how they are processed in pytest.\n\nThe above symbols relate directly to the handling of exceptions within pytest and could potentially manage the serialization of chained exceptions, as the problem suggests exceptions are not being serialized fully (missing chained exceptions when tests are run with pytest-xdist).\n\n**Relevance Decision:** The file is relevant, but it may not be the root cause by itself due to the fact that the actual serialization might be distributed across multiple modules or depends on configurations with pytest-xdist. However, this file contains core components handling exceptions within pytest that likely play a significant role in the issue.",
        "relevant": true,
        "root_cause": false,
        "relevant_files": [
          "src/_pytest/_code/code.py",
          "src/_pytest/config.py",
          "src/_pytest/nodes.py"
        ],
        "relevant_symbols": [
          "RaisesContext#",
          "raises()"
        ],
        "root_cause_symbols": []
      }
    },
    {
      "name": "FileSymbolSearch",
      "metadata": {
        "start": "2024-08-15T16:15:23.988713",
        "usage": "206.16602897644043 ms"
      },
      "request": {
        "files": [
          {
            "file_path": "src/_pytest/_code/code.py",
            "relevant_symbol_keys": [
              "ExceptionInfo#",
              "Traceback#",
              "FormattedExcinfo#repr_excinfo()"
            ],
            "root_cause_symbol_keys": [
              "FormattedExcinfo#repr_excinfo()"
            ]
          },
          {
            "file_path": "src/_pytest/reports.py",
            "relevant_symbol_keys": [
              "BaseReport#_to_json().",
              "TestReport#",
              "CollectReport#"
            ],
            "root_cause_symbol_keys": [
              "BaseReport#_to_json()."
            ]
          },
          {
            "file_path": "src/_pytest/runner.py",
            "relevant_symbol_keys": [
              "call_and_report()",
              "CallInfo.from_call"
            ],
            "root_cause_symbol_keys": []
          },
          {
            "file_path": "src/_pytest/python_api.py",
            "relevant_symbol_keys": [
              "RaisesContext#",
              "raises()"
            ],
            "root_cause_symbol_keys": []
          }
        ]
      },
      "response": {
        "related_symbols": [
          "Traceback#",
          "Traceback#__init__().",
          "Traceback#f().",
          "Traceback#cut().",
          "Traceback#__getitem__().",
          "Traceback#filter().",
          "Traceback#getcrashentry().",
          "Traceback#recursionindex().",
          "ExceptionInfo#",
          "ExceptionInfo#from_exc_info().",
          "ExceptionInfo#from_current().",
          "ExceptionInfo#for_later().",
          "ExceptionInfo#fill_unfilled().",
          "ExceptionInfo#type().",
          "ExceptionInfo#value().",
          "ExceptionInfo#tb().",
          "ExceptionInfo#typename().",
          "ExceptionInfo#traceback().",
          "ExceptionInfo#__repr__().",
          "ExceptionInfo#exconly().",
          "ExceptionInfo#errisinstance().",
          "ExceptionInfo#_getreprcrash().",
          "ExceptionInfo#getrepr().",
          "ExceptionInfo#match().",
          "ReprExceptionInfo#",
          "ReprExceptionInfo#__init__().",
          "ReprExceptionInfo#toterminal().",
          "ReprTraceback#",
          "ReprTraceback#__init__().",
          "ReprTraceback#toterminal().",
          "TestReport#",
          "TestReport#__init__().",
          "TestReport#__repr__().",
          "TestReport#from_item_and_call().",
          "CollectReport#",
          "CollectReport#__init__().",
          "CollectReport#location().",
          "CollectReport#__repr__().",
          "call_and_report().",
          "raises().",
          "RaisesContext#",
          "RaisesContext#__init__().",
          "RaisesContext#__enter__().",
          "RaisesContext#__exit__()."
        ],
        "root_caused_symbols": [
          "FormattedExcinfo#repr_excinfo().",
          "BaseReport#_to_json()."
        ]
      }
    }
  ]
}