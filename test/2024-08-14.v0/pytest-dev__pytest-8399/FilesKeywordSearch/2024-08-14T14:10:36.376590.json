{
  "name": "FilesKeywordSearch",
  "model": "gpt-4o-mini",
  "issue": "<description>:Starting v6.2.0, unittest setUpClass fixtures are no longer \"private\"\n<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\nMinimal example:\r\n```\r\nimport unittest\r\n\r\nclass Tests(unittest.TestCase):\r\n    @classmethod\r\n    def setUpClass(cls):\r\n        pass\r\n\r\n    def test_1(self):\r\n        pass\r\n```\r\n```\r\n~$  pytest --fixtures\r\n...\r\nunittest_setUpClass_fixture_Tests [class scope] -- ../Platform/.venv/lib/python3.6/site-packages/_pytest/unittest.py:145\r\n    /home/ubuntu/src/Platform/.venv/lib/python3.6/site-packages/_pytest/unittest.py:145: no docstring available\r\n```\r\nThe expected (and previously implemented behavior) is that this fixture's name would start with an underscore, and would therefore only get printed if the additional `-v` flag was used. As it stands, I don't see a way to hide such generated fixtures which will not have a docstring.\r\n\r\nThis breaks a code-quality CI script that makes sure we don't have undocumented pytest fixtures (and the code-base has many legacy tests that use unittest, and that will not get upgraded).\r\n\n\n<hints>:This issue also seems to affect xunit style test-classes:\r\n```\r\nimport unittest\r\n\r\nclass Tests(unittest.TestCase):\r\n    @classmethod\r\n    def setup_class(cls):\r\n        pass\r\n\r\n    def test_1(self):\r\n        pass\r\n```\r\n```\r\n~$  pytest --fixtures\r\n...\r\nxunit_setup_class_fixture_Tests [class scope]\r\n    /home/ubuntu/src/Platform/.venv/lib/python3.6/site-packages/_pytest/python.py:803: no docstring available\r\n```\r\n\nThanks @atzannes!\r\n\r\nThis was probably introduced in https://github.com/pytest-dev/pytest/pull/7990, https://github.com/pytest-dev/pytest/pull/7931, and https://github.com/pytest-dev/pytest/pull/7929.\r\n\r\nThe fix should be simple: add a `_` in each of the generated fixtures names. \r\n\r\nI did a quick change locally, and it fixes that first case reported:\r\n\r\n```diff\r\ndiff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\r\nindex 719eb4e88..3f88d7a9e 100644\r\n--- a/src/_pytest/unittest.py\r\n+++ b/src/_pytest/unittest.py\r\n@@ -144,7 +144,7 @@ def _make_xunit_fixture(\r\n         scope=scope,\r\n         autouse=True,\r\n         # Use a unique name to speed up lookup.\r\n-        name=f\"unittest_{setup_name}_fixture_{obj.__qualname__}\",\r\n+        name=f\"_unittest_{setup_name}_fixture_{obj.__qualname__}\",\r\n     )\r\n     def fixture(self, request: FixtureRequest) -> Generator[None, None, None]:\r\n         if _is_skipped(self):\r\n``` \r\n\r\nOf course a similar change needs to be applied to the other generated fixtures. \r\n\r\nI'm out of time right now to write a proper PR, but I'm leaving this in case someone wants to step up. \ud83d\udc4d \nI can take a cut at this</hints></description>",
  "request": null,
  "response": {
    "results": {
      "pytest": [
        "src/_pytest/warning_types.py",
        "src/pytest/__init__.py",
        "src/_pytest/outcomes.py",
        "src/_pytest/mark/structures.py",
        "src/_pytest/unittest.py",
        "src/_pytest/terminal.py",
        "src/_pytest/skipping.py",
        "src/_pytest/junitxml.py",
        "src/_pytest/unraisableexception.py",
        "src/_pytest/reports.py",
        "src/_pytest/compat.py",
        "src/pytest/__main__.py",
        "src/_pytest/monkeypatch.py",
        "src/_pytest/python.py",
        "src/_pytest/warnings.py",
        "src/_pytest/config/argparsing.py",
        "src/_pytest/cacheprovider.py",
        "src/_pytest/stepwise.py",
        "src/_pytest/faulthandler.py",
        "src/_pytest/main.py",
        "src/_pytest/python_api.py",
        "src/_pytest/config/findpaths.py",
        "src/_pytest/_code/code.py",
        "src/_pytest/config/__init__.py",
        "src/_pytest/runner.py",
        "src/_pytest/hookspec.py",
        "src/_pytest/setuponly.py",
        "src/_pytest/debugging.py",
        "src/_pytest/pytester.py",
        "src/_pytest/pastebin.py",
        "src/_pytest/assertion/__init__.py",
        "src/_pytest/capture.py",
        "src/_pytest/doctest.py",
        "src/_pytest/freeze_support.py",
        "src/_pytest/assertion/rewrite.py",
        "src/_pytest/pathlib.py",
        "src/_pytest/tmpdir.py",
        "src/_pytest/threadexception.py",
        "src/_pytest/config/exceptions.py",
        "src/_pytest/nodes.py",
        "src/_pytest/helpconfig.py",
        "src/_pytest/timing.py",
        "src/_pytest/mark/__init__.py",
        "src/_pytest/pytester_assertions.py",
        "src/_pytest/assertion/util.py",
        "src/_pytest/mark/expression.py",
        "src/_pytest/recwarn.py",
        "src/_pytest/fixtures.py",
        "src/_pytest/deprecated.py",
        "src/pytest/collect.py",
        "src/_pytest/logging.py",
        "src/_pytest/setupplan.py"
      ],
      "unittest": [
        "src/_pytest/unittest.py",
        "src/_pytest/python_api.py",
        "src/_pytest/nose.py",
        "src/_pytest/fixtures.py",
        "src/_pytest/compat.py",
        "src/_pytest/deprecated.py",
        "src/_pytest/config/__init__.py",
        "src/_pytest/runner.py"
      ],
      "setup": [
        "src/_pytest/outcomes.py",
        "src/_pytest/unittest.py",
        "src/_pytest/terminal.py",
        "src/_pytest/junitxml.py",
        "src/_pytest/reports.py",
        "src/_pytest/python.py",
        "src/_pytest/cacheprovider.py",
        "src/_pytest/config/findpaths.py",
        "src/_pytest/_argcomplete.py",
        "src/_pytest/config/__init__.py",
        "src/_pytest/hookspec.py",
        "src/_pytest/runner.py",
        "src/_pytest/setuponly.py",
        "src/_pytest/debugging.py",
        "src/_pytest/pytester.py",
        "src/_pytest/capture.py",
        "src/_pytest/doctest.py",
        "src/_pytest/nodes.py",
        "src/_pytest/helpconfig.py",
        "src/_pytest/nose.py",
        "src/_pytest/fixtures.py",
        "src/_pytest/logging.py",
        "src/_pytest/setupplan.py"
      ],
      "fixture": [
        "src/pytest/__init__.py",
        "src/_pytest/unittest.py",
        "src/_pytest/terminal.py",
        "src/_pytest/junitxml.py",
        "src/_pytest/compat.py",
        "src/_pytest/monkeypatch.py",
        "src/_pytest/python.py",
        "src/_pytest/cacheprovider.py",
        "src/_pytest/hookspec.py",
        "src/_pytest/setuponly.py",
        "src/_pytest/pytester.py",
        "src/_pytest/capture.py",
        "src/_pytest/doctest.py",
        "src/_pytest/tmpdir.py",
        "src/_pytest/nodes.py",
        "src/_pytest/mark/__init__.py",
        "src/_pytest/recwarn.py",
        "src/_pytest/fixtures.py",
        "src/_pytest/deprecated.py",
        "src/_pytest/logging.py",
        "src/_pytest/setupplan.py"
      ],
      "FixtureRequest": [
        "src/pytest/__init__.py",
        "src/_pytest/doctest.py",
        "src/_pytest/cacheprovider.py",
        "src/_pytest/unittest.py",
        "src/_pytest/junitxml.py",
        "src/_pytest/fixtures.py",
        "src/_pytest/tmpdir.py",
        "src/_pytest/python.py",
        "src/_pytest/logging.py",
        "src/_pytest/pytester.py"
      ],
      "fixturedefs": [
        "src/_pytest/fixtures.py",
        "src/_pytest/python.py"
      ],
      "xunit": [
        "src/_pytest/python.py",
        "src/_pytest/junitxml.py"
      ],
      "generate": [
        "src/_pytest/assertion/rewrite.py",
        "src/_pytest/python.py"
      ],
      "setUpClass": [
        "src/_pytest/unittest.py"
      ],
      "_make_xunit_fixture": [
        "src/_pytest/unittest.py"
      ]
    }
  }
}