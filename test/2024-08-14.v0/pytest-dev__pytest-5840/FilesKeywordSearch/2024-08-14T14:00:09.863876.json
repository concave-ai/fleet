{
  "name": "FilesKeywordSearch",
  "model": "gpt-4o-mini",
  "issue": "<description>:5.1.2 ImportError while loading conftest (windows import folder casing issues)\n5.1.1 works fine. after upgrade to 5.1.2, the path was converted to lower case\r\n```\r\nInstalling collected packages: pytest\r\n  Found existing installation: pytest 5.1.1\r\n    Uninstalling pytest-5.1.1:\r\n      Successfully uninstalled pytest-5.1.1\r\nSuccessfully installed pytest-5.1.2\r\nPS C:\\Azure\\KMS\\ComponentTest\\Python> pytest --collect-only .\\PIsys -m smoke\r\nImportError while loading conftest 'c:\\azure\\kms\\componenttest\\python\\pisys\\conftest.py'.\r\nModuleNotFoundError: No module named 'python'\r\nPS C:\\Azure\\KMS\\ComponentTest\\Python>\r\n```\r\n\r\n\n\n<hints>:Can you show the import line that it is trying to import exactly? The cause might be https://github.com/pytest-dev/pytest/pull/5792.\r\n\r\ncc @Oberon00\nSeems very likely, unfortunately. If instead of using `os.normcase`, we could find a way to get the path with correct casing (`Path.resolve`?) that would probably be a safe fix. But I probably won't have time to fix that myself in the near future \ud83d\ude1f\nA unit test that imports a conftest from a module with upppercase characters in the package name sounds like a good addition too.\nThis bit me too.\r\n\r\n* In `conftest.py` I `import muepy.imageProcessing.wafer.sawStreets as sawStreets`.\r\n* This results in `ModuleNotFoundError: No module named 'muepy.imageprocessing'`.  Note the different case of the `P` in `imageProcessing`.\r\n* The module actually lives in \r\n`C:\\Users\\angelo.peronio\\AppData\\Local\\Continuum\\miniconda3\\envs\\packaging\\conda-bld\\muepy_1567627432048\\_test_env\\Lib\\site-packages\\muepy\\imageProcessing\\wafer\\sawStreets`.\r\n* This happens after upgrading form pytest 5.1.1 to 5.1.2 on Windows 10.\r\n\r\nLet me know whether I can help further.\r\n\r\n### pytest output\r\n```\r\n(%PREFIX%) %SRC_DIR%>pytest --pyargs muepy\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.6.7, pytest-5.1.2, py-1.8.0, pluggy-0.12.0\r\nrootdir: %SRC_DIR%\r\ncollected 0 items / 1 errors\r\n\r\n=================================== ERRORS ====================================\r\n________________________ ERROR collecting test session ________________________\r\n..\\_test_env\\lib\\site-packages\\_pytest\\config\\__init__.py:440: in _importconftest\r\n    return self._conftestpath2mod[conftestpath]\r\nE   KeyError: local('c:\\\\users\\\\angelo.peronio\\\\appdata\\\\local\\\\continuum\\\\miniconda3\\\\envs\\\\packaging\\\\conda-bld\\\\muepy_1567627432048\\\\_test_env\\\\lib\\\\site-packages\\\\muepy\\\\imageprocessing\\\\wafer\\\\sawstreets\\\\tests\\\\conftest.py')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n..\\_test_env\\lib\\site-packages\\_pytest\\config\\__init__.py:446: in _importconftest\r\n    mod = conftestpath.pyimport()\r\n..\\_test_env\\lib\\site-packages\\py\\_path\\local.py:701: in pyimport\r\n    __import__(modname)\r\nE   ModuleNotFoundError: No module named 'muepy.imageprocessing'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n..\\_test_env\\lib\\site-packages\\py\\_path\\common.py:377: in visit\r\n    for x in Visitor(fil, rec, ignore, bf, sort).gen(self):\r\n..\\_test_env\\lib\\site-packages\\py\\_path\\common.py:429: in gen\r\n    for p in self.gen(subdir):\r\n..\\_test_env\\lib\\site-packages\\py\\_path\\common.py:429: in gen\r\n    for p in self.gen(subdir):\r\n..\\_test_env\\lib\\site-packages\\py\\_path\\common.py:429: in gen\r\n    for p in self.gen(subdir):\r\n..\\_test_env\\lib\\site-packages\\py\\_path\\common.py:418: in gen\r\n    dirs = self.optsort([p for p in entries\r\n..\\_test_env\\lib\\site-packages\\py\\_path\\common.py:419: in <listcomp>\r\n    if p.check(dir=1) and (rec is None or rec(p))])\r\n..\\_test_env\\lib\\site-packages\\_pytest\\main.py:606: in _recurse\r\n    ihook = self.gethookproxy(dirpath)\r\n..\\_test_env\\lib\\site-packages\\_pytest\\main.py:424: in gethookproxy\r\n    my_conftestmodules = pm._getconftestmodules(fspath)\r\n..\\_test_env\\lib\\site-packages\\_pytest\\config\\__init__.py:420: in _getconftestmodules\r\n    mod = self._importconftest(conftestpath)\r\n..\\_test_env\\lib\\site-packages\\_pytest\\config\\__init__.py:454: in _importconftest\r\n    raise ConftestImportFailure(conftestpath, sys.exc_info())\r\nE   _pytest.config.ConftestImportFailure: (local('c:\\\\users\\\\angelo.peronio\\\\appdata\\\\local\\\\continuum\\\\miniconda3\\\\envs\\\\packaging\\\\conda-bld\\\\muepy_1567627432048\\\\_test_env\\\\lib\\\\site-packages\\\\muepy\\\\imageprocessing\\\\wafer\\\\sawstreets\\\\tests\\\\conftest.py'), (<class 'ModuleNotFoundError'>, ModuleNotFoundError(\"No module named 'muepy.imageprocessing'\",), <traceback object at 0x0000018F0D6C9A48>))\r\n!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!\r\n============================== 1 error in 1.32s ===============================\r\n```</hints></description>",
  "request": null,
  "response": {
    "results": {
      "pytest": [
        "src/_pytest/warning_types.py",
        "src/_pytest/outcomes.py",
        "src/_pytest/unittest.py",
        "src/_pytest/mark/structures.py",
        "src/_pytest/terminal.py",
        "src/_pytest/skipping.py",
        "src/_pytest/junitxml.py",
        "src/_pytest/reports.py",
        "src/_pytest/mark/legacy.py",
        "src/_pytest/compat.py",
        "src/_pytest/monkeypatch.py",
        "src/_pytest/python.py",
        "src/_pytest/warnings.py",
        "src/_pytest/config/argparsing.py",
        "src/_pytest/cacheprovider.py",
        "src/_pytest/stepwise.py",
        "src/_pytest/faulthandler.py",
        "src/_pytest/main.py",
        "src/_pytest/python_api.py",
        "src/_pytest/config/findpaths.py",
        "src/pytest.py",
        "src/_pytest/_code/code.py",
        "src/_pytest/config/__init__.py",
        "src/_pytest/runner.py",
        "src/_pytest/hookspec.py",
        "src/_pytest/setuponly.py",
        "src/_pytest/debugging.py",
        "src/_pytest/pytester.py",
        "src/_pytest/pastebin.py",
        "src/_pytest/assertion/__init__.py",
        "src/_pytest/capture.py",
        "src/_pytest/doctest.py",
        "src/_pytest/freeze_support.py",
        "src/_pytest/assertion/rewrite.py",
        "src/_pytest/tmpdir.py",
        "src/_pytest/config/exceptions.py",
        "src/_pytest/nodes.py",
        "src/_pytest/helpconfig.py",
        "src/_pytest/mark/__init__.py",
        "src/_pytest/assertion/util.py",
        "src/_pytest/recwarn.py",
        "src/_pytest/fixtures.py",
        "src/_pytest/deprecated.py",
        "src/_pytest/logging.py",
        "src/_pytest/setupplan.py"
      ],
      "Path": [
        "src/_pytest/cacheprovider.py",
        "src/_pytest/reports.py",
        "src/_pytest/pathlib.py",
        "src/_pytest/tmpdir.py",
        "src/_pytest/config/__init__.py",
        "src/_pytest/monkeypatch.py",
        "src/_pytest/logging.py",
        "src/_pytest/pytester.py"
      ],
      "Windows": [
        "src/_pytest/pathlib.py",
        "src/_pytest/capture.py",
        "src/_pytest/faulthandler.py"
      ],
      "conftest": [
        "src/_pytest/capture.py",
        "src/_pytest/doctest.py",
        "src/_pytest/helpconfig.py",
        "src/_pytest/main.py",
        "src/_pytest/assertion/rewrite.py",
        "src/_pytest/fixtures.py",
        "src/_pytest/config/__init__.py",
        "src/_pytest/hookspec.py",
        "src/_pytest/python.py",
        "src/_pytest/pytester.py"
      ],
      "ImportError": [
        "src/_pytest/capture.py",
        "src/_pytest/outcomes.py",
        "src/_pytest/doctest.py",
        "src/_pytest/__init__.py",
        "src/_pytest/main.py",
        "src/_pytest/tmpdir.py",
        "src/_pytest/_argcomplete.py",
        "src/_pytest/compat.py",
        "src/_pytest/config/__init__.py",
        "src/_pytest/monkeypatch.py",
        "src/_pytest/python.py"
      ],
      "lowercase": [
        "src/_pytest/config/argparsing.py"
      ],
      "ModuleNotFoundError": [
        "src/_pytest/compat.py"
      ]
    }
  }
}