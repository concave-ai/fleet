{"type":"begin","data":{"path":{"text":"src/pytest/collect.py"}}}
{"type":"match","data":{"path":{"text":"src/pytest/collect.py"},"lines":{"text":"import pytest\n"},"line_number":7,"absolute_offset":104,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/pytest/collect.py"},"lines":{"text":"        super().__init__(\"pytest.collect\")\n"},"line_number":26,"absolute_offset":416,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32}]}}
{"type":"match","data":{"path":{"text":"src/pytest/collect.py"},"lines":{"text":"        self.__pytest = pytest\n"},"line_number":28,"absolute_offset":518,"submatches":[{"match":{"text":"pytest"},"start":24,"end":30}]}}
{"type":"match","data":{"path":{"text":"src/pytest/collect.py"},"lines":{"text":"        return getattr(pytest, name)\n"},"line_number":37,"absolute_offset":828,"submatches":[{"match":{"text":"pytest"},"start":23,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/pytest/collect.py"},"lines":{"text":"sys.modules[\"pytest.collect\"] = FakeCollectModule()\n"},"line_number":40,"absolute_offset":867,"submatches":[{"match":{"text":"pytest"},"start":13,"end":19}]}}
{"type":"end","data":{"path":{"text":"src/pytest/collect.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":4052999,"human":"0.004053s"},"searches":1,"searches_with_match":1,"bytes_searched":919,"bytes_printed":1190,"matched_lines":5,"matches":5}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/warning_types.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    \"\"\"Base class for all warnings emitted by pytest.\"\"\"\n"},"line_number":14,"absolute_offset":251,"submatches":[{"match":{"text":"pytest"},"start":46,"end":52}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    __module__ = \"pytest\"\n"},"line_number":16,"absolute_offset":309,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    \"\"\"Warning emitted by the pytest assert rewrite module.\"\"\"\n"},"line_number":20,"absolute_offset":386,"submatches":[{"match":{"text":"pytest"},"start":30,"end":36}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    __module__ = \"pytest\"\n"},"line_number":22,"absolute_offset":450,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    __module__ = \"pytest\"\n"},"line_number":28,"absolute_offset":589,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    __module__ = \"pytest\"\n"},"line_number":34,"absolute_offset":712,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    \"\"\"Warning emitted when pytest is not able to collect a file or symbol in a module.\"\"\"\n"},"line_number":38,"absolute_offset":786,"submatches":[{"match":{"text":"pytest"},"start":28,"end":34}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    __module__ = \"pytest\"\n"},"line_number":40,"absolute_offset":878,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    __module__ = \"pytest\"\n"},"line_number":46,"absolute_offset":1053,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    \"\"\"Warning category used to denote experiments in pytest.\n"},"line_number":50,"absolute_offset":1147,"submatches":[{"match":{"text":"pytest"},"start":54,"end":60}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    __module__ = \"pytest\"\n"},"line_number":56,"absolute_offset":1316,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    __module__ = \"pytest\"\n"},"line_number":75,"absolute_offset":1875,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    \"\"\"Warning emitted on use of unknown markers.\n"},"line_number":79,"absolute_offset":1950,"submatches":[{"match":{"text":"markers"},"start":41,"end":48}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    See https://docs.pytest.org/en/latest/mark.html for details.\n"},"line_number":81,"absolute_offset":2001,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warning_types.py"},"lines":{"text":"    __module__ = \"pytest\"\n"},"line_number":84,"absolute_offset":2075,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/warning_types.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":2705291,"human":"0.002705s"},"searches":1,"searches_with_match":1,"bytes_searched":2724,"bytes_printed":3685,"matched_lines":15,"matches":15}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/warnings.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/warnings.py"},"lines":{"text":"import pytest\n"},"line_number":10,"absolute_offset":190,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warnings.py"},"lines":{"text":"    group = parser.getgroup(\"pytest-warnings\")\n"},"line_number":59,"absolute_offset":1804,"submatches":[{"match":{"text":"pytest"},"start":29,"end":35}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warnings.py"},"lines":{"text":"        \"markers\",\n"},"line_number":77,"absolute_offset":2310,"submatches":[{"match":{"text":"markers"},"start":9,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warnings.py"},"lines":{"text":"        \"see https://docs.pytest.org/en/latest/warnings.html#pytest-mark-filterwarnings \",\n"},"line_number":79,"absolute_offset":2405,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32},{"match":{"text":"pytest"},"start":61,"end":67}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warnings.py"},"lines":{"text":"@pytest.hookimpl(hookwrapper=True, tryfirst=True)\n"},"line_number":156,"absolute_offset":5120,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warnings.py"},"lines":{"text":"@pytest.hookimpl(hookwrapper=True, tryfirst=True)\n"},"line_number":164,"absolute_offset":5371,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warnings.py"},"lines":{"text":"@pytest.hookimpl(hookwrapper=True)\n"},"line_number":173,"absolute_offset":5646,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/warnings.py"},"lines":{"text":"@pytest.hookimpl(hookwrapper=True)\n"},"line_number":184,"absolute_offset":5945,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/warnings.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":4207707,"human":"0.004208s"},"searches":1,"searches_with_match":1,"bytes_searched":7396,"bytes_printed":1993,"matched_lines":8,"matches":9}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/setuponly.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/setuponly.py"},"lines":{"text":"import pytest\n"},"line_number":5,"absolute_offset":83,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/setuponly.py"},"lines":{"text":"@pytest.hookimpl(hookwrapper=True)\n"},"line_number":30,"absolute_offset":754,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/setuponly.py"},"lines":{"text":"@pytest.hookimpl(tryfirst=True)\n"},"line_number":90,"absolute_offset":2905,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/setuponly.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":607041,"human":"0.000607s"},"searches":1,"searches_with_match":1,"bytes_searched":3099,"bytes_printed":720,"matched_lines":3,"matches":3}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/runner.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/runner.py"},"lines":{"text":"from .reports import TestReport\n"},"line_number":21,"absolute_offset":465,"submatches":[{"match":{"text":"TestReport"},"start":21,"end":31}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/runner.py"},"lines":{"text":"# pytest plugin hooks\n"},"line_number":42,"absolute_offset":1096,"submatches":[{"match":{"text":"pytest"},"start":2,"end":8}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/runner.py"},"lines":{"text":") -> List[TestReport]:\n"},"line_number":107,"absolute_offset":3109,"submatches":[{"match":{"text":"TestReport"},"start":10,"end":20}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/runner.py"},"lines":{"text":") -> TestReport:\n"},"line_number":206,"absolute_offset":6388,"submatches":[{"match":{"text":"TestReport"},"start":5,"end":15}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/runner.py"},"lines":{"text":"    report = hook.pytest_runtest_makereport(item=item, call=call)  # type: TestReport\n"},"line_number":209,"absolute_offset":6476,"submatches":[{"match":{"text":"pytest_runtest_makereport"},"start":18,"end":43},{"match":{"text":"TestReport"},"start":75,"end":85}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/runner.py"},"lines":{"text":"def pytest_runtest_makereport(item: Item, call: CallInfo[None]) -> TestReport:\n"},"line_number":312,"absolute_offset":10294,"submatches":[{"match":{"text":"pytest_runtest_makereport"},"start":4,"end":29},{"match":{"text":"TestReport"},"start":67,"end":77}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/runner.py"},"lines":{"text":"    return TestReport.from_item_and_call(item, call)\n"},"line_number":313,"absolute_offset":10373,"submatches":[{"match":{"text":"TestReport"},"start":11,"end":21}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/runner.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":3928707,"human":"0.003929s"},"searches":1,"searches_with_match":1,"bytes_searched":15251,"bytes_printed":1868,"matched_lines":7,"matches":9}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/reports.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"from _pytest.outcomes import skip\n"},"line_number":31,"absolute_offset":942,"submatches":[{"match":{"text":"skip"},"start":29,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"        Factory method that returns either a TestReport or CollectReport, depending on the calling\n"},"line_number":207,"absolute_offset":5970,"submatches":[{"match":{"text":"TestReport"},"start":45,"end":55}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"    url = \"https://github.com/pytest-dev/pytest/issues\"\n"},"line_number":219,"absolute_offset":6396,"submatches":[{"match":{"text":"pytest"},"start":30,"end":36},{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"class TestReport(BaseReport):\n"},"line_number":230,"absolute_offset":6844,"submatches":[{"match":{"text":"TestReport"},"start":6,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"        #: markers associated with a test invocation.\n"},"line_number":259,"absolute_offset":7868,"submatches":[{"match":{"text":"markers"},"start":11,"end":18}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"        #: marshallable. Used by pytest to add captured text\n"},"line_number":276,"absolute_offset":8491,"submatches":[{"match":{"text":"pytest"},"start":33,"end":39}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"    def from_item_and_call(cls, item: Item, call: \"CallInfo[None]\") -> \"TestReport\":\n"},"line_number":292,"absolute_offset":9027,"submatches":[{"match":{"text":"TestReport"},"start":72,"end":82}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"        Factory method to create and fill a TestReport with standard item and call info.\n"},"line_number":294,"absolute_offset":9124,"submatches":[{"match":{"text":"TestReport"},"start":44,"end":54}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"            elif excinfo.errisinstance(skip.Exception):\n"},"line_number":311,"absolute_offset":9833,"submatches":[{"match":{"text":"skip"},"start":39,"end":43}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"        #: marshallable. Used by pytest to add captured text\n"},"line_number":365,"absolute_offset":11565,"submatches":[{"match":{"text":"pytest"},"start":33,"end":39}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"    report: Union[CollectReport, TestReport]\n"},"line_number":391,"absolute_offset":12327,"submatches":[{"match":{"text":"TestReport"},"start":33,"end":43}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"    if isinstance(report, (TestReport, CollectReport)):\n"},"line_number":393,"absolute_offset":12403,"submatches":[{"match":{"text":"TestReport"},"start":27,"end":37}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":") -> Optional[Union[CollectReport, TestReport]]:\n"},"line_number":402,"absolute_offset":12650,"submatches":[{"match":{"text":"TestReport"},"start":35,"end":45}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"        if data[\"$report_type\"] == \"TestReport\":\n"},"line_number":404,"absolute_offset":12730,"submatches":[{"match":{"text":"TestReport"},"start":36,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"            return TestReport._from_json(data)\n"},"line_number":405,"absolute_offset":12779,"submatches":[{"match":{"text":"TestReport"},"start":19,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"    Returns **kwargs that can be used to construct a TestReport or CollectReport instance.\n"},"line_number":490,"absolute_offset":15754,"submatches":[{"match":{"text":"TestReport"},"start":53,"end":63}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/reports.py"},"lines":{"text":"            _report_unserialization_failure(entry_type, TestReport, reportdict)\n"},"line_number":517,"absolute_offset":16823,"submatches":[{"match":{"text":"TestReport"},"start":56,"end":66}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/reports.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":1315750,"human":"0.001316s"},"searches":1,"searches_with_match":1,"bytes_searched":18593,"bytes_printed":4477,"matched_lines":17,"matches":18}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/recwarn.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/recwarn.py"},"lines":{"text":"    ``pytest.raises`` can be used::\n"},"line_number":121,"absolute_offset":3613,"submatches":[{"match":{"text":"pytest"},"start":6,"end":12}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/recwarn.py"},"lines":{"text":"            msg = \"Unexpected keyword arguments passed to pytest.warns: \"\n"},"line_number":145,"absolute_offset":4479,"submatches":[{"match":{"text":"pytest"},"start":58,"end":64}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/recwarn.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":186666,"human":"0.000187s"},"searches":1,"searches_with_match":1,"bytes_searched":10192,"bytes_printed":562,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/python_api.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"# builtin pytest.approx helper\n"},"line_number":45,"absolute_offset":1075,"submatches":[{"match":{"text":"pytest"},"start":10,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"                msg = \"pytest.approx() does not support nested dictionaries: key={!r} value={!r}\\n  full mapping={}\"\n"},"line_number":176,"absolute_offset":5236,"submatches":[{"match":{"text":"pytest"},"start":23,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"                msg = \"pytest.approx() does not support nested data structures: {!r} at index {}\\n  full sequence: {}\"\n"},"line_number":208,"absolute_offset":6397,"submatches":[{"match":{"text":"pytest"},"start":23,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"        >>> from pytest import approx\n"},"line_number":373,"absolute_offset":13263,"submatches":[{"match":{"text":"pytest"},"start":17,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"    - ``a == pytest.approx(b, rel=1e-6, abs=1e-12)``: True if the relative\n"},"line_number":468,"absolute_offset":17759,"submatches":[{"match":{"text":"pytest"},"start":13,"end":19}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"# builtin pytest.raises helper\n"},"line_number":544,"absolute_offset":20794,"submatches":[{"match":{"text":"pytest"},"start":10,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"        (This is only used when ``pytest.raises`` is used as a context manager,\n"},"line_number":583,"absolute_offset":21976,"submatches":[{"match":{"text":"pytest"},"start":34,"end":40}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"        When using ``pytest.raises`` as a function, you can use:\n"},"line_number":585,"absolute_offset":22110,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"        ``pytest.raises(Exc, func, match=\"passed on\").match(\"my pattern\")``.)\n"},"line_number":586,"absolute_offset":22175,"submatches":[{"match":{"text":"pytest"},"start":10,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"    Use ``pytest.raises`` as a context manager, which will capture the exception of the given\n"},"line_number":592,"absolute_offset":22372,"submatches":[{"match":{"text":"pytest"},"start":10,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"       When using ``pytest.raises`` as a context manager, it's worthwhile to\n"},"line_number":620,"absolute_offset":23426,"submatches":[{"match":{"text":"pytest"},"start":20,"end":26}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"    **Using with** ``pytest.mark.parametrize``\n"},"line_number":641,"absolute_offset":24335,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"    When using :ref:`pytest.mark.parametrize ref`\n"},"line_number":643,"absolute_offset":24383,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python_api.py"},"lines":{"text":"            msg = \"Unexpected keyword arguments passed to pytest.raises: \"\n"},"line_number":694,"absolute_offset":26359,"submatches":[{"match":{"text":"pytest"},"start":58,"end":64}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/python_api.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":1268041,"human":"0.001268s"},"searches":1,"searches_with_match":1,"bytes_searched":28612,"bytes_printed":3799,"matched_lines":14,"matches":14}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/python.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"from _pytest.outcomes import skip\n"},"line_number":61,"absolute_offset":1936,"submatches":[{"match":{"text":"skip"},"start":29,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"        \"markers\",\n"},"line_number":139,"absolute_offset":4476,"submatches":[{"match":{"text":"markers"},"start":9,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"        \"see https://docs.pytest.org/en/latest/parametrize.html for more info \"\n"},"line_number":146,"absolute_offset":4957,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"        \"markers\",\n"},"line_number":150,"absolute_offset":5097,"submatches":[{"match":{"text":"markers"},"start":9,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"        \"https://docs.pytest.org/en/latest/fixture.html#usefixtures \",\n"},"line_number":153,"absolute_offset":5241,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"    msg += \"  - pytest-asyncio\\n\"\n"},"line_number":162,"absolute_offset":5558,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"    msg += \"  - pytest-trio\\n\"\n"},"line_number":163,"absolute_offset":5592,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"    msg += \"  - pytest-tornasync\\n\"\n"},"line_number":164,"absolute_offset":5623,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"    msg += \"  - pytest-twisted\"\n"},"line_number":165,"absolute_offset":5659,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"    skip(msg=\"async def function and no async plugin installed (see warnings)\")\n"},"line_number":167,"absolute_offset":5762,"submatches":[{"match":{"text":"skip"},"start":4,"end":8}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"                reason = \"yield tests were removed in pytest 4.0 - {name} will be ignored\".format(\n"},"line_number":241,"absolute_offset":8698,"submatches":[{"match":{"text":"pytest"},"start":54,"end":60}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"                res.add_marker(MARK_GEN.xfail(run=False, reason=reason))\n"},"line_number":244,"absolute_offset":8845,"submatches":[{"match":{"text":"xfail"},"start":40,"end":45}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"                \"Using pytest.skip outside of a test is not allowed. \"\n"},"line_number":588,"absolute_offset":22384,"submatches":[{"match":{"text":"pytest"},"start":23,"end":29},{"match":{"text":"skip"},"start":30,"end":34}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"                \"To decorate a test function, use the @pytest.mark.skip \"\n"},"line_number":589,"absolute_offset":22455,"submatches":[{"match":{"text":"pytest"},"start":55,"end":61},{"match":{"text":"skip"},"start":67,"end":71}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"                \"or @pytest.mark.skipif decorators instead, and to skip a \"\n"},"line_number":590,"absolute_offset":22529,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27},{"match":{"text":"skipif"},"start":33,"end":39},{"match":{"text":"skip"},"start":67,"end":71}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"                \"module use `pytestmark = pytest.mark.{skip,skipif}.\"\n"},"line_number":591,"absolute_offset":22605,"submatches":[{"match":{"text":"pytest"},"start":42,"end":48},{"match":{"text":"skip"},"start":55,"end":59},{"match":{"text":"skipif"},"start":60,"end":66}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"            # We will visit our own __init__.py file, in which case we skip it.\n"},"line_number":646,"absolute_offset":24742,"submatches":[{"match":{"text":"skip"},"start":71,"end":75}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"    # that duplicates markers instances if not taken out\n"},"line_number":783,"absolute_offset":29886,"submatches":[{"match":{"text":"markers"},"start":22,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"                \"'request' is a reserved name and cannot be used in @pytest.mark.parametrize\",\n"},"line_number":989,"absolute_offset":37694,"submatches":[{"match":{"text":"pytest"},"start":69,"end":75}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"        # num_ids == 0 is a special case: https://github.com/pytest-dev/pytest/issues/1849\n"},"line_number":1083,"absolute_offset":41375,"submatches":[{"match":{"text":"pytest"},"start":61,"end":67},{"match":{"text":"pytest"},"start":72,"end":78}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"        param config: the pytest Config object\n"},"line_number":1464,"absolute_offset":55075,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"        param session: the pytest Session object\n"},"line_number":1470,"absolute_offset":55543,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"        # https://github.com/pytest-dev/pytest/issues/4569\n"},"line_number":1510,"absolute_offset":57382,"submatches":[{"match":{"text":"pytest"},"start":29,"end":35},{"match":{"text":"pytest"},"start":40,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/python.py"},"lines":{"text":"        \"(compatonly) for code expecting pytest-2.2 style request objects\"\n"},"line_number":1550,"absolute_offset":58597,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/python.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":2297250,"human":"0.002297s"},"searches":1,"searches_with_match":1,"bytes_searched":61053,"bytes_printed":6521,"matched_lines":24,"matches":32}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/setupplan.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/setupplan.py"},"lines":{"text":"import pytest\n"},"line_number":4,"absolute_offset":54,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/setupplan.py"},"lines":{"text":"@pytest.hookimpl(tryfirst=True)\n"},"line_number":23,"absolute_offset":561,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/setupplan.py"},"lines":{"text":"@pytest.hookimpl(tryfirst=True)\n"},"line_number":35,"absolute_offset":974,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/setupplan.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":12939455,"human":"0.012939s"},"searches":1,"searches_with_match":1,"bytes_searched":1207,"bytes_printed":716,"matched_lines":3,"matches":3}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/timing.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/timing.py"},"lines":{"text":"pytest runtime information (issue #185).\n"},"line_number":5,"absolute_offset":132,"submatches":[{"match":{"text":"pytest"},"start":0,"end":6}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/timing.py"},"lines":{"text":"Fixture \"mock_timinig\" also interacts with this module for pytest's own tests.\n"},"line_number":7,"absolute_offset":174,"submatches":[{"match":{"text":"pytest"},"start":59,"end":65}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/timing.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":1046250,"human":"0.001046s"},"searches":1,"searches_with_match":1,"bytes_searched":377,"bytes_printed":562,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/tmpdir.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/tmpdir.py"},"lines":{"text":"import pytest\n"},"line_number":10,"absolute_offset":160,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/tmpdir.py"},"lines":{"text":"        :param config: a pytest configuration\n"},"line_number":43,"absolute_offset":1339,"submatches":[{"match":{"text":"pytest"},"start":25,"end":31}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/tmpdir.py"},"lines":{"text":"            rootdir = temproot.joinpath(\"pytest-of-{}\".format(user))\n"},"line_number":96,"absolute_offset":3393,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/tmpdir.py"},"lines":{"text":"                prefix=\"pytest-\", root=rootdir, keep=3, lock_timeout=LOCK_TIMEOUT\n"},"line_number":99,"absolute_offset":3558,"submatches":[{"match":{"text":"pytest"},"start":24,"end":30}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/tmpdir.py"},"lines":{"text":"@pytest.fixture(scope=\"session\")\n"},"line_number":154,"absolute_offset":5353,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/tmpdir.py"},"lines":{"text":"@pytest.fixture(scope=\"session\")\n"},"line_number":162,"absolute_offset":5653,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/tmpdir.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":178,"absolute_offset":6189,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/tmpdir.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":191,"absolute_offset":6574,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/tmpdir.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":4680332,"human":"0.004680s"},"searches":1,"searches_with_match":1,"bytes_searched":7021,"bytes_printed":1897,"matched_lines":8,"matches":8}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/pathlib.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/pathlib.py"},"lines":{"text":"from _pytest.outcomes import skip\n"},"line_number":29,"absolute_offset":592,"submatches":[{"match":{"text":"skip"},"start":29,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pathlib.py"},"lines":{"text":"    # more context: https://github.com/pytest-dev/pytest/issues/5974#issuecomment-543799018\n"},"line_number":67,"absolute_offset":1482,"submatches":[{"match":{"text":"pytest"},"start":39,"end":45},{"match":{"text":"pytest"},"start":50,"end":56}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pathlib.py"},"lines":{"text":"            # - FileNotFoundError, in case another pytest process got here first.\n"},"line_number":303,"absolute_offset":9189,"submatches":[{"match":{"text":"pytest"},"start":51,"end":57}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pathlib.py"},"lines":{"text":"def symlink_or_skip(src, dst, **kwargs):\n"},"line_number":417,"absolute_offset":13258,"submatches":[{"match":{"text":"src"},"start":20,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pathlib.py"},"lines":{"text":"        os.symlink(str(src), str(dst), **kwargs)\n"},"line_number":420,"absolute_offset":13388,"submatches":[{"match":{"text":"src"},"start":23,"end":26}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pathlib.py"},"lines":{"text":"        skip(\"symlinks not supported: {}\".format(e))\n"},"line_number":422,"absolute_offset":13462,"submatches":[{"match":{"text":"skip"},"start":8,"end":12}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/pathlib.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":652000,"human":"0.000652s"},"searches":1,"searches_with_match":1,"bytes_searched":18103,"bytes_printed":1609,"matched_lines":6,"matches":7}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/pytester.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"\"\"\"(disabled by default) support for testing pytest and pytest plugins.\"\"\"\n"},"line_number":1,"absolute_offset":0,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51},{"match":{"text":"pytest"},"start":56,"end":62}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"import pytest\n"},"line_number":27,"absolute_offset":580,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"from _pytest.reports import TestReport\n"},"line_number":44,"absolute_offset":1198,"submatches":[{"match":{"text":"TestReport"},"start":28,"end":38}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"            \"run pytest sub runs in tests using an 'inprocess' \"\n"},"line_number":73,"absolute_offset":1838,"submatches":[{"match":{"text":"pytest"},"start":17,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"markers\",\n"},"line_number":90,"absolute_offset":2328,"submatches":[{"match":{"text":"markers"},"start":9,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True, tryfirst=True)\n"},"line_number":141,"absolute_offset":3837,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"            item.warn(pytest.PytestWarning(\"\\n\".join(error)))\n"},"line_number":162,"absolute_offset":4775,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"# used at least by pytest-xdist plugin\n"},"line_number":165,"absolute_offset":4839,"submatches":[{"match":{"text":"pytest"},"start":19,"end":25}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":168,"absolute_offset":4880,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"                pytest.fail(\"could not find {!r} check {!r}\".format(name, check))\n"},"line_number":256,"absolute_offset":7767,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        pytest.fail(\"\\n\".join(lines))\n"},"line_number":266,"absolute_offset":8192,"submatches":[{"match":{"text":"pytest"},"start":8,"end":14}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"    ) -> List[TestReport]:\n"},"line_number":280,"absolute_offset":8576,"submatches":[{"match":{"text":"TestReport"},"start":14,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"    ) -> List[TestReport]:\n"},"line_number":319,"absolute_offset":9887,"submatches":[{"match":{"text":"TestReport"},"start":14,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"    def getfailedcollections(self) -> List[TestReport]:\n"},"line_number":322,"absolute_offset":9984,"submatches":[{"match":{"text":"TestReport"},"start":43,"end":53}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"    ) -> Tuple[List[TestReport], List[TestReport], List[TestReport]]:\n"},"line_number":327,"absolute_offset":10133,"submatches":[{"match":{"text":"TestReport"},"start":20,"end":30},{"match":{"text":"TestReport"},"start":38,"end":48},{"match":{"text":"TestReport"},"start":56,"end":66}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":362,"absolute_offset":11331,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"@pytest.fixture(name=\"LineMatcher\")\n"},"line_number":371,"absolute_offset":11523,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":382,"absolute_offset":11877,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"    A :class: `TestDir` instance, that can be used to run and test pytest itself.\n"},"line_number":385,"absolute_offset":11968,"submatches":[{"match":{"text":"pytest"},"start":67,"end":73}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"    but provides methods which aid in testing pytest itself.\n"},"line_number":388,"absolute_offset":12140,"submatches":[{"match":{"text":"pytest"},"start":46,"end":52}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":394,"absolute_offset":12256,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":403,"absolute_offset":12423,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"            self.ret = pytest.ExitCode(ret)  # type: Union[int, ExitCode]\n"},"line_number":429,"absolute_offset":13150,"submatches":[{"match":{"text":"pytest"},"start":23,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Extracts the nouns from a pytest terminal summary line.\n"},"line_number":468,"absolute_offset":14684,"submatches":[{"match":{"text":"pytest"},"start":37,"end":43}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"    \"\"\"Temporary test directory with tools to test/run pytest itself.\n"},"line_number":555,"absolute_offset":17242,"submatches":[{"match":{"text":"pytest"},"start":55,"end":61}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"    which aid with testing pytest itself.  Unless :py:meth:`chdir` is used all\n"},"line_number":558,"absolute_offset":17390,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        # Discard outer pytest options.\n"},"line_number":603,"absolute_offset":19201,"submatches":[{"match":{"text":"pytest"},"start":24,"end":30}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"            testdir.makefile(\".ini\", pytest=\"[pytest]\\naddopts=-rs\\n\")\n"},"line_number":692,"absolute_offset":22351,"submatches":[{"match":{"text":"pytest"},"start":37,"end":43},{"match":{"text":"pytest"},"start":46,"end":52}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Return the pytest section from the tox.ini config file.\"\"\"\n"},"line_number":706,"absolute_offset":22811,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        return IniConfig(p)[\"pytest\"]\n"},"line_number":708,"absolute_offset":22914,"submatches":[{"match":{"text":"pytest"},"start":29,"end":35}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        create the (configured) pytest Config instance.\n"},"line_number":855,"absolute_offset":28107,"submatches":[{"match":{"text":"pytest"},"start":32,"end":38}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Run a test module in process using ``pytest.main()``.\n"},"line_number":898,"absolute_offset":29734,"submatches":[{"match":{"text":"pytest"},"start":48,"end":54}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        ``pytest.main()`` on it, returning a :py:class:`HookRecorder` instance\n"},"line_number":901,"absolute_offset":29864,"submatches":[{"match":{"text":"pytest"},"start":10,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Run ``pytest.main(['--collectonly'])`` in-process.\n"},"line_number":916,"absolute_offset":30330,"submatches":[{"match":{"text":"pytest"},"start":17,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        Runs the :py:func:`pytest.main` function to run all of pytest inside\n"},"line_number":918,"absolute_offset":30393,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33},{"match":{"text":"pytest"},"start":63,"end":69}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Run ``pytest.main()`` in-process, returning a HookRecorder.\n"},"line_number":928,"absolute_offset":30865,"submatches":[{"match":{"text":"pytest"},"start":17,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        Runs the :py:func:`pytest.main` function to run all of pytest inside\n"},"line_number":930,"absolute_offset":30937,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33},{"match":{"text":"pytest"},"start":63,"end":69}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        :param args: command line arguments to pass to :py:func:`pytest.main`\n"},"line_number":936,"absolute_offset":31252,"submatches":[{"match":{"text":"pytest"},"start":65,"end":71}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        :kwarg plugins: extra plugin instances the ``pytest.main()`` instance should use.\n"},"line_number":938,"absolute_offset":31331,"submatches":[{"match":{"text":"pytest"},"start":53,"end":59}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"            # Any sys.module or sys.path changes done while running pytest\n"},"line_number":953,"absolute_offset":31959,"submatches":[{"match":{"text":"pytest"},"start":68,"end":74}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"            # clashing with later inline tests run within the same pytest test,\n"},"line_number":955,"absolute_offset":32112,"submatches":[{"match":{"text":"pytest"},"start":67,"end":73}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"            ret = pytest.main(list(args), plugins=plugins)\n"},"line_number":973,"absolute_offset":32910,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Return result of running pytest in-process, providing a similar\n"},"line_number":995,"absolute_offset":33740,"submatches":[{"match":{"text":"pytest"},"start":36,"end":42}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Run pytest inline or in a subprocess, depending on the command line\n"},"line_number":1037,"absolute_offset":35020,"submatches":[{"match":{"text":"pytest"},"start":15,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Return a new pytest Config instance from given commandline args.\n"},"line_number":1058,"absolute_offset":35823,"submatches":[{"match":{"text":"pytest"},"start":24,"end":30}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        This invokes the pytest bootstrapping code in _pytest.config to create\n"},"line_number":1060,"absolute_offset":35900,"submatches":[{"match":{"text":"pytest"},"start":25,"end":31}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Return a new pytest configured Config instance.\n"},"line_number":1081,"absolute_offset":36811,"submatches":[{"match":{"text":"pytest"},"start":24,"end":30}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        This writes the source to a python file and runs pytest's collection on\n"},"line_number":1093,"absolute_offset":37234,"submatches":[{"match":{"text":"pytest"},"start":57,"end":63}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        This writes the source to a python file and runs pytest's collection on\n"},"line_number":1114,"absolute_offset":37909,"submatches":[{"match":{"text":"pytest"},"start":57,"end":63}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        runs the pytest collection on it, returning the collection node for the\n"},"line_number":1125,"absolute_offset":38365,"submatches":[{"match":{"text":"pytest"},"start":17,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Run pytest as a subprocess with given arguments.\n"},"line_number":1306,"absolute_offset":44377,"submatches":[{"match":{"text":"pytest"},"start":15,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        with \"runpytest-\" to not conflict with the normal numbered pytest\n"},"line_number":1311,"absolute_offset":44676,"submatches":[{"match":{"text":"pytest"},"start":67,"end":73}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        :param args: the sequence of arguments to pass to the pytest subprocess\n"},"line_number":1314,"absolute_offset":44805,"submatches":[{"match":{"text":"pytest"},"start":62,"end":68}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        \"\"\"Run pytest using pexpect.\n"},"line_number":1332,"absolute_offset":45551,"submatches":[{"match":{"text":"pytest"},"start":15,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        This makes sure to use the right pytest and sets up the temporary\n"},"line_number":1334,"absolute_offset":45589,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        pexpect = pytest.importorskip(\"pexpect\", \"3.0\")\n"},"line_number":1351,"absolute_offset":46162,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"            pytest.skip(\"pypy-64 bit not supported\")\n"},"line_number":1353,"absolute_offset":46295,"submatches":[{"match":{"text":"pytest"},"start":12,"end":18},{"match":{"text":"skip"},"start":19,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"            pytest.skip(\"pexpect.spawn not available\")\n"},"line_number":1355,"absolute_offset":46390,"submatches":[{"match":{"text":"pytest"},"start":12,"end":18},{"match":{"text":"skip"},"start":19,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        wildcards.  If they do not match a pytest.fail() is called.  The\n"},"line_number":1453,"absolute_offset":49856,"submatches":[{"match":{"text":"pytest"},"start":43,"end":49}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        If they do not match a pytest.fail() is called.\n"},"line_number":1468,"absolute_offset":50496,"submatches":[{"match":{"text":"pytest"},"start":31,"end":37}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pytester.py"},"lines":{"text":"        pytest.fail(log_text)\n"},"line_number":1592,"absolute_offset":55373,"submatches":[{"match":{"text":"pytest"},"start":8,"end":14}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/pytester.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":1549458,"human":"0.001549s"},"searches":1,"searches_with_match":1,"bytes_searched":55514,"bytes_printed":15925,"matched_lines":61,"matches":69}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/resultlog.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/resultlog.py"},"lines":{"text":"from _pytest.reports import TestReport\n"},"line_number":12,"absolute_offset":272,"submatches":[{"match":{"text":"TestReport"},"start":28,"end":38}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/resultlog.py"},"lines":{"text":"    def pytest_runtest_logreport(self, report: TestReport) -> None:\n"},"line_number":72,"absolute_offset":2298,"submatches":[{"match":{"text":"TestReport"},"start":47,"end":57}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/resultlog.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":9034581,"human":"0.009035s"},"searches":1,"searches_with_match":1,"bytes_searched":3655,"bytes_printed":569,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/terminal.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"import pytest\n"},"line_number":30,"absolute_offset":627,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"from _pytest.reports import TestReport\n"},"line_number":48,"absolute_offset":1301,"submatches":[{"match":{"text":"TestReport"},"start":28,"end":38}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"        \"--disable-pytest-warnings\",\n"},"line_number":163,"absolute_offset":4209,"submatches":[{"match":{"text":"pytest"},"start":19,"end":25}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"        config.trace.root.setprocessor(\"pytest:config\", mywriter)\n"},"line_number":234,"absolute_offset":6345,"submatches":[{"match":{"text":"pytest"},"start":40,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"@pytest.hookimpl(trylast=True)  # after _pytest.runner\n"},"line_number":262,"absolute_offset":7139,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"        # overhead in general (https://github.com/pytest-dev/py/pull/207).\n"},"line_number":406,"absolute_offset":12306,"submatches":[{"match":{"text":"pytest"},"start":50,"end":56}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"    def pytest_runtest_logreport(self, report: TestReport) -> None:\n"},"line_number":524,"absolute_offset":16685,"submatches":[{"match":{"text":"TestReport"},"start":47,"end":57}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"        items = [x for x in report.result if isinstance(x, pytest.Item)]\n"},"line_number":643,"absolute_offset":21614,"submatches":[{"match":{"text":"pytest"},"start":59,"end":65}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"    @pytest.hookimpl(trylast=True)\n"},"line_number":688,"absolute_offset":23226,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"            msg += \", pytest-{}, py-{}, pluggy-{}\".format(\n"},"line_number":702,"absolute_offset":23916,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"                pytest.__version__, py.__version__, pluggy.__version__\n"},"line_number":703,"absolute_offset":23975,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":798,"absolute_offset":27820,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":825,"absolute_offset":28838,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"            self._tw.line(\"-- Docs: https://docs.pytest.org/en/latest/warnings.html\")\n"},"line_number":961,"absolute_offset":34017,"submatches":[{"match":{"text":"pytest"},"start":49,"end":55}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"                reports = self.getreports(\"passed\")  # type: List[TestReport]\n"},"line_number":966,"absolute_offset":34222,"submatches":[{"match":{"text":"TestReport"},"start":66,"end":76}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"    def _get_teardown_reports(self, nodeid: str) -> List[TestReport]:\n"},"line_number":977,"absolute_offset":34724,"submatches":[{"match":{"text":"TestReport"},"start":57,"end":67}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"    def print_teardown_sections(self, rep: TestReport) -> None:\n"},"line_number":989,"absolute_offset":35152,"submatches":[{"match":{"text":"TestReport"},"start":43,"end":53}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"            if action:  # skipping e.g. \"P\" (passed with output) here.\n"},"line_number":1145,"absolute_offset":41417,"submatches":[{"match":{"text":"skipping"},"start":26,"end":34}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"        # this is workaround, because for now we cannot identify the scope of a skip marker\n"},"line_number":1257,"absolute_offset":45662,"submatches":[{"match":{"text":"skip"},"start":80,"end":84}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"            and \"skip\" in keywords\n"},"line_number":1261,"absolute_offset":45858,"submatches":[{"match":{"text":"skip"},"start":17,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/terminal.py"},"lines":{"text":"        if name.startswith(\"pytest-\"):\n"},"line_number":1302,"absolute_offset":47217,"submatches":[{"match":{"text":"pytest"},"start":28,"end":34}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/terminal.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":5382623,"human":"0.005383s"},"searches":1,"searches_with_match":1,"bytes_searched":47782,"bytes_printed":5371,"matched_lines":21,"matches":21}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/skipping.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"\"\"\" support for skip/xfail functions and markers. \"\"\"\n"},"line_number":1,"absolute_offset":0,"submatches":[{"match":{"text":"skip"},"start":16,"end":20},{"match":{"text":"xfail"},"start":21,"end":26},{"match":{"text":"markers"},"start":41,"end":48}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"from _pytest.outcomes import skip\n"},"line_number":20,"absolute_offset":487,"submatches":[{"match":{"text":"skip"},"start":29,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"from _pytest.outcomes import xfail\n"},"line_number":21,"absolute_offset":521,"submatches":[{"match":{"text":"xfail"},"start":29,"end":34}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        help=\"report the results of xfail tests as if they were not marked\",\n"},"line_number":37,"absolute_offset":920,"submatches":[{"match":{"text":"xfail"},"start":36,"end":41}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"default for the strict parameter of xfail \"\n"},"line_number":42,"absolute_offset":1047,"submatches":[{"match":{"text":"xfail"},"start":45,"end":50}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"markers when not given explicitly (default: False)\",\n"},"line_number":43,"absolute_offset":1100,"submatches":[{"match":{"text":"markers"},"start":9,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        import pytest\n"},"line_number":52,"absolute_offset":1312,"submatches":[{"match":{"text":"pytest"},"start":15,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        old = pytest.xfail\n"},"line_number":54,"absolute_offset":1335,"submatches":[{"match":{"text":"pytest"},"start":14,"end":20},{"match":{"text":"xfail"},"start":21,"end":26}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        config._cleanup.append(lambda: setattr(pytest, \"xfail\", old))\n"},"line_number":55,"absolute_offset":1362,"submatches":[{"match":{"text":"pytest"},"start":47,"end":53},{"match":{"text":"xfail"},"start":56,"end":61}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        nop.Exception = xfail.Exception  # type: ignore[attr-defined] # noqa: F821\n"},"line_number":60,"absolute_offset":1485,"submatches":[{"match":{"text":"xfail"},"start":24,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        setattr(pytest, \"xfail\", nop)\n"},"line_number":61,"absolute_offset":1568,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22},{"match":{"text":"xfail"},"start":25,"end":30}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"markers\",\n"},"line_number":64,"absolute_offset":1636,"submatches":[{"match":{"text":"markers"},"start":9,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"skip(reason=None): skip the given test function with an optional reason. \"\n"},"line_number":65,"absolute_offset":1655,"submatches":[{"match":{"text":"skip"},"start":9,"end":13},{"match":{"text":"skip"},"start":28,"end":32}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        'Example: skip(reason=\"no way of currently testing this\") skips the '\n"},"line_number":66,"absolute_offset":1739,"submatches":[{"match":{"text":"skip"},"start":18,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"markers\",\n"},"line_number":70,"absolute_offset":1869,"submatches":[{"match":{"text":"markers"},"start":9,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"skipif(condition, ..., *, reason=...): \"\n"},"line_number":71,"absolute_offset":1888,"submatches":[{"match":{"text":"skipif"},"start":9,"end":15}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"skip the given test function if any of the conditions evaluate to True. \"\n"},"line_number":72,"absolute_offset":1938,"submatches":[{"match":{"text":"skip"},"start":9,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"Example: skipif(sys.platform == 'win32') skips the test if we are on the win32 platform. \"\n"},"line_number":73,"absolute_offset":2021,"submatches":[{"match":{"text":"skipif"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"See https://docs.pytest.org/en/stable/reference.html#pytest-mark-skipif\",\n"},"line_number":74,"absolute_offset":2121,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32},{"match":{"text":"pytest"},"start":62,"end":68},{"match":{"text":"skipif"},"start":74,"end":80}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"markers\",\n"},"line_number":77,"absolute_offset":2239,"submatches":[{"match":{"text":"markers"},"start":9,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"xfail(condition, ..., *, reason=..., run=True, raises=None, strict=xfail_strict): \"\n"},"line_number":78,"absolute_offset":2258,"submatches":[{"match":{"text":"xfail"},"start":9,"end":14}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        \"a true failure. See https://docs.pytest.org/en/stable/reference.html#pytest-mark-xfail\",\n"},"line_number":84,"absolute_offset":2744,"submatches":[{"match":{"text":"pytest"},"start":42,"end":48},{"match":{"text":"pytest"},"start":78,"end":84},{"match":{"text":"xfail"},"start":90,"end":95}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"    \"\"\"Evaluate a single skipif/xfail condition.\n"},"line_number":89,"absolute_offset":2937,"submatches":[{"match":{"text":"skipif"},"start":25,"end":31},{"match":{"text":"xfail"},"start":32,"end":37}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"    condition is bool()'d. If this fails, an appropriately formatted pytest.fail\n"},"line_number":92,"absolute_offset":3064,"submatches":[{"match":{"text":"pytest"},"start":69,"end":75}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"    \"\"\"Evaluate skip and skipif marks on item, returning Skip if triggered.\"\"\"\n"},"line_number":160,"absolute_offset":5320,"submatches":[{"match":{"text":"skip"},"start":16,"end":20},{"match":{"text":"skipif"},"start":25,"end":31}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"    for mark in item.iter_markers(name=\"skipif\"):\n"},"line_number":161,"absolute_offset":5399,"submatches":[{"match":{"text":"skipif"},"start":40,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"    for mark in item.iter_markers(name=\"skip\"):\n"},"line_number":178,"absolute_offset":5944,"submatches":[{"match":{"text":"skip"},"start":40,"end":44}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"            reason = \"unconditional skip\"\n"},"line_number":184,"absolute_offset":6143,"submatches":[{"match":{"text":"skip"},"start":36,"end":40}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"    \"\"\"Evaluate xfail marks on item, returning Xfail if triggered.\"\"\"\n"},"line_number":201,"absolute_offset":6549,"submatches":[{"match":{"text":"xfail"},"start":16,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"    for mark in item.iter_markers(name=\"xfail\"):\n"},"line_number":202,"absolute_offset":6619,"submatches":[{"match":{"text":"xfail"},"start":40,"end":45}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"# Whether skipped due to skip or skipif marks.\n"},"line_number":225,"absolute_offset":7396,"submatches":[{"match":{"text":"skip"},"start":25,"end":29},{"match":{"text":"skipif"},"start":33,"end":39}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"# Saves the xfail mark evaluation. Can be refreshed during call if None.\n"},"line_number":227,"absolute_offset":7482,"submatches":[{"match":{"text":"xfail"},"start":12,"end":17}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        skip(skipped.reason)\n"},"line_number":239,"absolute_offset":7860,"submatches":[{"match":{"text":"skip"},"start":8,"end":12}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"            xfail(\"[NOTRUN] \" + xfailed.reason)\n"},"line_number":244,"absolute_offset":8042,"submatches":[{"match":{"text":"xfail"},"start":12,"end":17}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"            xfail(\"[NOTRUN] \" + xfailed.reason)\n"},"line_number":255,"absolute_offset":8414,"submatches":[{"match":{"text":"xfail"},"start":12,"end":17}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n"},"line_number":261,"absolute_offset":8503,"submatches":[{"match":{"text":"pytest_runtest_makereport"},"start":4,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"    elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n"},"line_number":275,"absolute_offset":9103,"submatches":[{"match":{"text":"xfail"},"start":57,"end":62}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        # skipped by mark.skipif; change the location of the failure\n"},"line_number":299,"absolute_offset":10050,"submatches":[{"match":{"text":"skipif"},"start":26,"end":32}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/skipping.py"},"lines":{"text":"        # the location of where the skip exception was raised within pytest\n"},"line_number":301,"absolute_offset":10188,"submatches":[{"match":{"text":"skip"},"start":36,"end":40},{"match":{"text":"pytest"},"start":69,"end":75}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/skipping.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":7188789,"human":"0.007189s"},"searches":1,"searches_with_match":1,"bytes_searched":10713,"bytes_printed":10555,"matched_lines":39,"matches":53}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/outcomes.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"    \"\"\" raised from an explicit call to pytest.fail() \"\"\"\n"},"line_number":70,"absolute_offset":2099,"submatches":[{"match":{"text":"pytest"},"start":40,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"    :param int returncode: return code to be used when exiting pytest.\n"},"line_number":116,"absolute_offset":3333,"submatches":[{"match":{"text":"pytest"},"start":63,"end":69}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"def skip(msg: str = \"\", *, allow_module_level: bool = False) -> \"NoReturn\":\n"},"line_number":123,"absolute_offset":3501,"submatches":[{"match":{"text":"skip"},"start":4,"end":8}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"        module level, skipping the rest of the module. Default to False.\n"},"line_number":132,"absolute_offset":3913,"submatches":[{"match":{"text":"skipping"},"start":22,"end":30}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"        It is better to use the :ref:`pytest.mark.skipif ref` marker when possible to declare a test to be\n"},"line_number":135,"absolute_offset":4001,"submatches":[{"match":{"text":"pytest"},"start":38,"end":44},{"match":{"text":"skipif"},"start":50,"end":56}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"        to skip a doctest statically.\n"},"line_number":140,"absolute_offset":4351,"submatches":[{"match":{"text":"skip"},"start":11,"end":15}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"    \"\"\" raised from an explicit call to pytest.xfail() \"\"\"\n"},"line_number":160,"absolute_offset":4964,"submatches":[{"match":{"text":"pytest"},"start":40,"end":46},{"match":{"text":"xfail"},"start":47,"end":52}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"def xfail(reason: str = \"\") -> \"NoReturn\":\n"},"line_number":164,"absolute_offset":5051,"submatches":[{"match":{"text":"xfail"},"start":4,"end":9}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"    Imperatively xfail an executing test or setup functions with the given reason.\n"},"line_number":166,"absolute_offset":5102,"submatches":[{"match":{"text":"xfail"},"start":17,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"        It is better to use the :ref:`pytest.mark.xfail ref` marker when possible to declare a test to be\n"},"line_number":171,"absolute_offset":5283,"submatches":[{"match":{"text":"pytest"},"start":38,"end":44},{"match":{"text":"xfail"},"start":50,"end":55}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"    \"\"\"Imports and returns the requested module ``modname``, or skip the\n"},"line_number":181,"absolute_offset":5641,"submatches":[{"match":{"text":"skip"},"start":64,"end":68}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/outcomes.py"},"lines":{"text":"        docutils = pytest.importorskip(\"docutils\")\n"},"line_number":195,"absolute_offset":6219,"submatches":[{"match":{"text":"pytest"},"start":19,"end":25}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/outcomes.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":936958,"human":"0.000937s"},"searches":1,"searches_with_match":1,"bytes_searched":7441,"bytes_printed":3378,"matched_lines":12,"matches":15}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/stepwise.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"import pytest\n"},"line_number":4,"absolute_offset":53,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"from _pytest.reports import TestReport\n"},"line_number":9,"absolute_offset":205,"submatches":[{"match":{"text":"TestReport"},"start":28,"end":38}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"        \"--stepwise-skip\",\n"},"line_number":22,"absolute_offset":554,"submatches":[{"match":{"text":"skip"},"start":20,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"@pytest.hookimpl\n"},"line_number":29,"absolute_offset":728,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"            self.skip = config.getvalue(\"stepwise_skip\")\n"},"line_number":44,"absolute_offset":1245,"submatches":[{"match":{"text":"skip"},"start":17,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"            self.report_status = \"no previously failed tests, not skipping.\"\n"},"line_number":55,"absolute_offset":1601,"submatches":[{"match":{"text":"skipping"},"start":66,"end":74}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"        # do not skip any tests.\n"},"line_number":70,"absolute_offset":2096,"submatches":[{"match":{"text":"skip"},"start":17,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"            self.report_status = \"previously failed test not found, not skipping.\"\n"},"line_number":72,"absolute_offset":2151,"submatches":[{"match":{"text":"skipping"},"start":72,"end":80}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"            self.report_status = \"skipping {} already passed items.\".format(\n"},"line_number":75,"absolute_offset":2280,"submatches":[{"match":{"text":"skipping"},"start":34,"end":42}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"    def pytest_runtest_logreport(self, report: TestReport) -> None:\n"},"line_number":84,"absolute_offset":2537,"submatches":[{"match":{"text":"TestReport"},"start":47,"end":57}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"            if self.skip:\n"},"line_number":89,"absolute_offset":2679,"submatches":[{"match":{"text":"skip"},"start":20,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"                # Remove test from the failed ones (if it exists) and unset the skip option\n"},"line_number":90,"absolute_offset":2705,"submatches":[{"match":{"text":"skip"},"start":80,"end":84}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/stepwise.py"},"lines":{"text":"                self.skip = False\n"},"line_number":95,"absolute_offset":2966,"submatches":[{"match":{"text":"skip"},"start":21,"end":25}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/stepwise.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":3696832,"human":"0.003697s"},"searches":1,"searches_with_match":1,"bytes_searched":4170,"bytes_printed":3210,"matched_lines":13,"matches":13}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/monkeypatch.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/monkeypatch.py"},"lines":{"text":"import pytest\n"},"line_number":16,"absolute_offset":352,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/monkeypatch.py"},"lines":{"text":"        such as mocking ``stdlib`` functions that might break pytest itself if mocked (for examples\n"},"line_number":141,"absolute_offset":4176,"submatches":[{"match":{"text":"pytest"},"start":62,"end":68}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/monkeypatch.py"},"lines":{"text":"        of this see `#3290 <https://github.com/pytest-dev/pytest/issues/3290>`_.\n"},"line_number":142,"absolute_offset":4276,"submatches":[{"match":{"text":"pytest"},"start":47,"end":53},{"match":{"text":"pytest"},"start":58,"end":64}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/monkeypatch.py"},"lines":{"text":"                pytest.PytestWarning(\n"},"line_number":275,"absolute_offset":9301,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/monkeypatch.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":46834,"human":"0.000047s"},"searches":1,"searches_with_match":1,"bytes_searched":13104,"bytes_printed":1133,"matched_lines":4,"matches":5}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/main.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/main.py"},"lines":{"text":"from _pytest.reports import TestReport\n"},"line_number":36,"absolute_offset":956,"submatches":[{"match":{"text":"TestReport"},"start":28,"end":38}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/main.py"},"lines":{"text":"        help=\"any warnings encountered while parsing the `pytest` section of the configuration file raise errors.\",\n"},"line_number":83,"absolute_offset":2227,"submatches":[{"match":{"text":"pytest"},"start":58,"end":64}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/main.py"},"lines":{"text":"        \"--strict-markers\",\n"},"line_number":86,"absolute_offset":2371,"submatches":[{"match":{"text":"markers"},"start":18,"end":25}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/main.py"},"lines":{"text":"        help=\"markers not registered in the `markers` section of the configuration file raise errors.\",\n"},"line_number":89,"absolute_offset":2448,"submatches":[{"match":{"text":"markers"},"start":14,"end":21},{"match":{"text":"markers"},"start":45,"end":52}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/main.py"},"lines":{"text":"        self, report: Union[TestReport, CollectReport]\n"},"line_number":483,"absolute_offset":15680,"submatches":[{"match":{"text":"TestReport"},"start":28,"end":38}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/main.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":351500,"human":"0.000351s"},"searches":1,"searches_with_match":1,"bytes_searched":28355,"bytes_printed":1412,"matched_lines":5,"matches":6}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/mark/expression.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/expression.py"},"lines":{"text":"            astexpr, filename=\"<pytest match expression>\", mode=\"eval\",\n"},"line_number":209,"absolute_offset":5823,"submatches":[{"match":{"text":"pytest"},"start":32,"end":38}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/mark/expression.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":60208,"human":"0.000060s"},"searches":1,"searches_with_match":1,"bytes_searched":6436,"bytes_printed":351,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/logging.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"import pytest\n"},"line_number":18,"absolute_offset":391,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"            # pytest wants to make such mistakes visible during testing.\n"},"line_number":337,"absolute_offset":11624,"submatches":[{"match":{"text":"pytest"},"start":14,"end":20}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":461,"absolute_offset":16238,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"        raise pytest.UsageError(\n"},"line_number":494,"absolute_offset":17489,"submatches":[{"match":{"text":"pytest"},"start":14,"end":20}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"@pytest.hookimpl(trylast=True)\n"},"line_number":502,"absolute_offset":17788,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"            # terminal reporter is disabled e.g. by pytest-xdist.\n"},"line_number":620,"absolute_offset":22533,"submatches":[{"match":{"text":"pytest"},"start":52,"end":58}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True, tryfirst=True)\n"},"line_number":625,"absolute_offset":22646,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True, tryfirst=True)\n"},"line_number":633,"absolute_offset":23002,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":641,"absolute_offset":23354,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl\n"},"line_number":657,"absolute_offset":24012,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl\n"},"line_number":662,"absolute_offset":24165,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":678,"absolute_offset":24825,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":686,"absolute_offset":25164,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":692,"absolute_offset":25386,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl\n"},"line_number":700,"absolute_offset":25714,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True, tryfirst=True)\n"},"line_number":704,"absolute_offset":25832,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    @pytest.hookimpl\n"},"line_number":712,"absolute_offset":26190,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/logging.py"},"lines":{"text":"    Custom FileHandler with pytest tweaks.\n"},"line_number":721,"absolute_offset":26445,"submatches":[{"match":{"text":"pytest"},"start":28,"end":34}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/logging.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":535333,"human":"0.000535s"},"searches":1,"searches_with_match":1,"bytes_searched":29339,"bytes_printed":4200,"matched_lines":18,"matches":18}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/pastebin.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/pastebin.py"},"lines":{"text":"import pytest\n"},"line_number":7,"absolute_offset":162,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pastebin.py"},"lines":{"text":"@pytest.hookimpl(trylast=True)\n"},"line_number":31,"absolute_offset":778,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/pastebin.py"},"lines":{"text":"        # when using pytest-xdist, for example\n"},"line_number":37,"absolute_offset":1107,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/pastebin.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":773624,"human":"0.000774s"},"searches":1,"searches_with_match":1,"bytes_searched":3980,"bytes_printed":730,"matched_lines":3,"matches":3}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/nodes.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/nodes.py"},"lines":{"text":"        #: the pytest config object\n"},"line_number":134,"absolute_offset":3966,"submatches":[{"match":{"text":"pytest"},"start":15,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/nodes.py"},"lines":{"text":"        #: keywords/markers collected from all scopes\n"},"line_number":153,"absolute_offset":4615,"submatches":[{"match":{"text":"markers"},"start":20,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/nodes.py"},"lines":{"text":"        \"\"\" fspath sensitive hook proxy used to call pytest hooks\"\"\"\n"},"line_number":199,"absolute_offset":6306,"submatches":[{"match":{"text":"pytest"},"start":53,"end":59}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/nodes.py"},"lines":{"text":"        :type marker: ``str`` or ``pytest.mark.*``  object\n"},"line_number":266,"absolute_offset":8399,"submatches":[{"match":{"text":"pytest"},"start":35,"end":41}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/nodes.py"},"lines":{"text":"            raise ValueError(\"is not a string or pytest.mark.* Marker\")\n"},"line_number":278,"absolute_offset":8820,"submatches":[{"match":{"text":"pytest"},"start":49,"end":55}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/nodes.py"},"lines":{"text":"        iterate over all markers of the node\n"},"line_number":289,"absolute_offset":9234,"submatches":[{"match":{"text":"markers"},"start":25,"end":32}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/nodes.py"},"lines":{"text":"        iterate over all markers of the node\n"},"line_number":299,"absolute_offset":9560,"submatches":[{"match":{"text":"markers"},"start":25,"end":32}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/nodes.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":631708,"human":"0.000632s"},"searches":1,"searches_with_match":1,"bytes_searched":22925,"bytes_printed":1786,"matched_lines":7,"matches":7}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/junitxml.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"src/main/resources/org/jenkinsci/plugins/xunit/types/model/xsd/junit-10.xsd\n"},"line_number":9,"absolute_offset":222,"submatches":[{"match":{"text":"src"},"start":0,"end":3}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"import pytest\n"},"line_number":25,"absolute_offset":534,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"from _pytest.reports import TestReport\n"},"line_number":35,"absolute_offset":881,"submatches":[{"match":{"text":"TestReport"},"start":28,"end":38}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def __init__(self, nodeid: Union[str, TestReport], xml: \"LogXML\") -> None:\n"},"line_number":106,"absolute_offset":2906,"submatches":[{"match":{"text":"TestReport"},"start":42,"end":52}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def record_testreport(self, testreport: TestReport) -> None:\n"},"line_number":138,"absolute_offset":4088,"submatches":[{"match":{"text":"TestReport"},"start":44,"end":54}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def write_captured_output(self, report: TestReport) -> None:\n"},"line_number":180,"absolute_offset":5745,"submatches":[{"match":{"text":"TestReport"},"start":44,"end":54}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def _write_content(self, report: TestReport, content: str, jheader: str) -> None:\n"},"line_number":206,"absolute_offset":6917,"submatches":[{"match":{"text":"TestReport"},"start":37,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def append_pass(self, report: TestReport) -> None:\n"},"line_number":210,"absolute_offset":7092,"submatches":[{"match":{"text":"TestReport"},"start":34,"end":44}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def append_failure(self, report: TestReport) -> None:\n"},"line_number":213,"absolute_offset":7181,"submatches":[{"match":{"text":"TestReport"},"start":37,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"            self._add_simple(Junit.skipped, \"xfail-marked test passes unexpectedly\")\n"},"line_number":216,"absolute_offset":7340,"submatches":[{"match":{"text":"xfail"},"start":45,"end":50}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def append_collect_error(self, report: TestReport) -> None:\n"},"line_number":228,"absolute_offset":7867,"submatches":[{"match":{"text":"TestReport"},"start":43,"end":53}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def append_collect_skipped(self, report: TestReport) -> None:\n"},"line_number":235,"absolute_offset":8154,"submatches":[{"match":{"text":"TestReport"},"start":45,"end":55}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def append_error(self, report: TestReport) -> None:\n"},"line_number":238,"absolute_offset":8300,"submatches":[{"match":{"text":"TestReport"},"start":35,"end":45}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def append_skipped(self, report: TestReport) -> None:\n"},"line_number":251,"absolute_offset":8817,"submatches":[{"match":{"text":"TestReport"},"start":37,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"                    \"\", type=\"pytest.xfail\", message=bin_xml_escape(xfailreason)\n"},"line_number":258,"absolute_offset":9110,"submatches":[{"match":{"text":"pytest"},"start":30,"end":36},{"match":{"text":"xfail"},"start":37,"end":42}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"                    type=\"pytest.skip\",\n"},"line_number":271,"absolute_offset":9611,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32},{"match":{"text":"skip"},"start":33,"end":37}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":302,"absolute_offset":10739,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":323,"absolute_offset":11397,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"@pytest.fixture(scope=\"session\")\n"},"line_number":360,"absolute_offset":12590,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"        \"junit_suite_name\", \"Test suite name for JUnit report\", default=\"pytest\"\n"},"line_number":411,"absolute_offset":14303,"submatches":[{"match":{"text":"pytest"},"start":73,"end":79}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"        suite_name: str = \"pytest\",\n"},"line_number":482,"absolute_offset":16550,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"        )  # type: Dict[Tuple[Union[str, TestReport], object], _NodeReporter]\n"},"line_number":501,"absolute_offset":17265,"submatches":[{"match":{"text":"TestReport"},"start":41,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"        self.open_reports = []  # type: List[TestReport]\n"},"line_number":506,"absolute_offset":17559,"submatches":[{"match":{"text":"TestReport"},"start":45,"end":55}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def finalize(self, report: TestReport) -> None:\n"},"line_number":513,"absolute_offset":17783,"submatches":[{"match":{"text":"TestReport"},"start":31,"end":41}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def node_reporter(self, report: Union[TestReport, str]) -> _NodeReporter:\n"},"line_number":521,"absolute_offset":18118,"submatches":[{"match":{"text":"TestReport"},"start":42,"end":52}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"        nodeid = getattr(report, \"nodeid\", report)  # type: Union[str, TestReport]\n"},"line_number":522,"absolute_offset":18196,"submatches":[{"match":{"text":"TestReport"},"start":71,"end":81}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def _opentestcase(self, report: TestReport) -> _NodeReporter:\n"},"line_number":543,"absolute_offset":18820,"submatches":[{"match":{"text":"TestReport"},"start":36,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def pytest_runtest_logreport(self, report: TestReport) -> None:\n"},"line_number":548,"absolute_offset":19000,"submatches":[{"match":{"text":"TestReport"},"start":47,"end":57}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def update_testcase_duration(self, report: TestReport) -> None:\n"},"line_number":636,"absolute_offset":22455,"submatches":[{"match":{"text":"TestReport"},"start":47,"end":57}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"    def pytest_collectreport(self, report: TestReport) -> None:\n"},"line_number":644,"absolute_offset":22880,"submatches":[{"match":{"text":"TestReport"},"start":43,"end":53}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/junitxml.py"},"lines":{"text":"        reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n"},"line_number":654,"absolute_offset":23301,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/junitxml.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":561166,"human":"0.000561s"},"searches":1,"searches_with_match":1,"bytes_searched":25579,"bytes_printed":8095,"matched_lines":31,"matches":33}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/helpconfig.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"import pytest\n"},"line_number":11,"absolute_offset":199,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"    order to skip the rest of the argument parsing when --help is passed.\n"},"line_number":20,"absolute_offset":459,"submatches":[{"match":{"text":"skip"},"start":13,"end":17}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"        # We should only skip the rest of the parsing after preparse is done\n"},"line_number":40,"absolute_offset":1192,"submatches":[{"match":{"text":"skip"},"start":25,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"        help=\"display pytest version and information about plugins.\"\n"},"line_number":53,"absolute_offset":1572,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"@pytest.hookimpl(hookwrapper=True)\n"},"line_number":96,"absolute_offset":2816,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"            \"versions pytest-%s, py-%s, \"\n"},"line_number":104,"absolute_offset":3088,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"                pytest.__version__,\n"},"line_number":107,"absolute_offset":3191,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"            \"This is pytest version {}, imported from {}\\n\".format(\n"},"line_number":130,"absolute_offset":3976,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"                pytest.__version__, pytest.__file__\n"},"line_number":131,"absolute_offset":4044,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22},{"match":{"text":"pytest"},"start":36,"end":42}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"        sys.stderr.write(\"pytest {}\\n\".format(pytest.__version__))\n"},"line_number":139,"absolute_offset":4285,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32},{"match":{"text":"pytest"},"start":46,"end":52}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"        \"[pytest] ini-options in the first pytest.ini|tox.ini|setup.cfg file found:\"\n"},"line_number":162,"absolute_offset":4893,"submatches":[{"match":{"text":"pytest"},"start":10,"end":16},{"match":{"text":"pytest"},"start":43,"end":49}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"        (\"PYTEST_DEBUG\", \"set to enable debug tracing of pytest's internals\"),\n"},"line_number":204,"absolute_offset":6425,"submatches":[{"match":{"text":"pytest"},"start":57,"end":63}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"    tw.line(\"to see available markers type: pytest --markers\")\n"},"line_number":211,"absolute_offset":6617,"submatches":[{"match":{"text":"markers"},"start":30,"end":37},{"match":{"text":"pytest"},"start":44,"end":50},{"match":{"text":"markers"},"start":53,"end":60}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"    tw.line(\"to see available fixtures type: pytest --fixtures\")\n"},"line_number":212,"absolute_offset":6680,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/helpconfig.py"},"lines":{"text":"            \"using: pytest-{} pylib-{}\".format(pytest.__version__, py.__version__)\n"},"line_number":243,"absolute_offset":7741,"submatches":[{"match":{"text":"pytest"},"start":20,"end":26},{"match":{"text":"pytest"},"start":47,"end":53}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/helpconfig.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":502374,"human":"0.000502s"},"searches":1,"searches_with_match":1,"bytes_searched":8309,"bytes_printed":4202,"matched_lines":15,"matches":21}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/freeze_support.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/freeze_support.py"},"lines":{"text":"pytest\n"},"line_number":3,"absolute_offset":80,"submatches":[{"match":{"text":"pytest"},"start":0,"end":6}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/freeze_support.py"},"lines":{"text":"    Returns a list of module names used by pytest that should be\n"},"line_number":13,"absolute_offset":227,"submatches":[{"match":{"text":"pytest"},"start":43,"end":49}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/freeze_support.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":118625,"human":"0.000119s"},"searches":1,"searches_with_match":1,"bytes_searched":1416,"bytes_printed":536,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/faulthandler.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/faulthandler.py"},"lines":{"text":"import pytest\n"},"line_number":7,"absolute_offset":87,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/faulthandler.py"},"lines":{"text":"                pytest.PytestConfigWarning(\n"},"line_number":40,"absolute_offset":1206,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/faulthandler.py"},"lines":{"text":"                    \"faulthandler module enabled before pytest configuration step, \"\n"},"line_number":41,"absolute_offset":1250,"submatches":[{"match":{"text":"pytest"},"start":56,"end":62}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/faulthandler.py"},"lines":{"text":"        # so we can see crashes after pytest has finished, usually during\n"},"line_number":66,"absolute_offset":2215,"submatches":[{"match":{"text":"pytest"},"start":38,"end":44}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/faulthandler.py"},"lines":{"text":"            # pytest-xdist monkeypatches sys.stderr with an object that is not an actual file.\n"},"line_number":77,"absolute_offset":2673,"submatches":[{"match":{"text":"pytest"},"start":14,"end":20}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/faulthandler.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True, trylast=True)\n"},"line_number":86,"absolute_offset":3103,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/faulthandler.py"},"lines":{"text":"    @pytest.hookimpl(tryfirst=True)\n"},"line_number":101,"absolute_offset":3661,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/faulthandler.py"},"lines":{"text":"    @pytest.hookimpl(tryfirst=True)\n"},"line_number":109,"absolute_offset":3906,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/faulthandler.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":125542,"human":"0.000126s"},"searches":1,"searches_with_match":1,"bytes_searched":4177,"bytes_printed":2074,"matched_lines":8,"matches":8}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/deprecated.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/deprecated.py"},"lines":{"text":"that is planned to be removed in the next pytest release.\n"},"line_number":3,"absolute_offset":94,"submatches":[{"match":{"text":"pytest"},"start":42,"end":48}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/deprecated.py"},"lines":{"text":"    \"since pytest 2.3 - use the newer attribute instead.\"\n"},"line_number":25,"absolute_offset":920,"submatches":[{"match":{"text":"pytest"},"start":11,"end":17}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/deprecated.py"},"lines":{"text":"    \"--result-log is deprecated, please try the new pytest-reportlog plugin.\\n\"\n"},"line_number":34,"absolute_offset":1212,"submatches":[{"match":{"text":"pytest"},"start":52,"end":58}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/deprecated.py"},"lines":{"text":"    \"See https://docs.pytest.org/en/latest/deprecations.html#result-log-result-log for more information.\"\n"},"line_number":35,"absolute_offset":1292,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/deprecated.py"},"lines":{"text":"    \"Passing arguments to pytest.fixture() as positional arguments is deprecated - pass them \"\n"},"line_number":39,"absolute_offset":1458,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/deprecated.py"},"lines":{"text":"    \"https://docs.pytest.org/en/latest/deprecations.html#node-construction-changed-to-node-from-parent\"\n"},"line_number":47,"absolute_offset":1767,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/deprecated.py"},"lines":{"text":"    \"The 'junit_family' default value will change to 'xunit2' in pytest 6.0. See:\\n\"\n"},"line_number":52,"absolute_offset":1953,"submatches":[{"match":{"text":"pytest"},"start":65,"end":71}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/deprecated.py"},"lines":{"text":"    \"  https://docs.pytest.org/en/latest/deprecations.html#junit-family-default-value-change-to-xunit2\\n\"\n"},"line_number":53,"absolute_offset":2038,"submatches":[{"match":{"text":"pytest"},"start":20,"end":26}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/deprecated.py"},"lines":{"text":"    \"pytest.collect.{name} was moved to pytest.{name}\\n\"\n"},"line_number":64,"absolute_offset":2440,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11},{"match":{"text":"pytest"},"start":40,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/deprecated.py"},"lines":{"text":"    \"See https://docs.pytest.org/en/latest/deprecations.html#terminalreporter-writer for more information.\"\n"},"line_number":71,"absolute_offset":2701,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/deprecated.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":162167,"human":"0.000162s"},"searches":1,"searches_with_match":1,"bytes_searched":3296,"bytes_printed":2932,"matched_lines":10,"matches":11}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/config/exceptions.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/exceptions.py"},"lines":{"text":"    \"\"\" error in pytest usage or invocation\"\"\"\n"},"line_number":2,"absolute_offset":29,"submatches":[{"match":{"text":"pytest"},"start":17,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/exceptions.py"},"lines":{"text":"    \"\"\"Raised when pytest should print it's help to skip the rest of the\n"},"line_number":6,"absolute_offset":106,"submatches":[{"match":{"text":"pytest"},"start":19,"end":25},{"match":{"text":"skip"},"start":52,"end":56}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/config/exceptions.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":31583,"human":"0.000032s"},"searches":1,"searches_with_match":1,"bytes_searched":229,"bytes_printed":649,"matched_lines":2,"matches":3}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/doctest.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"import pytest\n"},"line_number":24,"absolute_offset":503,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"class DoctestItem(pytest.Item):\n"},"line_number":240,"absolute_offset":7363,"submatches":[{"match":{"text":"pytest"},"start":18,"end":24}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"class DoctestTextfile(pytest.Module):\n"},"line_number":412,"absolute_offset":14106,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"    \"\"\"raises pytest.skip() if all examples in the given DocTest have the SKIP\n"},"line_number":444,"absolute_offset":15153,"submatches":[{"match":{"text":"pytest"},"start":14,"end":20},{"match":{"text":"skip"},"start":21,"end":25}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"        pytest.skip(\"all tests skipped by +SKIP option\")\n"},"line_number":451,"absolute_offset":15377,"submatches":[{"match":{"text":"pytest"},"start":8,"end":14},{"match":{"text":"skip"},"start":15,"end":19}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"                \"https://github.com/pytest-dev/pytest/issues/5080\" % (e, func),\n"},"line_number":484,"absolute_offset":16538,"submatches":[{"match":{"text":"pytest"},"start":36,"end":42},{"match":{"text":"pytest"},"start":47,"end":53}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"class DoctestModule(pytest.Module):\n"},"line_number":496,"absolute_offset":16797,"submatches":[{"match":{"text":"pytest"},"start":20,"end":26}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"            https://github.com/pytest-dev/pytest/issues/3456\n"},"line_number":504,"absolute_offset":17072,"submatches":[{"match":{"text":"pytest"},"start":31,"end":37},{"match":{"text":"pytest"},"start":42,"end":48}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"                    pytest.skip(\"unable to import module %r\" % self.fspath)\n"},"line_number":542,"absolute_offset":18603,"submatches":[{"match":{"text":"pytest"},"start":20,"end":26},{"match":{"text":"skip"},"start":27,"end":31}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"            if test.examples:  # skip empty doctests\n"},"line_number":556,"absolute_offset":19140,"submatches":[{"match":{"text":"skip"},"start":33,"end":37}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/doctest.py"},"lines":{"text":"@pytest.fixture(scope=\"session\")\n"},"line_number":737,"absolute_offset":25252,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/doctest.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":94042,"human":"0.000094s"},"searches":1,"searches_with_match":1,"bytes_searched":25460,"bytes_printed":2984,"matched_lines":11,"matches":16}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/config/argparsing.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/argparsing.py"},"lines":{"text":"        respective group in the output of ``pytest. --help``.\n"},"line_number":68,"absolute_offset":2051,"submatches":[{"match":{"text":"pytest"},"start":44,"end":50}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/argparsing.py"},"lines":{"text":"        After command line parsing options are available on the pytest config\n"},"line_number":90,"absolute_offset":2816,"submatches":[{"match":{"text":"pytest"},"start":64,"end":70}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/argparsing.py"},"lines":{"text":"                'pytest now uses argparse. \"%default\" should be'\n"},"line_number":217,"absolute_offset":7685,"submatches":[{"match":{"text":"pytest"},"start":17,"end":23}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/config/argparsing.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":96542,"human":"0.000097s"},"searches":1,"searches_with_match":1,"bytes_searched":20618,"bytes_printed":888,"matched_lines":3,"matches":3}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/unittest.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"import pytest\n"},"line_number":15,"absolute_offset":342,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"from _pytest.outcomes import skip\n"},"line_number":25,"absolute_offset":694,"submatches":[{"match":{"text":"skip"},"start":29,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"from _pytest.outcomes import xfail\n"},"line_number":26,"absolute_offset":728,"submatches":[{"match":{"text":"xfail"},"start":29,"end":34}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"from _pytest.skipping import skipped_by_mark_key\n"},"line_number":31,"absolute_offset":907,"submatches":[{"match":{"text":"skipping"},"start":13,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"from _pytest.skipping import unexpectedsuccess_key\n"},"line_number":32,"absolute_offset":956,"submatches":[{"match":{"text":"skipping"},"start":13,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"    @pytest.fixture(scope=scope, autouse=True)\n"},"line_number":122,"absolute_offset":4184,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"            pytest.skip(reason)\n"},"line_number":126,"absolute_offset":4388,"submatches":[{"match":{"text":"pytest"},"start":12,"end":18},{"match":{"text":"skip"},"start":19,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"            skip(reason)\n"},"line_number":216,"absolute_offset":7689,"submatches":[{"match":{"text":"skip"},"start":12,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"        except skip.Exception:\n"},"line_number":217,"absolute_offset":7714,"submatches":[{"match":{"text":"skip"},"start":15,"end":19}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"            xfail(str(reason))\n"},"line_number":228,"absolute_offset":8017,"submatches":[{"match":{"text":"xfail"},"start":12,"end":17}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"        except xfail.Exception:\n"},"line_number":229,"absolute_offset":8048,"submatches":[{"match":{"text":"xfail"},"start":15,"end":20}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"def pytest_runtest_makereport(item: Item, call: CallInfo[None]) -> None:\n"},"line_number":292,"absolute_offset":10786,"submatches":[{"match":{"text":"pytest_runtest_makereport"},"start":4,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"        # let's substitute the excinfo with a pytest.skip one\n"},"line_number":310,"absolute_offset":11337,"submatches":[{"match":{"text":"pytest"},"start":46,"end":52},{"match":{"text":"skip"},"start":53,"end":57}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"            lambda: pytest.skip(str(excinfo.value)), call.when\n"},"line_number":312,"absolute_offset":11441,"submatches":[{"match":{"text":"pytest"},"start":20,"end":26},{"match":{"text":"skip"},"start":27,"end":31}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/unittest.py"},"lines":{"text":"    \"\"\"Return True if the given object has been marked with @unittest.skip\"\"\"\n"},"line_number":361,"absolute_offset":12960,"submatches":[{"match":{"text":"skip"},"start":70,"end":74}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/unittest.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":3962332,"human":"0.003962s"},"searches":1,"searches_with_match":1,"bytes_searched":13096,"bytes_printed":3767,"matched_lines":15,"matches":18}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/debugging.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/debugging.py"},"lines":{"text":"            # Happens when using pytest.set_trace outside of a test.\n"},"line_number":109,"absolute_offset":3194,"submatches":[{"match":{"text":"pytest"},"start":33,"end":39}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/debugging.py"},"lines":{"text":"                whole pytest run, and adjust the report etc.\n"},"line_number":190,"absolute_offset":6238,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/debugging.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":461000,"human":"0.000461s"},"searches":1,"searches_with_match":1,"bytes_searched":13016,"bytes_printed":587,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/hookspec.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"\"\"\" hook specifications for pytest plugins, invoked from main.py and builtin plugins.  \"\"\"\n"},"line_number":1,"absolute_offset":0,"submatches":[{"match":{"text":"pytest"},"start":28,"end":34}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    from _pytest.reports import TestReport\n"},"line_number":42,"absolute_offset":1372,"submatches":[{"match":{"text":"TestReport"},"start":32,"end":42}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"hookspec = HookspecMarker(\"pytest\")\n"},"line_number":47,"absolute_offset":1507,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.PytestPluginManager pluginmanager: pytest plugin manager\n"},"line_number":60,"absolute_offset":1983,"submatches":[{"match":{"text":"pytest"},"start":61,"end":67}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    \"\"\" a new pytest plugin got registered.\n"},"line_number":71,"absolute_offset":2278,"submatches":[{"match":{"text":"pytest"},"start":14,"end":20}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.PytestPluginManager manager: pytest plugin manager\n"},"line_number":74,"absolute_offset":2372,"submatches":[{"match":{"text":"pytest"},"start":55,"end":61}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"        files situated at the tests root directory due to how pytest\n"},"line_number":89,"absolute_offset":2857,"submatches":[{"match":{"text":"pytest"},"start":62,"end":68}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :arg _pytest.config.PytestPluginManager pluginmanager: pytest plugin manager,\n"},"line_number":97,"absolute_offset":3279,"submatches":[{"match":{"text":"pytest"},"start":59,"end":65}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :arg _pytest.config.Config config: pytest config object\n"},"line_number":133,"absolute_offset":4600,"submatches":[{"match":{"text":"pytest"},"start":39,"end":45}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"        This hook will only be called for plugin classes passed to the ``plugins`` arg when using `pytest.main`_ to\n"},"line_number":152,"absolute_offset":5205,"submatches":[{"match":{"text":"pytest"},"start":99,"end":105}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.PytestPluginManager pluginmanager: pytest plugin manager\n"},"line_number":155,"absolute_offset":5362,"submatches":[{"match":{"text":"pytest"},"start":61,"end":67}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    This hook is considered deprecated and will be removed in a future pytest version. Consider\n"},"line_number":163,"absolute_offset":5677,"submatches":[{"match":{"text":"pytest"},"start":71,"end":77}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":169,"absolute_offset":5939,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":184,"absolute_offset":6504,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config early_config: pytest config object\n"},"line_number":197,"absolute_offset":6892,"submatches":[{"match":{"text":"pytest"},"start":47,"end":53}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.main.Session session: the pytest session object\n"},"line_number":229,"absolute_offset":8208,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.main.Session session: the pytest session object\n"},"line_number":239,"absolute_offset":8493,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":240,"absolute_offset":8560,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.main.Session session: the pytest session object\n"},"line_number":248,"absolute_offset":8819,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":262,"absolute_offset":9305,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    by @pytest.mark.parametrize calls. Return None if the hook doesn't know about ``val``.\n"},"line_number":356,"absolute_offset":12304,"submatches":[{"match":{"text":"pytest"},"start":8,"end":14}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":361,"absolute_offset":12521,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param str argname: the automatic parameter name produced by pytest\n"},"line_number":363,"absolute_offset":12622,"submatches":[{"match":{"text":"pytest"},"start":65,"end":71}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    or the ``collectonly`` pytest option is set.\n"},"line_number":378,"absolute_offset":13201,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    If at any point :py:func:`pytest.exit` is called, the loop is\n"},"line_number":380,"absolute_offset":13251,"submatches":[{"match":{"text":"pytest"},"start":30,"end":36}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.main.Session session: The pytest session object.\n"},"line_number":386,"absolute_offset":13513,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"        - ``report = pytest_runtest_makereport(item, call)``\n"},"line_number":405,"absolute_offset":14151,"submatches":[{"match":{"text":"pytest_runtest_makereport"},"start":21,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    - Call phase, if the the setup passed and the ``setuponly`` pytest option is not set:\n"},"line_number":409,"absolute_offset":14351,"submatches":[{"match":{"text":"pytest"},"start":64,"end":70}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"        - ``report = pytest_runtest_makereport(item, call)``\n"},"line_number":411,"absolute_offset":14527,"submatches":[{"match":{"text":"pytest_runtest_makereport"},"start":21,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"        - ``report = pytest_runtest_makereport(item, call)``\n"},"line_number":417,"absolute_offset":14853,"submatches":[{"match":{"text":"pytest_runtest_makereport"},"start":21,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"def pytest_runtest_makereport(\n"},"line_number":489,"absolute_offset":17443,"submatches":[{"match":{"text":"pytest_runtest_makereport"},"start":4,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":") -> Optional[\"TestReport\"]:\n"},"line_number":491,"absolute_offset":17515,"submatches":[{"match":{"text":"TestReport"},"start":15,"end":25}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    \"\"\"Called to create a :py:class:`_pytest.reports.TestReport` for each of\n"},"line_number":492,"absolute_offset":17544,"submatches":[{"match":{"text":"TestReport"},"start":53,"end":63}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"def pytest_runtest_logreport(report: \"TestReport\") -> None:\n"},"line_number":503,"absolute_offset":17905,"submatches":[{"match":{"text":"TestReport"},"start":38,"end":48}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    \"\"\"Process the :py:class:`_pytest.reports.TestReport` produced for each\n"},"line_number":504,"absolute_offset":17965,"submatches":[{"match":{"text":"TestReport"},"start":46,"end":56}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    config: \"Config\", report: Union[\"CollectReport\", \"TestReport\"],\n"},"line_number":513,"absolute_offset":18261,"submatches":[{"match":{"text":"TestReport"},"start":54,"end":64}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":") -> Optional[Union[\"CollectReport\", \"TestReport\"]]:\n"},"line_number":524,"absolute_offset":18612,"submatches":[{"match":{"text":"TestReport"},"start":38,"end":48}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.main.Session session: the pytest session object\n"},"line_number":569,"absolute_offset":20102,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.main.Session session: the pytest session object\n"},"line_number":578,"absolute_offset":20376,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param int exitstatus: the status which pytest will return to the system\n"},"line_number":579,"absolute_offset":20443,"submatches":[{"match":{"text":"pytest"},"start":44,"end":50}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":586,"absolute_offset":20626,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":605,"absolute_offset":21379,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    and the pytest introspected assertion information is available in the\n"},"line_number":619,"absolute_offset":21783,"submatches":[{"match":{"text":"pytest"},"start":12,"end":18}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"        [pytest]\n"},"line_number":627,"absolute_offset":22003,"submatches":[{"match":{"text":"pytest"},"start":9,"end":15}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.nodes.Item item: pytest item object of current test\n"},"line_number":633,"absolute_offset":22231,"submatches":[{"match":{"text":"pytest"},"start":36,"end":42}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"        be changed/removed without warning in any future pytest release.\n"},"line_number":641,"absolute_offset":22574,"submatches":[{"match":{"text":"pytest"},"start":57,"end":63}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":657,"absolute_offset":23160,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"        files situated at the tests root directory due to how pytest\n"},"line_number":670,"absolute_offset":23603,"submatches":[{"match":{"text":"pytest"},"start":62,"end":68}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":685,"absolute_offset":24101,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param items: list of pytest items that are going to be executed; this list should not be modified.\n"},"line_number":687,"absolute_offset":24221,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    report: Union[\"CollectReport\", \"TestReport\"], config: \"Config\"\n"},"line_number":700,"absolute_offset":24621,"submatches":[{"match":{"text":"TestReport"},"start":36,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    pytest may style these implicitly according to the report outcome.\n"},"line_number":716,"absolute_offset":25211,"submatches":[{"match":{"text":"pytest"},"start":4,"end":10}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: The pytest config object.\n"},"line_number":721,"absolute_offset":25485,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":734,"absolute_offset":25981,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    \"\"\"(**Deprecated**) Process a warning captured by the internal pytest warnings plugin.\n"},"line_number":748,"absolute_offset":26390,"submatches":[{"match":{"text":"pytest"},"start":67,"end":73}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    This hook is considered deprecated and will be removed in a future pytest version.\n"},"line_number":752,"absolute_offset":26507,"submatches":[{"match":{"text":"pytest"},"start":71,"end":77}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"        * ``\"config\"``: during pytest configuration/initialization stage.\n"},"line_number":762,"absolute_offset":26982,"submatches":[{"match":{"text":"pytest"},"start":31,"end":37}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param pytest.Item|None item:\n"},"line_number":766,"absolute_offset":27154,"submatches":[{"match":{"text":"pytest"},"start":11,"end":17}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    Process a warning captured by the internal pytest warnings plugin.\n"},"line_number":784,"absolute_offset":27775,"submatches":[{"match":{"text":"pytest"},"start":47,"end":53}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"        * ``\"config\"``: during pytest configuration/initialization stage.\n"},"line_number":793,"absolute_offset":28185,"submatches":[{"match":{"text":"pytest"},"start":31,"end":37}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    report: Union[\"CollectReport\", \"TestReport\"],\n"},"line_number":832,"absolute_offset":29407,"submatches":[{"match":{"text":"TestReport"},"start":36,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    in which case ``report`` is a :py:class:`_pytest.reports.TestReport`.\n"},"line_number":841,"absolute_offset":29809,"submatches":[{"match":{"text":"TestReport"},"start":61,"end":71}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    exception like ``skip.Exception``.\n"},"line_number":844,"absolute_offset":29960,"submatches":[{"match":{"text":"skip"},"start":21,"end":25}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":852,"absolute_offset":30221,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/hookspec.py"},"lines":{"text":"    :param _pytest.config.Config config: pytest config object\n"},"line_number":863,"absolute_offset":30582,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/hookspec.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":1261458,"human":"0.001261s"},"searches":1,"searches_with_match":1,"bytes_searched":30689,"bytes_printed":17129,"matched_lines":65,"matches":65}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/compat.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/compat.py"},"lines":{"text":"        # __pytest_wrapped__ is set by @pytest.fixture when wrapping the fixture function\n"},"line_number":287,"absolute_offset":8324,"submatches":[{"match":{"text":"pytest"},"start":40,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/compat.py"},"lines":{"text":"        # to trigger a warning if it gets called directly instead of by pytest: we don't\n"},"line_number":288,"absolute_offset":8414,"submatches":[{"match":{"text":"pytest"},"start":72,"end":78}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/compat.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":167208,"human":"0.000167s"},"searches":1,"searches_with_match":1,"bytes_searched":13008,"bytes_printed":627,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/config/findpaths.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"    \"\"\"Loads pytest configuration from the given file path, if supported.\n"},"line_number":35,"absolute_offset":831,"submatches":[{"match":{"text":"pytest"},"start":13,"end":19}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"    Return None if the file does not contain valid pytest configuration.\n"},"line_number":37,"absolute_offset":906,"submatches":[{"match":{"text":"pytest"},"start":51,"end":57}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"    # configuration from ini files are obtained from the [pytest] section, if present.\n"},"line_number":40,"absolute_offset":988,"submatches":[{"match":{"text":"pytest"},"start":58,"end":64}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"        if \"pytest\" in iniconfig:\n"},"line_number":44,"absolute_offset":1155,"submatches":[{"match":{"text":"pytest"},"start":12,"end":18}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"            return dict(iniconfig[\"pytest\"].items())\n"},"line_number":45,"absolute_offset":1189,"submatches":[{"match":{"text":"pytest"},"start":35,"end":41}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"            # \"pytest.ini\" files are always the source of configuration, even if empty\n"},"line_number":47,"absolute_offset":1256,"submatches":[{"match":{"text":"pytest"},"start":15,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"            if filepath.basename == \"pytest.ini\":\n"},"line_number":48,"absolute_offset":1343,"submatches":[{"match":{"text":"pytest"},"start":37,"end":43}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"    # '.cfg' files are considered if they contain a \"[tool:pytest]\" section\n"},"line_number":51,"absolute_offset":1420,"submatches":[{"match":{"text":"pytest"},"start":59,"end":65}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"        if \"tool:pytest\" in iniconfig.sections:\n"},"line_number":55,"absolute_offset":1578,"submatches":[{"match":{"text":"pytest"},"start":17,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"            return dict(iniconfig[\"tool:pytest\"].items())\n"},"line_number":56,"absolute_offset":1626,"submatches":[{"match":{"text":"pytest"},"start":40,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"        elif \"pytest\" in iniconfig.sections:\n"},"line_number":57,"absolute_offset":1684,"submatches":[{"match":{"text":"pytest"},"start":14,"end":20}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"            # If a setup.cfg contains a \"[pytest]\" section, we raise a failure to indicate users that\n"},"line_number":58,"absolute_offset":1729,"submatches":[{"match":{"text":"pytest"},"start":42,"end":48}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"            # plain \"[pytest]\" sections in setup.cfg files is no longer supported (#3086).\n"},"line_number":59,"absolute_offset":1831,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"    # '.toml' files are considered if they contain a [tool.pytest.ini_options] table\n"},"line_number":62,"absolute_offset":2004,"submatches":[{"match":{"text":"pytest"},"start":59,"end":65}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"        result = config.get(\"tool\", {}).get(\"pytest\", {}).get(\"ini_options\", None)\n"},"line_number":68,"absolute_offset":2187,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"    Search in the list of arguments for a valid ini-file for pytest,\n"},"line_number":87,"absolute_offset":2956,"submatches":[{"match":{"text":"pytest"},"start":61,"end":67}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"        \"pytest.ini\",\n"},"line_number":91,"absolute_offset":3110,"submatches":[{"match":{"text":"pytest"},"start":9,"end":15}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"lines":{"text":"CFG_PYTEST_SECTION = \"[pytest] section in {filename} files is no longer supported, change to [tool:pytest] instead.\"\n"},"line_number":156,"absolute_offset":5154,"submatches":[{"match":{"text":"pytest"},"start":23,"end":29},{"match":{"text":"pytest"},"start":99,"end":105}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/config/findpaths.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":233500,"human":"0.000234s"},"searches":1,"searches_with_match":1,"bytes_searched":7121,"bytes_printed":5009,"matched_lines":18,"matches":19}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/assertion/util.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/util.py"},"lines":{"text":"    Unless --verbose is used this will skip leading and trailing\n"},"line_number":196,"absolute_offset":6464,"submatches":[{"match":{"text":"skip"},"start":39,"end":43}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/util.py"},"lines":{"text":"    # see https://github.com/pytest-dev/pytest/issues/3333\n"},"line_number":233,"absolute_offset":7845,"submatches":[{"match":{"text":"pytest"},"start":29,"end":35},{"match":{"text":"pytest"},"start":40,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/util.py"},"lines":{"text":"    # dynamic import to speedup pytest\n"},"line_number":270,"absolute_offset":9004,"submatches":[{"match":{"text":"pytest"},"start":32,"end":38}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/util.py"},"lines":{"text":"    # see https://github.com/pytest-dev/pytest/issues/3333\n"},"line_number":289,"absolute_offset":9726,"submatches":[{"match":{"text":"pytest"},"start":29,"end":35},{"match":{"text":"pytest"},"start":40,"end":46}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/util.py"},"lines":{"text":"        # items\" longer explanation, so skip it\n"},"line_number":327,"absolute_offset":11091,"submatches":[{"match":{"text":"skip"},"start":40,"end":44}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/assertion/util.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":103334,"human":"0.000103s"},"searches":1,"searches_with_match":1,"bytes_searched":15839,"bytes_printed":1433,"matched_lines":5,"matches":7}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/cacheprovider.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"ignores the external pytest-cache\n"},"line_number":5,"absolute_offset":110,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"import pytest\n"},"line_number":20,"absolute_offset":375,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"from _pytest.reports import TestReport\n"},"line_number":34,"absolute_offset":855,"submatches":[{"match":{"text":"TestReport"},"start":28,"end":38}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"# pytest cache directory #\n"},"line_number":38,"absolute_offset":918,"submatches":[{"match":{"text":"pytest"},"start":2,"end":8}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"This directory contains data from the pytest's cache plugin,\n"},"line_number":40,"absolute_offset":946,"submatches":[{"match":{"text":"pytest"},"start":38,"end":44}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"See [the docs](https://docs.pytest.org/en/latest/cache.html) for more information.\n"},"line_number":45,"absolute_offset":1130,"submatches":[{"match":{"text":"pytest"},"start":28,"end":34}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"# This file is a cache directory tag created by pytest.\n"},"line_number":50,"absolute_offset":1291,"submatches":[{"match":{"text":"pytest"},"start":48,"end":54}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"        msg = \"# Created by pytest automatically.\\n*\\n\"\n"},"line_number":170,"absolute_offset":5785,"submatches":[{"match":{"text":"pytest"},"start":28,"end":34}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":182,"absolute_offset":6197,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"    @pytest.hookimpl\n"},"line_number":229,"absolute_offset":8017,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"    def pytest_runtest_logreport(self, report: TestReport) -> None:\n"},"line_number":275,"absolute_offset":9862,"submatches":[{"match":{"text":"TestReport"},"start":47,"end":57}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True, tryfirst=True)\n"},"line_number":290,"absolute_offset":10528,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True, tryfirst=True)\n"},"line_number":362,"absolute_offset":13504,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"@pytest.hookimpl(tryfirst=True)\n"},"line_number":465,"absolute_offset":16892,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":472,"absolute_offset":17144,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/cacheprovider.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":367084,"human":"0.000367s"},"searches":1,"searches_with_match":1,"bytes_searched":19640,"bytes_printed":3689,"matched_lines":15,"matches":15}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/config/__init__.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"hookimpl = HookimplMarker(\"pytest\")\n"},"line_number":69,"absolute_offset":1857,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"hookspec = HookspecMarker(\"pytest\")\n"},"line_number":70,"absolute_offset":1893,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"    Encodes the valid exit codes by pytest.\n"},"line_number":77,"absolute_offset":1996,"submatches":[{"match":{"text":"pytest"},"start":36,"end":42}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"    #: pytest was interrupted\n"},"line_number":86,"absolute_offset":2191,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"    #: pytest was misused\n"},"line_number":90,"absolute_offset":2304,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"    #: pytest couldn't find tests\n"},"line_number":92,"absolute_offset":2350,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"    \"\"\"filters tracebacks entries which point to pytest internals or importlib.\n"},"line_number":115,"absolute_offset":2946,"submatches":[{"match":{"text":"pytest"},"start":49,"end":55}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"    \"\"\"pytest's CLI entry point.\n"},"line_number":174,"absolute_offset":5032,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"    \"skipping\",\n"},"line_number":232,"absolute_offset":6606,"submatches":[{"match":{"text":"skipping"},"start":5,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"    into pytest to run tests into an IDE.\n"},"line_number":287,"absolute_offset":7902,"submatches":[{"match":{"text":"pytest"},"start":9,"end":15}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"    Overwrites :py:class:`pluggy.PluginManager <pluggy.PluginManager>` to add pytest-specific\n"},"line_number":324,"absolute_offset":9044,"submatches":[{"match":{"text":"pytest"},"start":78,"end":84}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        super().__init__(\"pytest\")\n"},"line_number":335,"absolute_offset":9434,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        # pytest hooks are always prefixed with pytest_\n"},"line_number":366,"absolute_offset":10831,"submatches":[{"match":{"text":"pytest"},"start":10,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"            # https://github.com/pytest-dev/pytest/issues/4562\n"},"line_number":387,"absolute_offset":11612,"submatches":[{"match":{"text":"pytest"},"start":33,"end":39},{"match":{"text":"pytest"},"start":44,"end":50}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"                # https://github.com/pytest-dev/pytest/issues/4562\n"},"line_number":401,"absolute_offset":12238,"submatches":[{"match":{"text":"pytest"},"start":37,"end":43},{"match":{"text":"pytest"},"start":48,"end":54}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        # we should remove tryfirst/trylast as markers\n"},"line_number":445,"absolute_offset":14008,"submatches":[{"match":{"text":"markers"},"start":47,"end":54}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"            \"markers\",\n"},"line_number":447,"absolute_offset":14096,"submatches":[{"match":{"text":"markers"},"start":13,"end":20}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"            \"markers\",\n"},"line_number":452,"absolute_offset":14317,"submatches":[{"match":{"text":"markers"},"start":13,"end":20}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"                \"  https://docs.pytest.org/en/latest/deprecations.html#pytest-plugins-in-non-top-level-conftest-files\"\n"},"line_number":592,"absolute_offset":19914,"submatches":[{"match":{"text":"pytest"},"start":32,"end":38},{"match":{"text":"pytest"},"start":71,"end":77}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        src/pytest_mock/__init__.py\n"},"line_number":763,"absolute_offset":25990,"submatches":[{"match":{"text":"src"},"start":8,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        src/pytest_mock/_version.py\n"},"line_number":764,"absolute_offset":26026,"submatches":[{"match":{"text":"src"},"start":8,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        src/pytest_mock/plugin.py\n"},"line_number":765,"absolute_offset":26062,"submatches":[{"match":{"text":"src"},"start":8,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        src/pytest_mock.egg-info/PKG-INFO\n"},"line_number":766,"absolute_offset":26096,"submatches":[{"match":{"text":"src"},"start":8,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        https://github.com/pytest-dev/pytest-mock/issues/167\n"},"line_number":774,"absolute_offset":26341,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33},{"match":{"text":"pytest"},"start":38,"end":44}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        # \"src\" based source trees for example)\n"},"line_number":795,"absolute_offset":27221,"submatches":[{"match":{"text":"src"},"start":11,"end":14}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        Object containing the parameters regarding the ``pytest.main``\n"},"line_number":819,"absolute_offset":27965,"submatches":[{"match":{"text":"pytest"},"start":57,"end":63}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        \"\"\"Holds parameters passed during ``pytest.main()``\n"},"line_number":825,"absolute_offset":28118,"submatches":[{"match":{"text":"pytest"},"start":44,"end":50}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"            ini option are handled by pytest, not being included in the ``args`` attribute.\n"},"line_number":834,"absolute_offset":28361,"submatches":[{"match":{"text":"pytest"},"start":38,"end":44}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        \"\"\"tuple of command-line arguments as passed to ``pytest.main()``.\"\"\"\n"},"line_number":840,"absolute_offset":28613,"submatches":[{"match":{"text":"pytest"},"start":58,"end":64}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        \"\"\"directory where ``pytest.main()`` was invoked from.\"\"\"\n"},"line_number":844,"absolute_offset":28856,"submatches":[{"match":{"text":"pytest"},"start":29,"end":35}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        self._parser.addini(\"minversion\", \"minimally required pytest version\")\n"},"line_number":1014,"absolute_offset":35264,"submatches":[{"match":{"text":"pytest"},"start":62,"end":68}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"            \"plugins that must be present for pytest to run\",\n"},"line_number":1017,"absolute_offset":35404,"submatches":[{"match":{"text":"pytest"},"start":46,"end":52}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        all pytest plugins.\n"},"line_number":1047,"absolute_offset":36543,"submatches":[{"match":{"text":"pytest"},"start":12,"end":18}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        import pytest\n"},"line_number":1128,"absolute_offset":39676,"submatches":[{"match":{"text":"pytest"},"start":15,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"                raise pytest.UsageError(\n"},"line_number":1136,"absolute_offset":39922,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"            if Version(minver) > Version(pytest.__version__):\n"},"line_number":1140,"absolute_offset":40059,"submatches":[{"match":{"text":"pytest"},"start":41,"end":47}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"                raise pytest.UsageError(\n"},"line_number":1141,"absolute_offset":40121,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"                    \"%s: 'minversion' requires pytest-%s, actual pytest-%s'\"\n"},"line_number":1142,"absolute_offset":40162,"submatches":[{"match":{"text":"pytest"},"start":47,"end":53},{"match":{"text":"pytest"},"start":65,"end":71}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"                    % (self.inifile, minver, pytest.__version__,)\n"},"line_number":1143,"absolute_offset":40239,"submatches":[{"match":{"text":"pytest"},"start":45,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"    def getoption(self, name: str, default=notset, skip: bool = False):\n"},"line_number":1327,"absolute_offset":47600,"submatches":[{"match":{"text":"skip"},"start":51,"end":55}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        :arg skip: if True raise pytest.skip if option does not exists\n"},"line_number":1333,"absolute_offset":47926,"submatches":[{"match":{"text":"skip"},"start":13,"end":17},{"match":{"text":"pytest"},"start":33,"end":39},{"match":{"text":"skip"},"start":40,"end":44}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"            if val is None and skip:\n"},"line_number":1339,"absolute_offset":48146,"submatches":[{"match":{"text":"skip"},"start":31,"end":35}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"            if skip:\n"},"line_number":1345,"absolute_offset":48354,"submatches":[{"match":{"text":"skip"},"start":15,"end":19}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"                import pytest\n"},"line_number":1346,"absolute_offset":48375,"submatches":[{"match":{"text":"pytest"},"start":23,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"                pytest.skip(\"no {!r} option found\".format(name))\n"},"line_number":1348,"absolute_offset":48406,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22},{"match":{"text":"skip"},"start":23,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        \"\"\" (deprecated, use getoption(skip=True)) \"\"\"\n"},"line_number":1356,"absolute_offset":48726,"submatches":[{"match":{"text":"skip"},"start":39,"end":43}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/config/__init__.py"},"lines":{"text":"        return self.getoption(name, skip=True)\n"},"line_number":1357,"absolute_offset":48781,"submatches":[{"match":{"text":"skip"},"start":36,"end":40}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/config/__init__.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":582875,"human":"0.000583s"},"searches":1,"searches_with_match":1,"bytes_searched":51092,"bytes_printed":12334,"matched_lines":47,"matches":55}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/capture.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"import pytest\n"},"line_number":18,"absolute_offset":326,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"    running pytest with the --pdb option this means the readline module is not\n"},"line_number":74,"absolute_offset":1939,"submatches":[{"match":{"text":"pytest"},"start":12,"end":18}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"    See https://github.com/pytest-dev/pytest/pull/1281\n"},"line_number":83,"absolute_offset":2459,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33},{"match":{"text":"pytest"},"start":38,"end":44}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"    See https://github.com/pytest-dev/py/issues/103\n"},"line_number":112,"absolute_offset":3638,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"@pytest.hookimpl(hookwrapper=True)\n"},"line_number":150,"absolute_offset":4754,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"            \"pytest: reading from stdin while output is captured!  Consider using `-s`.\"\n"},"line_number":217,"absolute_offset":6702,"submatches":[{"match":{"text":"pytest"},"start":13,"end":19}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":721,"absolute_offset":23092,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"        if isinstance(collector, pytest.File):\n"},"line_number":723,"absolute_offset":23195,"submatches":[{"match":{"text":"pytest"},"start":33,"end":39}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":736,"absolute_offset":23639,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":741,"absolute_offset":23823,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"    @pytest.hookimpl(hookwrapper=True)\n"},"line_number":746,"absolute_offset":24005,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"    @pytest.hookimpl(tryfirst=True)\n"},"line_number":751,"absolute_offset":24195,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"    @pytest.hookimpl(tryfirst=True)\n"},"line_number":755,"absolute_offset":24318,"submatches":[{"match":{"text":"pytest"},"start":5,"end":11}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":823,"absolute_offset":26764,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":840,"absolute_offset":27359,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":857,"absolute_offset":27974,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/capture.py"},"lines":{"text":"@pytest.fixture\n"},"line_number":874,"absolute_offset":28565,"submatches":[{"match":{"text":"pytest"},"start":1,"end":7}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/capture.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":518833,"human":"0.000519s"},"searches":1,"searches_with_match":1,"bytes_searched":29167,"bytes_printed":4034,"matched_lines":17,"matches":18}}}
{"type":"begin","data":{"path":{"text":"src/pytest/__main__.py"}}}
{"type":"match","data":{"path":{"text":"src/pytest/__main__.py"},"lines":{"text":"pytest entry point\n"},"line_number":2,"absolute_offset":4,"submatches":[{"match":{"text":"pytest"},"start":0,"end":6}]}}
{"type":"match","data":{"path":{"text":"src/pytest/__main__.py"},"lines":{"text":"import pytest\n"},"line_number":4,"absolute_offset":27,"submatches":[{"match":{"text":"pytest"},"start":7,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/pytest/__main__.py"},"lines":{"text":"    raise SystemExit(pytest.console_main())\n"},"line_number":7,"absolute_offset":69,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27}]}}
{"type":"end","data":{"path":{"text":"src/pytest/__main__.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":28083,"human":"0.000028s"},"searches":1,"searches_with_match":1,"bytes_searched":113,"bytes_printed":704,"matched_lines":3,"matches":3}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/mark/structures.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"    if requested_mark in (\"\", None, \"skip\"):\n"},"line_number":58,"absolute_offset":1375,"submatches":[{"match":{"text":"skip"},"start":37,"end":41}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"        mark = MARK_GEN.skip(reason=reason)\n"},"line_number":59,"absolute_offset":1420,"submatches":[{"match":{"text":"skip"},"start":24,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"    elif requested_mark == \"xfail\":\n"},"line_number":60,"absolute_offset":1464,"submatches":[{"match":{"text":"xfail"},"start":28,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"        mark = MARK_GEN.xfail(reason=reason, run=False)\n"},"line_number":61,"absolute_offset":1500,"submatches":[{"match":{"text":"xfail"},"start":24,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"            #   @pytest.mark.parametrize(('x', 'y'), [1, 2])\n"},"line_number":128,"absolute_offset":3651,"submatches":[{"match":{"text":"pytest"},"start":17,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"    MarkDecorators are created with ``pytest.mark``::\n"},"line_number":255,"absolute_offset":8417,"submatches":[{"match":{"text":"pytest"},"start":38,"end":44}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"        mark1 = pytest.mark.NAME              # Simple MarkDecorator\n"},"line_number":257,"absolute_offset":8472,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"        mark2 = pytest.mark.NAME(name1=value) # Parametrized MarkDecorator\n"},"line_number":258,"absolute_offset":8541,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"# Typing for builtin pytest marks. This is cheating; it gives builtin marks\n"},"line_number":383,"absolute_offset":12848,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"    a ``pytest.mark`` singleton instance.\n"},"line_number":455,"absolute_offset":15457,"submatches":[{"match":{"text":"pytest"},"start":8,"end":14}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"         import pytest\n"},"line_number":459,"absolute_offset":15515,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"         @pytest.mark.slowtest\n"},"line_number":461,"absolute_offset":15539,"submatches":[{"match":{"text":"pytest"},"start":10,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"        skip = None  # type: _SkipMarkDecorator\n"},"line_number":473,"absolute_offset":15826,"submatches":[{"match":{"text":"skip"},"start":8,"end":12}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"        skipif = None  # type: _SkipifMarkDecorator\n"},"line_number":474,"absolute_offset":15874,"submatches":[{"match":{"text":"skipif"},"start":8,"end":14}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"        xfail = None  # type: _XfailMarkDecorator\n"},"line_number":475,"absolute_offset":15926,"submatches":[{"match":{"text":"xfail"},"start":8,"end":13}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"            # We store a set of markers as a performance optimisation - if a mark\n"},"line_number":485,"absolute_offset":16368,"submatches":[{"match":{"text":"markers"},"start":32,"end":39}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"                for line in self._config.getini(\"markers\"):\n"},"line_number":489,"absolute_offset":16647,"submatches":[{"match":{"text":"markers"},"start":49,"end":56}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"                    # example lines: \"skipif(condition): skip the given test if...\"\n"},"line_number":490,"absolute_offset":16707,"submatches":[{"match":{"text":"skipif"},"start":38,"end":44},{"match":{"text":"skip"},"start":57,"end":61}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"                        \"{!r} not found in `markers` configuration option\".format(name),\n"},"line_number":501,"absolute_offset":17320,"submatches":[{"match":{"text":"markers"},"start":44,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"                    \"Unknown pytest.mark.%s - is this a typo?  You can register \"\n"},"line_number":511,"absolute_offset":17795,"submatches":[{"match":{"text":"pytest"},"start":29,"end":35}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/structures.py"},"lines":{"text":"                    \"https://docs.pytest.org/en/latest/mark.html\" % name,\n"},"line_number":513,"absolute_offset":17954,"submatches":[{"match":{"text":"pytest"},"start":34,"end":40}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/mark/structures.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":2068374,"human":"0.002068s"},"searches":1,"searches_with_match":1,"bytes_searched":19157,"bytes_printed":5569,"matched_lines":21,"matches":22}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/assertion/rewrite.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/rewrite.py"},"lines":{"text":"# pytest caches rewritten pycs in pycache dirs\n"},"line_number":50,"absolute_offset":1148,"submatches":[{"match":{"text":"pytest"},"start":2,"end":8}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/rewrite.py"},"lines":{"text":"PYTEST_TAG = \"{}-pytest-{}\".format(sys.implementation.cache_tag, version)\n"},"line_number":51,"absolute_offset":1195,"submatches":[{"match":{"text":"pytest"},"start":17,"end":23}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/rewrite.py"},"lines":{"text":"        # concurrent pytest processes rewriting and loading pycs. To avoid\n"},"line_number":142,"absolute_offset":4883,"submatches":[{"match":{"text":"pytest"},"start":21,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/rewrite.py"},"lines":{"text":"        state.trace(\"early skip of rewriting module: {}\".format(name))\n"},"line_number":208,"absolute_offset":7839,"submatches":[{"match":{"text":"skip"},"start":27,"end":31}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/rewrite.py"},"lines":{"text":"    \"\"\"Possibly read a pytest pyc containing rewritten code.\n"},"line_number":367,"absolute_offset":13510,"submatches":[{"match":{"text":"pytest"},"start":23,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/rewrite.py"},"lines":{"text":"def _get_assertion_exprs(src: bytes) -> Dict[int, str]:\n"},"line_number":543,"absolute_offset":18697,"submatches":[{"match":{"text":"src"},"start":25,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/rewrite.py"},"lines":{"text":"    tokens = tokenize.tokenize(io.BytesIO(src).readline)\n"},"line_number":561,"absolute_offset":19294,"submatches":[{"match":{"text":"src"},"start":42,"end":45}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/rewrite.py"},"lines":{"text":"        # Use pytest.assertion.util._reprcompare if that's available.\n"},"line_number":1063,"absolute_offset":40962,"submatches":[{"match":{"text":"pytest"},"start":14,"end":20}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/assertion/rewrite.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":366291,"human":"0.000366s"},"searches":1,"searches_with_match":1,"bytes_searched":42695,"bytes_printed":2204,"matched_lines":8,"matches":8}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/mark/__init__.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"    \"\"\"Specify a parameter in `pytest.mark.parametrize`_ calls or\n"},"line_number":45,"absolute_offset":1285,"submatches":[{"match":{"text":"pytest"},"start":31,"end":37}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"        @pytest.mark.parametrize(\n"},"line_number":50,"absolute_offset":1442,"submatches":[{"match":{"text":"pytest"},"start":9,"end":15}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"            [(\"3+5\", 8), pytest.param(\"6*9\", 42, marks=pytest.mark.xfail),],\n"},"line_number":52,"absolute_offset":1511,"submatches":[{"match":{"text":"pytest"},"start":25,"end":31},{"match":{"text":"pytest"},"start":55,"end":61},{"match":{"text":"xfail"},"start":67,"end":72}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"        \"--markers\",\n"},"line_number":97,"absolute_offset":3330,"submatches":[{"match":{"text":"markers"},"start":11,"end":18}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"        help=\"show markers (builtin, plugin and per-project ones).\",\n"},"line_number":99,"absolute_offset":3380,"submatches":[{"match":{"text":"markers"},"start":19,"end":26}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"    parser.addini(\"markers\", \"markers for test functions\", \"linelist\")\n"},"line_number":102,"absolute_offset":3456,"submatches":[{"match":{"text":"markers"},"start":19,"end":26},{"match":{"text":"markers"},"start":30,"end":37}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"    if config.option.markers:\n"},"line_number":110,"absolute_offset":3743,"submatches":[{"match":{"text":"markers"},"start":21,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"        for line in config.getini(\"markers\"):\n"},"line_number":113,"absolute_offset":3863,"submatches":[{"match":{"text":"markers"},"start":35,"end":42}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"            tw.write(\"@pytest.mark.%s:\" % name, bold=True)\n"},"line_number":117,"absolute_offset":4031,"submatches":[{"match":{"text":"pytest"},"start":23,"end":29}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"        import pytest\n"},"line_number":148,"absolute_offset":4945,"submatches":[{"match":{"text":"pytest"},"start":15,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"            if not isinstance(node, (pytest.Instance, pytest.Session)):\n"},"line_number":151,"absolute_offset":5006,"submatches":[{"match":{"text":"pytest"},"start":37,"end":43},{"match":{"text":"pytest"},"start":54,"end":60}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"        # add the markers to the keywords as we no longer handle them correctly\n"},"line_number":162,"absolute_offset":5472,"submatches":[{"match":{"text":"markers"},"start":18,"end":25}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"        # To be removed in pytest 7.0.0.\n"},"line_number":183,"absolute_offset":6099,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"        # To be removed in pytest 7.0.0.\n"},"line_number":188,"absolute_offset":6293,"submatches":[{"match":{"text":"pytest"},"start":27,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"    \"\"\"A matcher for markers which are present.\n"},"line_number":217,"absolute_offset":7118,"submatches":[{"match":{"text":"markers"},"start":21,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"    if empty_parameterset not in (\"skip\", \"xfail\", \"fail_at_collect\", None, \"\"):\n"},"line_number":269,"absolute_offset":8556,"submatches":[{"match":{"text":"skip"},"start":35,"end":39},{"match":{"text":"xfail"},"start":43,"end":48}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"lines":{"text":"            \"{!s} must be one of skip, xfail or fail_at_collect\"\n"},"line_number":271,"absolute_offset":8663,"submatches":[{"match":{"text":"skip"},"start":33,"end":37},{"match":{"text":"xfail"},"start":39,"end":44}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/mark/__init__.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":676334,"human":"0.000676s"},"searches":1,"searches_with_match":1,"bytes_searched":8940,"bytes_printed":4679,"matched_lines":17,"matches":23}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/assertion/__init__.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/assertion/__init__.py"},"lines":{"text":"    # so for example not in the master process of pytest-xdist\n"},"line_number":109,"absolute_offset":3615,"submatches":[{"match":{"text":"pytest"},"start":50,"end":56}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/assertion/__init__.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":124042,"human":"0.000124s"},"searches":1,"searches_with_match":1,"bytes_searched":6413,"bytes_printed":344,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/_code/code.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/_code/code.py"},"lines":{"text":"        # FYI this is called from pytest-xdist's serialization of exception\n"},"line_number":917,"absolute_offset":32560,"submatches":[{"match":{"text":"pytest"},"start":34,"end":40}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/_code/code.py"},"lines":{"text":"        # highlight the code but not the indentation, which may contain markers\n"},"line_number":1053,"absolute_offset":37182,"submatches":[{"match":{"text":"markers"},"start":72,"end":79}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/_code/code.py"},"lines":{"text":"    * internal traceback from pytest or its internal libraries, py and pluggy.\n"},"line_number":1212,"absolute_offset":42523,"submatches":[{"match":{"text":"pytest"},"start":30,"end":36}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/_code/code.py"},"lines":{"text":"    # see https://bitbucket.org/pytest-dev/py/issues/71\n"},"line_number":1216,"absolute_offset":42721,"submatches":[{"match":{"text":"pytest"},"start":32,"end":38}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/_code/code.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":174167,"human":"0.000174s"},"searches":1,"searches_with_match":1,"bytes_searched":43191,"bytes_printed":1149,"matched_lines":4,"matches":4}}}
{"type":"begin","data":{"path":{"text":"src/pytest/__init__.py"}}}
{"type":"match","data":{"path":{"text":"src/pytest/__init__.py"},"lines":{"text":"pytest: unit and functional testing with Python.\n"},"line_number":3,"absolute_offset":28,"submatches":[{"match":{"text":"pytest"},"start":0,"end":6}]}}
{"type":"match","data":{"path":{"text":"src/pytest/__init__.py"},"lines":{"text":"from _pytest.outcomes import skip\n"},"line_number":30,"absolute_offset":1049,"submatches":[{"match":{"text":"skip"},"start":29,"end":33}]}}
{"type":"match","data":{"path":{"text":"src/pytest/__init__.py"},"lines":{"text":"from _pytest.outcomes import xfail\n"},"line_number":31,"absolute_offset":1083,"submatches":[{"match":{"text":"xfail"},"start":29,"end":34}]}}
{"type":"match","data":{"path":{"text":"src/pytest/__init__.py"},"lines":{"text":"    \"skip\",\n"},"line_number":94,"absolute_offset":2805,"submatches":[{"match":{"text":"skip"},"start":5,"end":9}]}}
{"type":"match","data":{"path":{"text":"src/pytest/__init__.py"},"lines":{"text":"    \"xfail\",\n"},"line_number":97,"absolute_offset":2848,"submatches":[{"match":{"text":"xfail"},"start":5,"end":10}]}}
{"type":"end","data":{"path":{"text":"src/pytest/__init__.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":349791,"human":"0.000350s"},"searches":1,"searches_with_match":1,"bytes_searched":2884,"bytes_printed":1155,"matched_lines":5,"matches":5}}}
{"type":"begin","data":{"path":{"text":"src/_pytest/fixtures.py"}}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"    import pytest\n"},"line_number":147,"absolute_offset":4415,"submatches":[{"match":{"text":"pytest"},"start":11,"end":17}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"    cls = pytest.Package\n"},"line_number":149,"absolute_offset":4434,"submatches":[{"match":{"text":"pytest"},"start":10,"end":16}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"        \"\"\" the pytest config object associated with this request. \"\"\"\n"},"line_number":490,"absolute_offset":18949,"submatches":[{"match":{"text":"pytest"},"start":16,"end":22}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"        \"\"\" keywords/markers dictionary for the underlying node. \"\"\"\n"},"line_number":528,"absolute_offset":20381,"submatches":[{"match":{"text":"markers"},"start":21,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"        \"\"\" pytest session object. \"\"\"\n"},"line_number":533,"absolute_offset":20522,"submatches":[{"match":{"text":"pytest"},"start":12,"end":18}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"            created by a call to ``pytest.mark.NAME(...)``.\n"},"line_number":555,"absolute_offset":21482,"submatches":[{"match":{"text":"pytest"},"start":35,"end":41}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"        :raise pytest.FixtureLookupError:\n"},"line_number":578,"absolute_offset":22457,"submatches":[{"match":{"text":"pytest"},"start":15,"end":21}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"            msg += \"\\n use 'pytest --fixtures [testpath]' for help on them.\"\n"},"line_number":858,"absolute_offset":33922,"submatches":[{"match":{"text":"pytest"},"start":28,"end":34}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"        \"See https://docs.pytest.org/en/latest/fixture.html for more information about fixtures, and\\n\"\n"},"line_number":1151,"absolute_offset":45186,"submatches":[{"match":{"text":"pytest"},"start":26,"end":32}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"        \"https://docs.pytest.org/en/latest/deprecations.html#calling-fixtures-directly about how to update your code.\"\n"},"line_number":1152,"absolute_offset":45290,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"    modules or classes can use the ``pytest.mark.usefixtures(fixturename)``\n"},"line_number":1264,"absolute_offset":49101,"submatches":[{"match":{"text":"pytest"},"start":37,"end":43}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"                ``@pytest.fixture(name='<fixturename>')``.\n"},"line_number":1304,"absolute_offset":51249,"submatches":[{"match":{"text":"pytest"},"start":19,"end":25}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"        Use :py:func:`pytest.fixture` directly instead.\n"},"line_number":1376,"absolute_offset":53428,"submatches":[{"match":{"text":"pytest"},"start":22,"end":28}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"    pytest fixtures definitions and information is stored and managed\n"},"line_number":1414,"absolute_offset":54231,"submatches":[{"match":{"text":"pytest"},"start":4,"end":10}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"    - usefixtures markers at module/class/function level\n"},"line_number":1432,"absolute_offset":55037,"submatches":[{"match":{"text":"markers"},"start":18,"end":25}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"        Check https://github.com/pytest-dev/pytest/issues/5036\n"},"line_number":1461,"absolute_offset":56269,"submatches":[{"match":{"text":"pytest"},"start":33,"end":39},{"match":{"text":"pytest"},"start":44,"end":50}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"                    markers = list(metafunc.definition.iter_markers(\"parametrize\"))\n"},"line_number":1582,"absolute_offset":61404,"submatches":[{"match":{"text":"markers"},"start":20,"end":27}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"                    for parametrize_mark in markers:\n"},"line_number":1583,"absolute_offset":61488,"submatches":[{"match":{"text":"markers"},"start":44,"end":51}]}}
{"type":"match","data":{"path":{"text":"src/_pytest/fixtures.py"},"lines":{"text":"            # when pytest itself calls the fixture function\n"},"line_number":1638,"absolute_offset":63795,"submatches":[{"match":{"text":"pytest"},"start":19,"end":25}]}}
{"type":"end","data":{"path":{"text":"src/_pytest/fixtures.py"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":1733249,"human":"0.001733s"},"searches":1,"searches_with_match":1,"bytes_searched":65780,"bytes_printed":5044,"matched_lines":19,"matches":20}}}
{"data":{"elapsed_total":{"human":"0.075262s","nanos":75262146,"secs":0},"stats":{"bytes_printed":170036,"bytes_searched":878886,"elapsed":{"human":"0.084946s","nanos":84945933,"secs":0},"matched_lines":646,"matches":724,"searches":50,"searches_with_match":50}},"type":"summary"}
